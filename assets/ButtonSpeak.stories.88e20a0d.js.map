{"version":3,"file":"ButtonSpeak.stories.88e20a0d.js","sources":["../../src/components/Icons/Edit.jsx","../../src/components/ButtonSpeak/ButtonSpeak.jsx"],"sourcesContent":["import * as React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Edit = props => (\n  <motion.svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n    {' '}\n    <path d=\"M 18 2 L 15.585938 4.4140625 L 19.585938 8.4140625 L 22 6 L 18 2 z M 14.076172 5.9238281 L 3 17 L 3 21 L 7 21 L 18.076172 9.9238281 L 14.076172 5.9238281 z\" />\n  </motion.svg>\n);\n\nexport default Edit;\n","/**\n * @file ButtonSpeak.js\n */\nimport * as React from 'react'\nimport { motion } from 'framer-motion'\n\nimport s from './ButtonSpeak.module.css'\n\nimport Edit from '../Icons/Edit'\n\nconst ButtonSpeak = (\n  {\n    tagName: Tag = 'button',\n    className = 'fixed flex items-center justify-center rounded-full outline-none dark:focus:outline-white focus:outline-black focus:outline-4 outline-dashed right-12 bottom-12 duration-400',\n    variant = 'default',\n    onMouseEnter = () => {},\n    onMouseLeave = () => {},\n    onClick = () => {},\n    motionVariants = {\n      initial: {\n        opacity: 0,\n      },\n      animate: {\n        opacity: 1,\n      },\n      exit: {\n        opacity: 0,\n      },\n      tap: { scale: 0.75, duration: 0.45, ease: [0.4, 0, 0.2, 1] },\n      hover: { scale: 1.25, duration: 0.45, ease: [0.4, 0, 0.2, 1] },\n      focus: { scale: 1.25, duration: 0.45, ease: [0.4, 0, 0.2, 1] },\n    },\n  },\n  ref\n) => {\n  return (\n    <Tag\n      className={`${s.button_speak} ${\n        s[`button_speak__${variant}`]\n      } ${className} h-[84px] w-[84px]`}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n      ref={ref}\n    >\n      <motion.div\n        whileTap=\"tap\"\n        whileHover=\"hover\"\n        whileFocus=\"focus\"\n        animate=\"animate\"\n        exit=\"exit\"\n        initial=\"initial\"\n        variants={motionVariants}\n        className=\"absolute top-0 left-0 w-full h-full transition ease-out bg-black rounded-full dark:bg-white active:bg-red-800 hover:bg-red-ff duration-400\"\n      />\n      <Edit className=\"pointer-events-none absolute fill-white dark:fill-black w-[24px] h-[24px]\" />\n    </Tag>\n  )\n}\n\nexport default React.memo(React.forwardRef(ButtonSpeak))\n"],"names":["Edit","props","_jsxs","motion","_jsx","ButtonSpeak","__name","tagName","Tag","className","variant","onMouseEnter","onMouseLeave","onClick","motionVariants","initial","opacity","animate","exit","tap","scale","duration","ease","hover","focus","ref","s","button_speak","ButtonSpeak$1","React"],"mappings":"0ZAGAA,EAAAC,EAAAA,GACAC,EAAAC,EAAA,IAAA,CAAA,MAAA,6BAAA,QAAA,YAAA,GAAAF,EAAA,SAAA,CACA,IACAG,EAAA,OAAA,CAAA,EAAA,6JAAA,CAAA,CAAA,CAAA,CAEA,EALAH,oICOA,MAAAI,EAAAC,EAAA,CACA,CACAC,QAAAC,EAAA,SACAC,UAAAA,EAAA,+KACAC,QAAAA,EAAA,UACAC,aAAAA,EAAAL,EAAA,IAAA,CAAA,EAAA,gBACAM,aAAAA,EAAAN,EAAA,IAAA,CAAA,EAAA,gBACAO,QAAAA,EAAAP,EAAA,IAAA,CAAA,EAAA,WACAQ,eAAAA,EAAA,CACAC,QAAA,CACAC,QAAA,CACA,EACAC,QAAA,CACAD,QAAA,CACA,EACAE,KAAA,CACAF,QAAA,CACA,EACAG,IAAA,CAAAC,MAAA,IAAAC,SAAA,IAAAC,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA,EACAC,MAAA,CAAAH,MAAA,KAAAC,SAAA,IAAAC,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA,EACAE,MAAA,CAAAJ,MAAA,KAAAC,SAAA,IAAAC,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA,CACA,CACA,EACAG,MAGAjB,EAAA,CACA,UAAA,GAAAkB,EAAAC,gBACAD,EAAA,iBAAAhB,QACAD,sBACA,aAAAE,EACA,aAAAC,EACA,QAAAC,EACA,IAAAY,EAAA,SAEA,CAAArB,EAAAD,EAAA,IAAA,CACA,SAAA,MACA,WAAA,QACA,WAAA,QACA,QAAA,UACA,KAAA,OACA,QAAA,UACA,SAAAW,EACA,UAAA,4IAAA,CACA,EACAV,EAAAJ,EAAA,CAAA,UAAA,2EAAA,CAAA,CAAA,CAAA,CACA,EA9CA,eAkDA4B,EAAAC,eAAAA,EAAAA,QAAAA,WAAAxB,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;"}