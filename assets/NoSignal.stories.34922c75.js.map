{"version":3,"file":"NoSignal.stories.34922c75.js","sources":["../../src/components/NoSignal/NoSignal.jsx"],"sourcesContent":["/**\n * @file NoSignal.js\n * @see https://codepen.io/wheatup/pen/PgqwPy\n */\nimport * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport s from './NoSignal.module.css'\n\nclass Utils {\n  static randomColor() {\n    return Math.round(Math.random() * 0xffffff)\n  }\n\n  static randomSaturatedColor() {\n    let col = Math.round(Math.random() * 0xff)\n    return (col << 16) | (col << 8) | col\n  }\n\n  static mulColor(color, factor) {\n    let r = (color & 0xff0000) >> 16\n    let g = (color & 0xff00) >> 8\n    let b = color & 0xff\n    r = Math.min(Math.round(r * factor), 0xff)\n    g = Math.min(Math.round(g * factor), 0xff)\n    b = Math.min(Math.round(b * factor), 0xff)\n    return (r << 16) | (g << 8) | b\n  }\n}\n\nclass Canvas {\n  constructor(context) {\n    this.canvas = context.canvas\n    this.context = context\n    this.pixelSize = 4\n    this.pixels = []\n    this.onResize()\n    this.tick = 0\n    this.lines = [\n      { pos: 50, height: 28, speed: 0.281 },\n      { pos: 80, height: 16, speed: 1.129 },\n    ]\n  }\n\n  onResize() {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n    this.canvas.width = this.width\n    this.canvas.height = this.height\n    this.pixels.length = 0\n  }\n\n  start() {}\n\n  update() {\n    let pixelWidth = Math.ceil(this.width / this.pixelSize)\n    let pixelHeight = Math.ceil(this.height / this.pixelSize)\n    let adjacent = 0\n    for (let y = 0; y < pixelHeight; y++) {\n      let inLine = this.isInLine(y, pixelHeight)\n      for (let x = 0; x < pixelWidth; x++) {\n        let index = x + y * pixelWidth\n        let col\n        if (adjacent <= 0) {\n          adjacent = 1 + Math.floor(Math.random() * 3)\n          col = Utils.randomSaturatedColor()\n          col = inLine ? Utils.mulColor(col, 0.55) : Utils.mulColor(col, 0.4)\n        } else {\n          col = this.pixels[index - 1]\n          col = Utils.mulColor(col, 0.8)\n        }\n        this.pixels[index] = col\n\n        adjacent--\n      }\n    }\n    this.updateLines(pixelHeight)\n    this.linePos %= pixelHeight\n    this.renderPixels()\n  }\n\n  updateLines(pixelHeight) {\n    this.lines.forEach(\n      (line) => (line.pos = (line.pos + line.speed) % pixelHeight)\n    )\n  }\n\n  isInLine(y, pixelHeight) {\n    return this.lines.some(\n      (line) =>\n        (y >= line.pos && y < line.pos + line.height) ||\n        (line.pos + line.height > pixelHeight &&\n          y < line.pos - pixelHeight + line.height)\n    )\n  }\n\n  renderPixels() {\n    let pixelWidth = Math.ceil(this.width / this.pixelSize)\n    for (let i = 0; i < this.pixels.length; i++) {\n      let x = i % pixelWidth\n      let y = Math.floor(i / pixelWidth)\n      this.context.fillStyle = '#' + this.pixels[i].toString(16)\n      this.context.fillRect(\n        x * this.pixelSize,\n        y * this.pixelSize,\n        this.pixelSize,\n        this.pixelSize\n      )\n    }\n  }\n}\n\nconst NoSignal = ({\n  tagName: Tag = 'div',\n  className = 'absolute top-0 left-0 z-0 w-screen h-screen',\n  variant = 'default',\n  children = '',\n}) => {\n  useLayoutEffect(() => {\n    const canvas = new Canvas(\n      document.getElementsByTagName('canvas')[0].getContext('2d')\n    )\n\n    canvas.start()\n\n    const tick = () => {\n      canvas.update()\n      requestAnimationFrame(tick)\n    }\n    requestAnimationFrame(tick)\n\n    window.addEventListener('resize', canvas.onResize.bind(canvas))\n    return () =>\n      window.removeEventListener('resize', canvas.onResize.bind(canvas))\n  }, [])\n\n  return (\n    <Tag\n      className={`${s.no_signal} ${s[`no_signal__${variant}`]} ${className}`}\n    >\n      <canvas />\n    </Tag>\n  )\n}\n\nNoSignal.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default NoSignal\n"],"names":["Utils","randomColor","Math","round","random","randomSaturatedColor","col","mulColor","color","factor","r","g","b","min","Canvas","constructor","context","canvas","pixelSize","pixels","onResize","tick","lines","pos","height","speed","width","window","innerWidth","innerHeight","length","start","update","pixelWidth","ceil","pixelHeight","adjacent","y","inLine","isInLine","x","index","floor","updateLines","linePos","renderPixels","forEach","line","some","i","fillStyle","toString","fillRect","NoSignal","__name","tagName","Tag","className","variant","children","useLayoutEffect","document","getElementsByTagName","getContext","requestAnimationFrame","addEventListener","bind","removeEventListener","s","no_signal","_jsx","propTypes","PropTypes","string","oneOf","node","NoSignal$1"],"mappings":"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"}