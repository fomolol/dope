{"version":3,"file":"RandomGrid.stories.ada73e18.js","sources":["../../src/components/RandomGrid/RandomGrid.jsx"],"sourcesContent":["/**\n * @file RandomGrid.js\n */\nimport { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './RandomGrid.module.css'\n\nconst RandomCorners = ({ left = 73, top = 45 }) => {\n  return (\n    <div\n      className=\"absolute z-10 text-black\"\n      style={{\n        left: `${left}%`,\n        top: `${top}%`,\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"30\"\n        height=\"30\"\n        viewBox=\"0 0 100 100\"\n        stroke=\"current\"\n        fill=\"none\"\n        strokeWidth=\"8\"\n        className=\"text-current stroke-current\"\n      >\n        <path d=\"M0 0 L0 16 M0 0 L16 0\" transform=\"rotate(0, 50, 50)\"></path>\n        <path d=\"M0 0 L0 16 M0 0 L16 0\" transform=\"rotate(90, 50, 50)\"></path>\n        <path d=\"M0 0 L0 16 M0 0 L16 0\" transform=\"rotate(180, 50, 50)\"></path>\n        <path d=\"M0 0 L0 16 M0 0 L16 0\" transform=\"rotate(270, 50, 50)\"></path>\n      </svg>\n    </div>\n  )\n}\nconst RandomGrid = ({\n  tagName: Tag = 'div',\n  className = 'absolute top-0 left-0 w-full h-full',\n  variant = 'default',\n  children = '',\n  count = 6,\n}) => {\n  const [refresh, setRefresh] = useState(false)\n\n  useEffect(() => {\n    var int\n    const refreshGrid = () => {\n      int = setTimeout(() => setRefresh(!refresh), 2000)\n    }\n    refreshGrid()\n    return () => clearTimeout(int)\n  }, [refresh])\n\n  return (\n    <Tag\n      className={`${styles.random_grid} ${\n        styles[`random_grid__${variant}`]\n      } ${className}`}\n    >\n      {[...Array(count).keys()].map((_, i) => {\n        const rLeft = Math.floor(Math.random() * 100)\n        const rTop = Math.floor(Math.random() * 100)\n        return <RandomCorners key={`r-grid-${i}`} left={rLeft} top={rTop} />\n      })}\n    </Tag>\n  )\n}\n\nRandomGrid.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default RandomGrid\n"],"names":["RandomCorners","__name","left","top","_jsx","RandomGrid","tagName","Tag","className","variant","children","count","refresh","setRefresh","useState","useEffect","int","setTimeout","clearTimeout","styles","random_grid","Array","keys","map","_","i","rLeft","Math","floor","random","rTop","propTypes","PropTypes","string","oneOf","node","RandomGrid$1"],"mappings":"2VAQAA,EAAAC,EAAA,CAAA,CAAAC,KAAAA,EAAA,GAAAC,IAAAA,EAAA,EAAA,MAEA,MAAA,CACA,UAAA,2BACA,MAAA,CACAD,KAAA,GAAAA,KACAC,IAAA,GAAAA,IACA,EAAA,WAEA,MAAA,CACA,MAAA,6BACA,MAAA,KACA,OAAA,KACA,QAAA,cACA,OAAA,UACA,KAAA,OACA,YAAA,IACA,UAAA,8BAAA,SAEA,CAAAC,EAAA,OAAA,CAAA,EAAA,wBAAA,UAAA,mBAAA,CAAA,EACAA,EAAA,OAAA,CAAA,EAAA,wBAAA,UAAA,oBAAA,CAAA,EACAA,EAAA,OAAA,CAAA,EAAA,wBAAA,UAAA,qBAAA,CAAA,EACAA,EAAA,OAAA,CAAA,EAAA,wBAAA,UAAA,qBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAEA,EAxBA,iBA2BAC,EAAAJ,EAAA,CAAA,CACAK,QAAAC,EAAA,MACAC,UAAAA,EAAA,sCACAC,QAAAA,EAAA,UACAC,SAAAA,EAAA,GACAC,MAAAA,EAAA,CACA,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,mBAAA,EAAA,EAEAC,OAAAA,EAAAA,QAAAA,UAAA,IAAA,CACAC,IAAAA,EAIA,OAHAf,EAAA,IAAA,CACAe,EAAAC,WAAA,IAAAJ,EAAA,CAAAD,CAAA,EAAA,GAAA,CAAA,EADA,iBAIA,IAAAM,aAAAF,CAAA,CAAA,EACA,CAAAJ,CAAA,CAAA,IAGAL,EAAA,CACA,UAAA,GAAAY,EAAAC,eACAD,EAAA,gBAAAV,QACAD,IAAA,SAEA,CAAA,GAAAa,MAAAV,CAAA,EAAAW,KAAA,CAAA,EAAAC,IAAA,CAAAC,EAAAC,IAAA,CACA,MAAAC,EAAAC,KAAAC,MAAAD,KAAAE,OAAAA,EAAA,GAAA,EACAC,EAAAH,KAAAC,MAAAD,KAAAE,OAAAA,EAAA,GAAA,EACA,SAAA7B,EAAA,CAAA,KAAA0B,EAAA,IAAAI,CAAA,EAAA,UAAAL,GAAA,CAAA,CACA,CAAA,CACA,CAEA,EA/BA,cAiCApB,EAAA0B,UAAA,CACAzB,QAAA0B,EAAAC,QAAAA,OACAzB,UAAAwB,EAAAC,QAAAA,OACAxB,QAAAuB,EAAAA,QAAAE,MAAA,CAAA,SAAA,CAAA,EACAxB,SAAAsB,EAAAG,QAAAA,IACA,EAEA,MAAAC,EAAA/B;;;;;;;;;;;;;;;;;;;;"}