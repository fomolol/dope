{"version":3,"file":"Static.stories.6f104f97.js","sources":["../../src/components/Static/Static.jsx"],"sourcesContent":["/**\n * @file Static.js\n */\nimport * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { motion } from 'framer-motion'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport s from './Static.module.css'\n\nclass Canvas {\n  constructor(context) {\n    this.canvas = context.canvas\n    this.context = context\n    this.pixelSize = 4\n    this.pixels = []\n    this.onResize()\n    this.tick = 0\n    this.lines = [\n      { pos: 50, height: 28, speed: 0.281 },\n      { pos: 80, height: 16, speed: 1.129 },\n    ]\n  }\n\n  onResize() {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n    this.canvas.width = this.width\n    this.canvas.height = this.height\n    this.pixels.length = 0\n  }\n\n  start() {}\n\n  update() {\n    let pixelWidth = Math.ceil(this.width / this.pixelSize)\n    let pixelHeight = Math.ceil(this.height / this.pixelSize)\n    let adjacent = 0\n    for (let y = 0; y < pixelHeight; y++) {\n      let inLine = this.isInLine(y, pixelHeight)\n      for (let x = 0; x < pixelWidth; x++) {\n        let index = x + y * pixelWidth\n        let col\n        if (adjacent <= 0) {\n          adjacent = 1 + Math.floor(Math.random() * 3)\n          col = Utils.randomSaturatedColor()\n          col = inLine ? Utils.mulColor(col, 0.55) : Utils.mulColor(col, 0.4)\n        } else {\n          col = this.pixels[index - 1]\n          col = Utils.mulColor(col, 0.8)\n        }\n        this.pixels[index] = col\n\n        adjacent--\n      }\n    }\n    this.updateLines(pixelHeight)\n    this.linePos %= pixelHeight\n    this.renderPixels()\n  }\n\n  updateLines(pixelHeight) {\n    this.lines.forEach(\n      (line) => (line.pos = (line.pos + line.speed) % pixelHeight)\n    )\n  }\n\n  isInLine(y, pixelHeight) {\n    return this.lines.some(\n      (line) =>\n        (y >= line.pos && y < line.pos + line.height) ||\n        (line.pos + line.height > pixelHeight &&\n          y < line.pos - pixelHeight + line.height)\n    )\n  }\n\n  renderPixels() {\n    let pixelWidth = Math.ceil(this.width / this.pixelSize)\n    for (let i = 0; i < this.pixels.length; i++) {\n      let x = i % pixelWidth\n      let y = Math.floor(i / pixelWidth)\n      this.context.fillStyle = '#' + this.pixels[i].toString(16)\n      this.context.fillRect(\n        x * this.pixelSize,\n        y * this.pixelSize,\n        this.pixelSize,\n        this.pixelSize\n      )\n    }\n  }\n}\n\nclass Utils {\n  static randomColor() {\n    return Math.round(Math.random() * 0xffffff)\n  }\n\n  static randomSaturatedColor() {\n    let col = Math.round(Math.random() * 0xff)\n    return (col << 16) | (col << 8) | col\n  }\n\n  static mulColor(color, factor) {\n    let r = (color & 0xff0000) >> 16\n    let g = (color & 0xff00) >> 8\n    let b = color & 0xff\n    r = Math.min(Math.round(r * factor), 0xff)\n    g = Math.min(Math.round(g * factor), 0xff)\n    b = Math.min(Math.round(b * factor), 0xff)\n    return (r << 16) | (g << 8) | b\n  }\n}\n\nconst Static = ({\n  tagName: Tag = motion.canvas,\n  className = 'absolute inset-0 w-screen h-screen',\n  variant = 'default',\n  children = '',\n  loop = true,\n}) => {\n  const cRef = React.useRef()\n\n  function init() {\n    const context = cRef.current.getContext('2d')\n    const canvas = new Canvas(context)\n    canvas.start()\n    const tick = function () {\n      // Helps memory?\n      context.clearRect(0, 0, canvas.width, canvas.height)\n      canvas.update()\n      if (loop) {\n        requestAnimationFrame(tick)\n      }\n    }\n    tick()\n\n    window.addEventListener('resize', tick)\n  }\n\n  useLayoutEffect(() => {\n    init()\n  }, [])\n\n  return (\n    <Tag\n      className={`${s.static} ${s[`static__${variant}`]} ${className}`}\n      initial={{\n        opacity: 0,\n      }}\n      animate={{\n        opacity: 1,\n      }}\n      exit={{\n        opacity: 0,\n      }}\n      transition={{\n        duration: 1,\n        ease: [0.6, 0.05, -0.01, 0.9],\n      }}\n      ref={cRef}\n    >\n      {children}\n    </Tag>\n  )\n}\n\nStatic.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default Static\n"],"names":["Canvas","constructor","context","canvas","pixelSize","pixels","onResize","tick","lines","pos","height","speed","width","window","innerWidth","innerHeight","length","start","update","pixelWidth","Math","ceil","pixelHeight","adjacent","y","inLine","isInLine","x","index","col","floor","random","Utils","randomSaturatedColor","mulColor","updateLines","linePos","renderPixels","forEach","line","some","i","fillStyle","toString","fillRect","randomColor","round","color","factor","r","g","b","min","Static","__name","tagName","Tag","motion","className","variant","children","loop","cRef","React","init","current","getContext","clearRect","requestAnimationFrame","addEventListener","useLayoutEffect","s","static","opacity","duration","ease","propTypes","PropTypes","string","oneOf","node","Static$1"],"mappings":"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"}