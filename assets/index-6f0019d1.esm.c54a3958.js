var ry=Object.defineProperty;var h=(l,e)=>ry(l,"name",{value:e,configurable:!0});import{r as jt}from"./index.6015db55.js";import{g as sy}from"./iframe.1f35fd3c.js";import{j as oy}from"./jsx-runtime.547177f5.js";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Zc="147",ay={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ly={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},f0=0,mf=1,d0=2,cy=3,uy=0,ed=1,td=2,so=3,fs=0,Hn=1,Ji=2,Ki=0,as=1,gf=2,vf=3,xf=4,p0=5,es=100,m0=101,g0=102,_f=103,yf=104,v0=200,x0=201,_0=202,y0=203,nd=204,id=205,M0=206,S0=207,w0=208,b0=209,T0=210,E0=0,A0=1,C0=2,Uc=3,P0=4,L0=5,R0=6,I0=7,Na=0,D0=1,N0=2,gi=0,z0=1,F0=2,O0=3,rd=4,k0=5,Jc=300,Tr=301,Er=302,Ma=303,Sa=304,_o=306,wa=1e3,_n=1001,ba=1002,Qt=1003,Bc=1004,hy=1004,Vc=1005,fy=1005,Gt=1006,sd=1007,dy=1007,vs=1008,py=1008,Ar=1009,U0=1010,B0=1011,od=1012,V0=1013,yr=1014,ji=1015,co=1016,H0=1017,W0=1018,ls=1020,G0=1021,X0=1022,Bn=1023,q0=1024,Y0=1025,Sr=1026,ds=1027,Z0=1028,J0=1029,j0=1030,Q0=1031,K0=1033,Rc=33776,Ic=33777,Dc=33778,Nc=33779,Mf=35840,Sf=35841,wf=35842,bf=35843,$0=36196,Tf=37492,Ef=37496,Af=37808,Cf=37809,Pf=37810,Lf=37811,Rf=37812,If=37813,Df=37814,Nf=37815,zf=37816,Ff=37817,Of=37818,kf=37819,Uf=37820,Bf=37821,Vf=36492,ev=2200,tv=2201,nv=2202,Ta=2300,Ea=2301,zc=2302,ns=2400,is=2401,Aa=2402,jc=2500,ad=2501,my=0,gy=1,vy=2,$i=3e3,Lt=3001,iv=3200,rv=3201,Pr=0,sv=1,xy="",pi="srgb",uo="srgb-linear",_y=0,Fc=7680,yy=7681,My=7682,Sy=7683,wy=34055,by=34056,Ty=5386,Ey=512,Ay=513,Cy=514,Py=515,Ly=516,Ry=517,Iy=518,ov=519,Ca=35044,Dy=35048,Ny=35040,zy=35045,Fy=35049,Oy=35041,ky=35046,Uy=35050,By=35042,Vy="100",Hf="300 es",Hc=1035;class Pi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}h(Pi,"EventDispatcher");const vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Um=1234567;const cs=Math.PI/180,Pa=180/Math.PI;function Wn(){const l=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(vn[l&255]+vn[l>>8&255]+vn[l>>16&255]+vn[l>>24&255]+"-"+vn[e&255]+vn[e>>8&255]+"-"+vn[e>>16&15|64]+vn[e>>24&255]+"-"+vn[t&63|128]+vn[t>>8&255]+"-"+vn[t>>16&255]+vn[t>>24&255]+vn[n&255]+vn[n>>8&255]+vn[n>>16&255]+vn[n>>24&255]).toLowerCase()}h(Wn,"generateUUID");function Xt(l,e,t){return Math.max(e,Math.min(t,l))}h(Xt,"clamp");function ld(l,e){return(l%e+e)%e}h(ld,"euclideanModulo");function Hy(l,e,t,n,i){return n+(l-e)*(i-n)/(t-e)}h(Hy,"mapLinear");function Wy(l,e,t){return l!==e?(t-l)/(e-l):0}h(Wy,"inverseLerp");function va(l,e,t){return(1-t)*l+t*e}h(va,"lerp");function Gy(l,e,t,n){return va(l,e,1-Math.exp(-t*n))}h(Gy,"damp");function Xy(l,e=1){return e-Math.abs(ld(l,e*2)-e)}h(Xy,"pingpong");function qy(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*(3-2*l))}h(qy,"smoothstep");function Yy(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*l*(l*(l*6-15)+10))}h(Yy,"smootherstep");function Zy(l,e){return l+Math.floor(Math.random()*(e-l+1))}h(Zy,"randInt");function Jy(l,e){return l+Math.random()*(e-l)}h(Jy,"randFloat");function jy(l){return l*(.5-Math.random())}h(jy,"randFloatSpread");function Qy(l){l!==void 0&&(Um=l);let e=Um+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}h(Qy,"seededRandom");function Ky(l){return l*cs}h(Ky,"degToRad");function $y(l){return l*Pa}h($y,"radToDeg");function Wf(l){return(l&l-1)===0&&l!==0}h(Wf,"isPowerOfTwo");function av(l){return Math.pow(2,Math.ceil(Math.log(l)/Math.LN2))}h(av,"ceilPowerOfTwo");function Wc(l){return Math.pow(2,Math.floor(Math.log(l)/Math.LN2))}h(Wc,"floorPowerOfTwo");function e1(l,e,t,n,i){const r=Math.cos,a=Math.sin,c=r(t/2),u=a(t/2),f=r((e+n)/2),p=a((e+n)/2),m=r((e-n)/2),g=a((e-n)/2),x=r((n-e)/2),M=a((n-e)/2);switch(i){case"XYX":l.set(c*p,u*m,u*g,c*f);break;case"YZY":l.set(u*g,c*p,u*m,c*f);break;case"ZXZ":l.set(u*m,u*g,c*p,c*f);break;case"XZX":l.set(c*p,u*M,u*x,c*f);break;case"YXY":l.set(u*x,c*p,u*M,c*f);break;case"ZYZ":l.set(u*M,u*x,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}h(e1,"setQuaternionFromProperEuler");function Qi(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return l/65535;case Uint8Array:return l/255;case Int16Array:return Math.max(l/32767,-1);case Int8Array:return Math.max(l/127,-1);default:throw new Error("Invalid component type.")}}h(Qi,"denormalize");function Pt(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return Math.round(l*65535);case Uint8Array:return Math.round(l*255);case Int16Array:return Math.round(l*32767);case Int8Array:return Math.round(l*127);default:throw new Error("Invalid component type.")}}h(Pt,"normalize");var t1=Object.freeze({__proto__:null,DEG2RAD:cs,RAD2DEG:Pa,generateUUID:Wn,clamp:Xt,euclideanModulo:ld,mapLinear:Hy,inverseLerp:Wy,lerp:va,damp:Gy,pingpong:Xy,smoothstep:qy,smootherstep:Yy,randInt:Zy,randFloat:Jy,randFloatSpread:jy,seededRandom:Qy,degToRad:Ky,radToDeg:$y,isPowerOfTwo:Wf,ceilPowerOfTwo:av,floorPowerOfTwo:Wc,setQuaternionFromProperEuler:e1,normalize:Pt,denormalize:Qi});class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}h(fe,"Vector2");class yn{constructor(){yn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,c,u,f){const p=this.elements;return p[0]=e,p[1]=i,p[2]=c,p[3]=t,p[4]=r,p[5]=u,p[6]=n,p[7]=a,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[3],u=n[6],f=n[1],p=n[4],m=n[7],g=n[2],x=n[5],M=n[8],y=i[0],_=i[3],w=i[6],E=i[1],b=i[4],A=i[7],P=i[2],L=i[5],O=i[8];return r[0]=a*y+c*E+u*P,r[3]=a*_+c*b+u*L,r[6]=a*w+c*A+u*O,r[1]=f*y+p*E+m*P,r[4]=f*_+p*b+m*L,r[7]=f*w+p*A+m*O,r[2]=g*y+x*E+M*P,r[5]=g*_+x*b+M*L,r[8]=g*w+x*A+M*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],f=e[7],p=e[8];return t*a*p-t*c*f-n*r*p+n*c*u+i*r*f-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],f=e[7],p=e[8],m=p*a-c*f,g=c*u-p*r,x=f*r-a*u,M=t*m+n*g+i*x;if(M===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/M;return e[0]=m*y,e[1]=(i*f-p*n)*y,e[2]=(c*n-i*a)*y,e[3]=g*y,e[4]=(p*t-i*u)*y,e[5]=(i*r-c*t)*y,e[6]=x*y,e[7]=(n*u-f*t)*y,e[8]=(a*t-n*r)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,c){const u=Math.cos(r),f=Math.sin(r);return this.set(n*u,n*f,-n*(u*a+f*c)+a+e,-i*f,i*u,-i*(-f*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Ah.makeScale(e,t)),this}rotate(e){return this.premultiply(Ah.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ah.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}h(yn,"Matrix3");const Ah=new yn;function lv(l){for(let e=l.length-1;e>=0;--e)if(l[e]>=65535)return!0;return!1}h(lv,"arrayNeedsUint32");const n1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function oo(l,e){return new n1[l](e)}h(oo,"getTypedArray");function La(l){return document.createElementNS("http://www.w3.org/1999/xhtml",l)}h(La,"createElementNS");function us(l){return l<.04045?l*.0773993808:Math.pow(l*.9478672986+.0521327014,2.4)}h(us,"SRGBToLinear");function Oc(l){return l<.0031308?l*12.92:1.055*Math.pow(l,.41666)-.055}h(Oc,"LinearToSRGB");const Ch={[pi]:{[uo]:us},[uo]:{[pi]:Oc}},xn={legacyMode:!0,get workingColorSpace(){return uo},set workingColorSpace(l){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(l,e,t){if(this.legacyMode||e===t||!e||!t)return l;if(Ch[e]&&Ch[e][t]!==void 0){const n=Ch[e][t];return l.r=n(l.r),l.g=n(l.g),l.b=n(l.b),l}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(l,e){return this.convert(l,this.workingColorSpace,e)},toWorkingColorSpace:function(l,e){return this.convert(l,e,this.workingColorSpace)}},cv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$t={r:0,g:0,b:0},hi={h:0,s:0,l:0},Vl={h:0,s:0,l:0};function Ph(l,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?l+(e-l)*6*t:t<1/2?e:t<2/3?l+(e-l)*6*(2/3-t):l}h(Ph,"hue2rgb");function Hl(l,e){return e.r=l.r,e.g=l.g,e.b=l.b,e}h(Hl,"toComponents");class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=pi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,xn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=xn.workingColorSpace){return this.r=e,this.g=t,this.b=n,xn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=xn.workingColorSpace){if(e=ld(e,1),t=Xt(t,0,1),n=Xt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Ph(a,r,e+1/3),this.g=Ph(a,r,e),this.b=Ph(a,r,e-1/3)}return xn.toWorkingColorSpace(this,i),this}setStyle(e,t=pi){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}h(n,"handleAlpha");let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,xn.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,xn.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){const u=parseFloat(r[1])/360,f=parseFloat(r[2])/100,p=parseFloat(r[3])/100;return n(r[4]),this.setHSL(u,f,p,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,xn.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,xn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=pi){const n=cv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=us(e.r),this.g=us(e.g),this.b=us(e.b),this}copyLinearToSRGB(e){return this.r=Oc(e.r),this.g=Oc(e.g),this.b=Oc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=pi){return xn.fromWorkingColorSpace(Hl(this,$t),e),Xt($t.r*255,0,255)<<16^Xt($t.g*255,0,255)<<8^Xt($t.b*255,0,255)<<0}getHexString(e=pi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=xn.workingColorSpace){xn.fromWorkingColorSpace(Hl(this,$t),t);const n=$t.r,i=$t.g,r=$t.b,a=Math.max(n,i,r),c=Math.min(n,i,r);let u,f;const p=(c+a)/2;if(c===a)u=0,f=0;else{const m=a-c;switch(f=p<=.5?m/(a+c):m/(2-a-c),a){case n:u=(i-r)/m+(i<r?6:0);break;case i:u=(r-n)/m+2;break;case r:u=(n-i)/m+4;break}u/=6}return e.h=u,e.s=f,e.l=p,e}getRGB(e,t=xn.workingColorSpace){return xn.fromWorkingColorSpace(Hl(this,$t),t),e.r=$t.r,e.g=$t.g,e.b=$t.b,e}getStyle(e=pi){return xn.fromWorkingColorSpace(Hl(this,$t),e),e!==pi?`color(${e} ${$t.r} ${$t.g} ${$t.b})`:`rgb(${$t.r*255|0},${$t.g*255|0},${$t.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(hi),hi.h+=e,hi.s+=t,hi.l+=n,this.setHSL(hi.h,hi.s,hi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(hi),e.getHSL(Vl);const n=va(hi.h,Vl.h,t),i=va(hi.s,Vl.s,t),r=va(hi.l,Vl.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}h(Le,"Color");Le.NAMES=cv;let ks;class Qc{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ks===void 0&&(ks=La("canvas")),ks.width=e.width,ks.height=e.height;const n=ks.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ks}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=La("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=us(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(us(t[n]/255)*255):t[n]=us(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}h(Qc,"ImageUtils");class Mr{constructor(e=null){this.isSource=!0,this.uuid=Wn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?r.push(Lh(i[a].image)):r.push(Lh(i[a]))}else r=Lh(i);n.url=r}return t||(e.images[this.uuid]=n),n}}h(Mr,"Source");function Lh(l){return typeof HTMLImageElement<"u"&&l instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&l instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&l instanceof ImageBitmap?Qc.getDataURL(l):l.data?{data:Array.from(l.data),width:l.width,height:l.height,type:l.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}h(Lh,"serializeImage");let i1=0;class zt extends Pi{constructor(e=zt.DEFAULT_IMAGE,t=zt.DEFAULT_MAPPING,n=_n,i=_n,r=Gt,a=vs,c=Bn,u=Ar,f=zt.DEFAULT_ANISOTROPY,p=$i){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:i1++}),this.uuid=Wn(),this.name="",this.source=new Mr(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case wa:e.x=e.x-Math.floor(e.x);break;case _n:e.x=e.x<0?0:1;break;case ba:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case wa:e.y=e.y-Math.floor(e.y);break;case _n:e.y=e.y<0?0:1;break;case ba:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}h(zt,"Texture");zt.DEFAULT_IMAGE=null;zt.DEFAULT_MAPPING=Jc;zt.DEFAULT_ANISOTROPY=1;class bt{constructor(e=0,t=0,n=0,i=1){bt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,f=u[0],p=u[4],m=u[8],g=u[1],x=u[5],M=u[9],y=u[2],_=u[6],w=u[10];if(Math.abs(p-g)<.01&&Math.abs(m-y)<.01&&Math.abs(M-_)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+y)<.1&&Math.abs(M+_)<.1&&Math.abs(f+x+w-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(f+1)/2,A=(x+1)/2,P=(w+1)/2,L=(p+g)/4,O=(m+y)/4,C=(M+_)/4;return b>A&&b>P?b<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(b),i=L/n,r=O/n):A>P?A<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(A),n=L/i,r=C/i):P<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(P),n=O/r,i=C/r),this.set(n,i,r,t),this}let E=Math.sqrt((_-M)*(_-M)+(m-y)*(m-y)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(_-M)/E,this.y=(m-y)/E,this.z=(g-p)/E,this.w=Math.acos((f+x+w-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}h(bt,"Vector4");class Gn extends Pi{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new bt(0,0,e,t),this.scissorTest=!1,this.viewport=new bt(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new zt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Gt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Mr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}h(Gn,"WebGLRenderTarget");class yo extends zt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=_n,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}h(yo,"DataArrayTexture");class uv extends Gn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new yo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}h(uv,"WebGLArrayRenderTarget");class za extends zt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=_n,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}h(za,"Data3DTexture");class hv extends Gn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new za(null,e,t,n),this.texture.isRenderTargetTexture=!0}}h(hv,"WebGL3DRenderTarget");class fv extends Gn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}h(fv,"WebGLMultipleRenderTargets");class An{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,c){let u=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=r[a+0],x=r[a+1],M=r[a+2],y=r[a+3];if(c===0){e[t+0]=u,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(c===1){e[t+0]=g,e[t+1]=x,e[t+2]=M,e[t+3]=y;return}if(m!==y||u!==g||f!==x||p!==M){let _=1-c;const w=u*g+f*x+p*M+m*y,E=w>=0?1:-1,b=1-w*w;if(b>Number.EPSILON){const P=Math.sqrt(b),L=Math.atan2(P,w*E);_=Math.sin(_*L)/P,c=Math.sin(c*L)/P}const A=c*E;if(u=u*_+g*A,f=f*_+x*A,p=p*_+M*A,m=m*_+y*A,_===1-c){const P=1/Math.sqrt(u*u+f*f+p*p+m*m);u*=P,f*=P,p*=P,m*=P}}e[t]=u,e[t+1]=f,e[t+2]=p,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,r,a){const c=n[i],u=n[i+1],f=n[i+2],p=n[i+3],m=r[a],g=r[a+1],x=r[a+2],M=r[a+3];return e[t]=c*M+p*m+u*x-f*g,e[t+1]=u*M+p*g+f*m-c*x,e[t+2]=f*M+p*x+c*g-u*m,e[t+3]=p*M-c*m-u*g-f*x,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,c=Math.cos,u=Math.sin,f=c(n/2),p=c(i/2),m=c(r/2),g=u(n/2),x=u(i/2),M=u(r/2);switch(a){case"XYZ":this._x=g*p*m+f*x*M,this._y=f*x*m-g*p*M,this._z=f*p*M+g*x*m,this._w=f*p*m-g*x*M;break;case"YXZ":this._x=g*p*m+f*x*M,this._y=f*x*m-g*p*M,this._z=f*p*M-g*x*m,this._w=f*p*m+g*x*M;break;case"ZXY":this._x=g*p*m-f*x*M,this._y=f*x*m+g*p*M,this._z=f*p*M+g*x*m,this._w=f*p*m-g*x*M;break;case"ZYX":this._x=g*p*m-f*x*M,this._y=f*x*m+g*p*M,this._z=f*p*M-g*x*m,this._w=f*p*m+g*x*M;break;case"YZX":this._x=g*p*m+f*x*M,this._y=f*x*m+g*p*M,this._z=f*p*M-g*x*m,this._w=f*p*m-g*x*M;break;case"XZY":this._x=g*p*m-f*x*M,this._y=f*x*m-g*p*M,this._z=f*p*M+g*x*m,this._w=f*p*m+g*x*M;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],c=t[5],u=t[9],f=t[2],p=t[6],m=t[10],g=n+c+m;if(g>0){const x=.5/Math.sqrt(g+1);this._w=.25/x,this._x=(p-u)*x,this._y=(r-f)*x,this._z=(a-i)*x}else if(n>c&&n>m){const x=2*Math.sqrt(1+n-c-m);this._w=(p-u)/x,this._x=.25*x,this._y=(i+a)/x,this._z=(r+f)/x}else if(c>m){const x=2*Math.sqrt(1+c-n-m);this._w=(r-f)/x,this._x=(i+a)/x,this._y=.25*x,this._z=(u+p)/x}else{const x=2*Math.sqrt(1+m-n-c);this._w=(a-i)/x,this._x=(r+f)/x,this._y=(u+p)/x,this._z=.25*x}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Xt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,c=t._x,u=t._y,f=t._z,p=t._w;return this._x=n*p+a*c+i*f-r*u,this._y=i*p+a*u+r*c-n*f,this._z=r*p+a*f+n*u-i*c,this._w=a*p-n*c-i*u-r*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+r*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const u=1-c*c;if(u<=Number.EPSILON){const x=1-t;return this._w=x*a+t*this._w,this._x=x*n+t*this._x,this._y=x*i+t*this._y,this._z=x*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const f=Math.sqrt(u),p=Math.atan2(f,c),m=Math.sin((1-t)*p)/f,g=Math.sin(t*p)/f;return this._w=a*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=r*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}h(An,"Quaternion");class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Bm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Bm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,c=e.z,u=e.w,f=u*t+a*i-c*n,p=u*n+c*t-r*i,m=u*i+r*n-a*t,g=-r*t-a*n-c*i;return this.x=f*u+g*-r+p*-c-m*-a,this.y=p*u+g*-a+m*-r-f*-c,this.z=m*u+g*-c+f*-a-p*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-r*c,this.y=r*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Rh.copy(this).projectOnVector(e),this.sub(Rh)}reflect(e){return this.sub(Rh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}h(N,"Vector3");const Rh=new N,Bm=new An;class Lr{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,f=e.length;u<f;u+=3){const p=e[u],m=e[u+1],g=e[u+2];p<t&&(t=p),m<n&&(n=m),g<i&&(i=g),p>r&&(r=p),m>a&&(a=m),g>c&&(c=g)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,f=e.count;u<f;u++){const p=e.getX(u),m=e.getY(u),g=e.getZ(u);p<t&&(t=p),m<n&&(n=m),g<i&&(i=g),p>r&&(r=p),m>a&&(a=m),g>c&&(c=g)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Xr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,c=r.count;a<c;a++)Xr.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Xr)}else n.boundingBox===null&&n.computeBoundingBox(),Ih.copy(n.boundingBox),Ih.applyMatrix4(e.matrixWorld),this.union(Ih);const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Xr),Xr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(sa),Wl.subVectors(this.max,sa),Us.subVectors(e.a,sa),Bs.subVectors(e.b,sa),Vs.subVectors(e.c,sa),fr.subVectors(Bs,Us),dr.subVectors(Vs,Bs),qr.subVectors(Us,Vs);let t=[0,-fr.z,fr.y,0,-dr.z,dr.y,0,-qr.z,qr.y,fr.z,0,-fr.x,dr.z,0,-dr.x,qr.z,0,-qr.x,-fr.y,fr.x,0,-dr.y,dr.x,0,-qr.y,qr.x,0];return!Dh(t,Us,Bs,Vs,Wl)||(t=[1,0,0,0,1,0,0,0,1],!Dh(t,Us,Bs,Vs,Wl))?!1:(Gl.crossVectors(fr,dr),t=[Gl.x,Gl.y,Gl.z],Dh(t,Us,Bs,Vs,Wl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Xr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Xr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Vi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Vi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Vi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Vi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Vi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Vi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Vi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Vi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Vi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}h(Lr,"Box3");const Vi=[new N,new N,new N,new N,new N,new N,new N,new N],Xr=new N,Ih=new Lr,Us=new N,Bs=new N,Vs=new N,fr=new N,dr=new N,qr=new N,sa=new N,Wl=new N,Gl=new N,Yr=new N;function Dh(l,e,t,n,i){for(let r=0,a=l.length-3;r<=a;r+=3){Yr.fromArray(l,r);const c=i.x*Math.abs(Yr.x)+i.y*Math.abs(Yr.y)+i.z*Math.abs(Yr.z),u=e.dot(Yr),f=t.dot(Yr),p=n.dot(Yr);if(Math.max(-Math.max(u,f,p),Math.min(u,f,p))>c)return!1}return!0}h(Dh,"satForAxes");const r1=new Lr,oa=new N,Nh=new N;class Rr{constructor(e=new N,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):r1.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;oa.subVectors(e,this.center);const t=oa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(oa,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Nh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(oa.copy(e.center).add(Nh)),this.expandByPoint(oa.copy(e.center).sub(Nh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}h(Rr,"Sphere");const Hi=new N,zh=new N,Xl=new N,pr=new N,Fh=new N,ql=new N,Oh=new N;class Mo{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hi.copy(this.direction).multiplyScalar(t).add(this.origin),Hi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){zh.copy(e).add(t).multiplyScalar(.5),Xl.copy(t).sub(e).normalize(),pr.copy(this.origin).sub(zh);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Xl),c=pr.dot(this.direction),u=-pr.dot(Xl),f=pr.lengthSq(),p=Math.abs(1-a*a);let m,g,x,M;if(p>0)if(m=a*u-c,g=a*c-u,M=r*p,m>=0)if(g>=-M)if(g<=M){const y=1/p;m*=y,g*=y,x=m*(m+a*g+2*c)+g*(a*m+g+2*u)+f}else g=r,m=Math.max(0,-(a*g+c)),x=-m*m+g*(g+2*u)+f;else g=-r,m=Math.max(0,-(a*g+c)),x=-m*m+g*(g+2*u)+f;else g<=-M?(m=Math.max(0,-(-a*r+c)),g=m>0?-r:Math.min(Math.max(-r,-u),r),x=-m*m+g*(g+2*u)+f):g<=M?(m=0,g=Math.min(Math.max(-r,-u),r),x=g*(g+2*u)+f):(m=Math.max(0,-(a*r+c)),g=m>0?r:Math.min(Math.max(-r,-u),r),x=-m*m+g*(g+2*u)+f);else g=a>0?-r:r,m=Math.max(0,-(a*g+c)),x=-m*m+g*(g+2*u)+f;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),i&&i.copy(Xl).multiplyScalar(g).add(zh),x}intersectSphere(e,t){Hi.subVectors(e.center,this.origin);const n=Hi.dot(this.direction),i=Hi.dot(Hi)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),c=n-a,u=n+a;return c<0&&u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,c,u;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(e.min.x-g.x)*f,i=(e.max.x-g.x)*f):(n=(e.max.x-g.x)*f,i=(e.min.x-g.x)*f),p>=0?(r=(e.min.y-g.y)*p,a=(e.max.y-g.y)*p):(r=(e.max.y-g.y)*p,a=(e.min.y-g.y)*p),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),m>=0?(c=(e.min.z-g.z)*m,u=(e.max.z-g.z)*m):(c=(e.max.z-g.z)*m,u=(e.min.z-g.z)*m),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Hi)!==null}intersectTriangle(e,t,n,i,r){Fh.subVectors(t,e),ql.subVectors(n,e),Oh.crossVectors(Fh,ql);let a=this.direction.dot(Oh),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;pr.subVectors(this.origin,e);const u=c*this.direction.dot(ql.crossVectors(pr,ql));if(u<0)return null;const f=c*this.direction.dot(Fh.cross(pr));if(f<0||u+f>a)return null;const p=-c*pr.dot(Oh);return p<0?null:this.at(p/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}h(Mo,"Ray");class tt{constructor(){tt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,c,u,f,p,m,g,x,M,y,_){const w=this.elements;return w[0]=e,w[4]=t,w[8]=n,w[12]=i,w[1]=r,w[5]=a,w[9]=c,w[13]=u,w[2]=f,w[6]=p,w[10]=m,w[14]=g,w[3]=x,w[7]=M,w[11]=y,w[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new tt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Hs.setFromMatrixColumn(e,0).length(),r=1/Hs.setFromMatrixColumn(e,1).length(),a=1/Hs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),f=Math.sin(i),p=Math.cos(r),m=Math.sin(r);if(e.order==="XYZ"){const g=a*p,x=a*m,M=c*p,y=c*m;t[0]=u*p,t[4]=-u*m,t[8]=f,t[1]=x+M*f,t[5]=g-y*f,t[9]=-c*u,t[2]=y-g*f,t[6]=M+x*f,t[10]=a*u}else if(e.order==="YXZ"){const g=u*p,x=u*m,M=f*p,y=f*m;t[0]=g+y*c,t[4]=M*c-x,t[8]=a*f,t[1]=a*m,t[5]=a*p,t[9]=-c,t[2]=x*c-M,t[6]=y+g*c,t[10]=a*u}else if(e.order==="ZXY"){const g=u*p,x=u*m,M=f*p,y=f*m;t[0]=g-y*c,t[4]=-a*m,t[8]=M+x*c,t[1]=x+M*c,t[5]=a*p,t[9]=y-g*c,t[2]=-a*f,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const g=a*p,x=a*m,M=c*p,y=c*m;t[0]=u*p,t[4]=M*f-x,t[8]=g*f+y,t[1]=u*m,t[5]=y*f+g,t[9]=x*f-M,t[2]=-f,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const g=a*u,x=a*f,M=c*u,y=c*f;t[0]=u*p,t[4]=y-g*m,t[8]=M*m+x,t[1]=m,t[5]=a*p,t[9]=-c*p,t[2]=-f*p,t[6]=x*m+M,t[10]=g-y*m}else if(e.order==="XZY"){const g=a*u,x=a*f,M=c*u,y=c*f;t[0]=u*p,t[4]=-m,t[8]=f*p,t[1]=g*m+y,t[5]=a*p,t[9]=x*m-M,t[2]=M*m-x,t[6]=c*p,t[10]=y*m+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(s1,e,o1)}lookAt(e,t,n){const i=this.elements;return kn.subVectors(e,t),kn.lengthSq()===0&&(kn.z=1),kn.normalize(),mr.crossVectors(n,kn),mr.lengthSq()===0&&(Math.abs(n.z)===1?kn.x+=1e-4:kn.z+=1e-4,kn.normalize(),mr.crossVectors(n,kn)),mr.normalize(),Yl.crossVectors(kn,mr),i[0]=mr.x,i[4]=Yl.x,i[8]=kn.x,i[1]=mr.y,i[5]=Yl.y,i[9]=kn.y,i[2]=mr.z,i[6]=Yl.z,i[10]=kn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[4],u=n[8],f=n[12],p=n[1],m=n[5],g=n[9],x=n[13],M=n[2],y=n[6],_=n[10],w=n[14],E=n[3],b=n[7],A=n[11],P=n[15],L=i[0],O=i[4],C=i[8],I=i[12],k=i[1],G=i[5],ce=i[9],Q=i[13],W=i[2],te=i[6],ae=i[10],de=i[14],U=i[3],ee=i[7],q=i[11],j=i[15];return r[0]=a*L+c*k+u*W+f*U,r[4]=a*O+c*G+u*te+f*ee,r[8]=a*C+c*ce+u*ae+f*q,r[12]=a*I+c*Q+u*de+f*j,r[1]=p*L+m*k+g*W+x*U,r[5]=p*O+m*G+g*te+x*ee,r[9]=p*C+m*ce+g*ae+x*q,r[13]=p*I+m*Q+g*de+x*j,r[2]=M*L+y*k+_*W+w*U,r[6]=M*O+y*G+_*te+w*ee,r[10]=M*C+y*ce+_*ae+w*q,r[14]=M*I+y*Q+_*de+w*j,r[3]=E*L+b*k+A*W+P*U,r[7]=E*O+b*G+A*te+P*ee,r[11]=E*C+b*ce+A*ae+P*q,r[15]=E*I+b*Q+A*de+P*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],c=e[5],u=e[9],f=e[13],p=e[2],m=e[6],g=e[10],x=e[14],M=e[3],y=e[7],_=e[11],w=e[15];return M*(+r*u*m-i*f*m-r*c*g+n*f*g+i*c*x-n*u*x)+y*(+t*u*x-t*f*g+r*a*g-i*a*x+i*f*p-r*u*p)+_*(+t*f*m-t*c*x-r*a*m+n*a*x+r*c*p-n*f*p)+w*(-i*c*p-t*u*m+t*c*g+i*a*m-n*a*g+n*u*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],f=e[7],p=e[8],m=e[9],g=e[10],x=e[11],M=e[12],y=e[13],_=e[14],w=e[15],E=m*_*f-y*g*f+y*u*x-c*_*x-m*u*w+c*g*w,b=M*g*f-p*_*f-M*u*x+a*_*x+p*u*w-a*g*w,A=p*y*f-M*m*f+M*c*x-a*y*x-p*c*w+a*m*w,P=M*m*u-p*y*u-M*c*g+a*y*g+p*c*_-a*m*_,L=t*E+n*b+i*A+r*P;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const O=1/L;return e[0]=E*O,e[1]=(y*g*r-m*_*r-y*i*x+n*_*x+m*i*w-n*g*w)*O,e[2]=(c*_*r-y*u*r+y*i*f-n*_*f-c*i*w+n*u*w)*O,e[3]=(m*u*r-c*g*r-m*i*f+n*g*f+c*i*x-n*u*x)*O,e[4]=b*O,e[5]=(p*_*r-M*g*r+M*i*x-t*_*x-p*i*w+t*g*w)*O,e[6]=(M*u*r-a*_*r-M*i*f+t*_*f+a*i*w-t*u*w)*O,e[7]=(a*g*r-p*u*r+p*i*f-t*g*f-a*i*x+t*u*x)*O,e[8]=A*O,e[9]=(M*m*r-p*y*r-M*n*x+t*y*x+p*n*w-t*m*w)*O,e[10]=(a*y*r-M*c*r+M*n*f-t*y*f-a*n*w+t*c*w)*O,e[11]=(p*c*r-a*m*r-p*n*f+t*m*f+a*n*x-t*c*x)*O,e[12]=P*O,e[13]=(p*y*i-M*m*i+M*n*g-t*y*g-p*n*_+t*m*_)*O,e[14]=(M*c*i-a*y*i-M*n*u+t*y*u+a*n*_-t*c*_)*O,e[15]=(a*m*i-p*c*i+p*n*u-t*m*u-a*n*g+t*c*g)*O,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,c=e.y,u=e.z,f=r*a,p=r*c;return this.set(f*a+n,f*c-i*u,f*u+i*c,0,f*c+i*u,p*c+n,p*u-i*a,0,f*u-i*c,p*u+i*a,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,c=t._z,u=t._w,f=r+r,p=a+a,m=c+c,g=r*f,x=r*p,M=r*m,y=a*p,_=a*m,w=c*m,E=u*f,b=u*p,A=u*m,P=n.x,L=n.y,O=n.z;return i[0]=(1-(y+w))*P,i[1]=(x+A)*P,i[2]=(M-b)*P,i[3]=0,i[4]=(x-A)*L,i[5]=(1-(g+w))*L,i[6]=(_+E)*L,i[7]=0,i[8]=(M+b)*O,i[9]=(_-E)*O,i[10]=(1-(g+y))*O,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Hs.set(i[0],i[1],i[2]).length();const a=Hs.set(i[4],i[5],i[6]).length(),c=Hs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],fi.copy(this);const f=1/r,p=1/a,m=1/c;return fi.elements[0]*=f,fi.elements[1]*=f,fi.elements[2]*=f,fi.elements[4]*=p,fi.elements[5]*=p,fi.elements[6]*=p,fi.elements[8]*=m,fi.elements[9]*=m,fi.elements[10]*=m,t.setFromRotationMatrix(fi),n.x=r,n.y=a,n.z=c,this}makePerspective(e,t,n,i,r,a){const c=this.elements,u=2*r/(t-e),f=2*r/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i),g=-(a+r)/(a-r),x=-2*a*r/(a-r);return c[0]=u,c[4]=0,c[8]=p,c[12]=0,c[1]=0,c[5]=f,c[9]=m,c[13]=0,c[2]=0,c[6]=0,c[10]=g,c[14]=x,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,r,a){const c=this.elements,u=1/(t-e),f=1/(n-i),p=1/(a-r),m=(t+e)*u,g=(n+i)*f,x=(a+r)*p;return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-m,c[1]=0,c[5]=2*f,c[9]=0,c[13]=-g,c[2]=0,c[6]=0,c[10]=-2*p,c[14]=-x,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}h(tt,"Matrix4");const Hs=new N,fi=new tt,s1=new N(0,0,0),o1=new N(1,1,1),mr=new N,Yl=new N,kn=new N,Vm=new tt,Hm=new An;class xs{constructor(e=0,t=0,n=0,i=xs.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],c=i[8],u=i[1],f=i[5],p=i[9],m=i[2],g=i[6],x=i[10];switch(t){case"XYZ":this._y=Math.asin(Xt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,x),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-Xt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,x),this._z=Math.atan2(u,f)):(this._y=Math.atan2(-m,r),this._z=0);break;case"ZXY":this._x=Math.asin(Xt(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,x),this._z=Math.atan2(-a,f)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-Xt(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,x),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-a,f));break;case"YZX":this._z=Math.asin(Xt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,r)):(this._x=0,this._y=Math.atan2(c,x));break;case"XZY":this._z=Math.asin(-Xt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-p,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Vm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Vm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Hm.setFromEuler(this),this.setFromQuaternion(Hm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}h(xs,"Euler");xs.DefaultOrder="XYZ";xs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class wr{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}h(wr,"Layers");let a1=0;const Wm=new N,Ws=new An,Wi=new tt,Zl=new N,aa=new N,l1=new N,c1=new An,Gm=new N(1,0,0),Xm=new N(0,1,0),qm=new N(0,0,1),u1={type:"added"},Ym={type:"removed"};class vt extends Pi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:a1++}),this.uuid=Wn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=vt.DefaultUp.clone();const e=new N,t=new xs,n=new An,i=new N(1,1,1);function r(){n.setFromEuler(t,!1)}h(r,"onRotationChange");function a(){t.setFromQuaternion(n,void 0,!1)}h(a,"onQuaternionChange"),t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new tt},normalMatrix:{value:new yn}}),this.matrix=new tt,this.matrixWorld=new tt,this.matrixAutoUpdate=vt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=vt.DefaultMatrixWorldAutoUpdate,this.layers=new wr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.multiply(Ws),this}rotateOnWorldAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.premultiply(Ws),this}rotateX(e){return this.rotateOnAxis(Gm,e)}rotateY(e){return this.rotateOnAxis(Xm,e)}rotateZ(e){return this.rotateOnAxis(qm,e)}translateOnAxis(e,t){return Wm.copy(e).applyQuaternion(this.quaternion),this.position.add(Wm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Gm,e)}translateY(e){return this.translateOnAxis(Xm,e)}translateZ(e){return this.translateOnAxis(qm,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Wi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Zl.copy(e):Zl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),aa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wi.lookAt(aa,Zl,this.up):Wi.lookAt(Zl,aa,this.up),this.quaternion.setFromRotationMatrix(Wi),i&&(Wi.extractRotation(i.matrixWorld),Ws.setFromRotationMatrix(Wi),this.quaternion.premultiply(Ws.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(u1)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ym)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Ym)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Wi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aa,e,l1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aa,c1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const c=i[r];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(h(r,"serialize"),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let f=0,p=u.length;f<p;f++){const m=u[f];r(e.shapes,m)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,f=this.material.length;u<f;u++)c.push(r(e.materials,this.material[u]));i.material=c}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(r(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),f=a(e.textures),p=a(e.images),m=a(e.shapes),g=a(e.skeletons),x=a(e.animations),M=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),x.length>0&&(n.animations=x),M.length>0&&(n.nodes=M)}return n.object=i,n;function a(c){const u=[];for(const f in c){const p=c[f];delete p.metadata,u.push(p)}return u}h(a,"extractFromCache")}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}h(vt,"Object3D");vt.DefaultUp=new N(0,1,0);vt.DefaultMatrixAutoUpdate=!0;vt.DefaultMatrixWorldAutoUpdate=!0;const di=new N,Gi=new N,kh=new N,Xi=new N,Gs=new N,Xs=new N,Zm=new N,Uh=new N,Bh=new N,Vh=new N;class Vn{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),di.subVectors(e,t),i.cross(di);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){di.subVectors(i,t),Gi.subVectors(n,t),kh.subVectors(e,t);const a=di.dot(di),c=di.dot(Gi),u=di.dot(kh),f=Gi.dot(Gi),p=Gi.dot(kh),m=a*f-c*c;if(m===0)return r.set(-2,-1,-1);const g=1/m,x=(f*u-c*p)*g,M=(a*p-c*u)*g;return r.set(1-x-M,M,x)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Xi),Xi.x>=0&&Xi.y>=0&&Xi.x+Xi.y<=1}static getUV(e,t,n,i,r,a,c,u){return this.getBarycoord(e,t,n,i,Xi),u.set(0,0),u.addScaledVector(r,Xi.x),u.addScaledVector(a,Xi.y),u.addScaledVector(c,Xi.z),u}static isFrontFacing(e,t,n,i){return di.subVectors(n,t),Gi.subVectors(e,t),di.cross(Gi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return di.subVectors(this.c,this.b),Gi.subVectors(this.a,this.b),di.cross(Gi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Vn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Vn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Vn.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Vn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Vn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,c;Gs.subVectors(i,n),Xs.subVectors(r,n),Uh.subVectors(e,n);const u=Gs.dot(Uh),f=Xs.dot(Uh);if(u<=0&&f<=0)return t.copy(n);Bh.subVectors(e,i);const p=Gs.dot(Bh),m=Xs.dot(Bh);if(p>=0&&m<=p)return t.copy(i);const g=u*m-p*f;if(g<=0&&u>=0&&p<=0)return a=u/(u-p),t.copy(n).addScaledVector(Gs,a);Vh.subVectors(e,r);const x=Gs.dot(Vh),M=Xs.dot(Vh);if(M>=0&&x<=M)return t.copy(r);const y=x*f-u*M;if(y<=0&&f>=0&&M<=0)return c=f/(f-M),t.copy(n).addScaledVector(Xs,c);const _=p*M-x*m;if(_<=0&&m-p>=0&&x-M>=0)return Zm.subVectors(r,i),c=(m-p)/(m-p+(x-M)),t.copy(i).addScaledVector(Zm,c);const w=1/(_+y+g);return a=y*w,c=g*w,t.copy(n).addScaledVector(Gs,a).addScaledVector(Xs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}h(Vn,"Triangle");let h1=0;class hn extends Pi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:h1++}),this.uuid=Wn(),this.name="",this.type="Material",this.blending=as,this.side=fs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=nd,this.blendDst=id,this.blendEquation=es,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Uc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ov,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Fc,this.stencilZFail=Fc,this.stencilZPass=Fc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==as&&(n.blending=this.blending),this.side!==fs&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const a=[];for(const c in r){const u=r[c];delete u.metadata,a.push(u)}return a}if(h(i,"extractFromCache"),t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}h(hn,"Material");class tr extends hn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}h(tr,"MeshBasicMaterial");const Jt=new N,Jl=new fe;class Tt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Ca,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Jl.fromBufferAttribute(this,t),Jl.applyMatrix3(e),this.setXY(t,Jl.x,Jl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Jt.fromBufferAttribute(this,t),Jt.applyMatrix3(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Jt.fromBufferAttribute(this,t),Jt.applyMatrix4(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Jt.fromBufferAttribute(this,t),Jt.applyNormalMatrix(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Jt.fromBufferAttribute(this,t),Jt.transformDirection(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Qi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Qi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Qi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Qi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ca&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}h(Tt,"BufferAttribute");class dv extends Tt{constructor(e,t,n){super(new Int8Array(e),t,n)}}h(dv,"Int8BufferAttribute");class pv extends Tt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}h(pv,"Uint8BufferAttribute");class mv extends Tt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}h(mv,"Uint8ClampedBufferAttribute");class gv extends Tt{constructor(e,t,n){super(new Int16Array(e),t,n)}}h(gv,"Int16BufferAttribute");class Kc extends Tt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}h(Kc,"Uint16BufferAttribute");class vv extends Tt{constructor(e,t,n){super(new Int32Array(e),t,n)}}h(vv,"Int32BufferAttribute");class $c extends Tt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}h($c,"Uint32BufferAttribute");class xv extends Tt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}h(xv,"Float16BufferAttribute");class Ne extends Tt{constructor(e,t,n){super(new Float32Array(e),t,n)}}h(Ne,"Float32BufferAttribute");class _v extends Tt{constructor(e,t,n){super(new Float64Array(e),t,n)}}h(_v,"Float64BufferAttribute");let f1=0;const ii=new tt,Hh=new vt,qs=new N,Un=new Lr,la=new Lr,cn=new N;class it extends Pi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:f1++}),this.uuid=Wn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lv(e)?$c:Kc)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new yn().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ii.makeRotationFromQuaternion(e),this.applyMatrix4(ii),this}rotateX(e){return ii.makeRotationX(e),this.applyMatrix4(ii),this}rotateY(e){return ii.makeRotationY(e),this.applyMatrix4(ii),this}rotateZ(e){return ii.makeRotationZ(e),this.applyMatrix4(ii),this}translate(e,t,n){return ii.makeTranslation(e,t,n),this.applyMatrix4(ii),this}scale(e,t,n){return ii.makeScale(e,t,n),this.applyMatrix4(ii),this}lookAt(e){return Hh.lookAt(e),Hh.updateMatrix(),this.applyMatrix4(Hh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qs).negate(),this.translate(qs.x,qs.y,qs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ne(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Lr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Un.setFromBufferAttribute(r),this.morphTargetsRelative?(cn.addVectors(this.boundingBox.min,Un.min),this.boundingBox.expandByPoint(cn),cn.addVectors(this.boundingBox.max,Un.max),this.boundingBox.expandByPoint(cn)):(this.boundingBox.expandByPoint(Un.min),this.boundingBox.expandByPoint(Un.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(Un.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const c=t[r];la.setFromBufferAttribute(c),this.morphTargetsRelative?(cn.addVectors(Un.min,la.min),Un.expandByPoint(cn),cn.addVectors(Un.max,la.max),Un.expandByPoint(cn)):(Un.expandByPoint(la.min),Un.expandByPoint(la.max))}Un.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)cn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(cn));if(t)for(let r=0,a=t.length;r<a;r++){const c=t[r],u=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)cn.fromBufferAttribute(c,f),u&&(qs.fromBufferAttribute(e,f),cn.add(qs)),i=Math.max(i,n.distanceToSquared(cn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Tt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,f=[],p=[];for(let k=0;k<c;k++)f[k]=new N,p[k]=new N;const m=new N,g=new N,x=new N,M=new fe,y=new fe,_=new fe,w=new N,E=new N;function b(k,G,ce){m.fromArray(i,k*3),g.fromArray(i,G*3),x.fromArray(i,ce*3),M.fromArray(a,k*2),y.fromArray(a,G*2),_.fromArray(a,ce*2),g.sub(m),x.sub(m),y.sub(M),_.sub(M);const Q=1/(y.x*_.y-_.x*y.y);!isFinite(Q)||(w.copy(g).multiplyScalar(_.y).addScaledVector(x,-y.y).multiplyScalar(Q),E.copy(x).multiplyScalar(y.x).addScaledVector(g,-_.x).multiplyScalar(Q),f[k].add(w),f[G].add(w),f[ce].add(w),p[k].add(E),p[G].add(E),p[ce].add(E))}h(b,"handleTriangle");let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let k=0,G=A.length;k<G;++k){const ce=A[k],Q=ce.start,W=ce.count;for(let te=Q,ae=Q+W;te<ae;te+=3)b(n[te+0],n[te+1],n[te+2])}const P=new N,L=new N,O=new N,C=new N;function I(k){O.fromArray(r,k*3),C.copy(O);const G=f[k];P.copy(G),P.sub(O.multiplyScalar(O.dot(G))).normalize(),L.crossVectors(C,G);const Q=L.dot(p[k])<0?-1:1;u[k*4]=P.x,u[k*4+1]=P.y,u[k*4+2]=P.z,u[k*4+3]=Q}h(I,"handleVertex");for(let k=0,G=A.length;k<G;++k){const ce=A[k],Q=ce.start,W=ce.count;for(let te=Q,ae=Q+W;te<ae;te+=3)I(n[te+0]),I(n[te+1]),I(n[te+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Tt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,x=n.count;g<x;g++)n.setXYZ(g,0,0,0);const i=new N,r=new N,a=new N,c=new N,u=new N,f=new N,p=new N,m=new N;if(e)for(let g=0,x=e.count;g<x;g+=3){const M=e.getX(g+0),y=e.getX(g+1),_=e.getX(g+2);i.fromBufferAttribute(t,M),r.fromBufferAttribute(t,y),a.fromBufferAttribute(t,_),p.subVectors(a,r),m.subVectors(i,r),p.cross(m),c.fromBufferAttribute(n,M),u.fromBufferAttribute(n,y),f.fromBufferAttribute(n,_),c.add(p),u.add(p),f.add(p),n.setXYZ(M,c.x,c.y,c.z),n.setXYZ(y,u.x,u.y,u.z),n.setXYZ(_,f.x,f.y,f.z)}else for(let g=0,x=t.count;g<x;g+=3)i.fromBufferAttribute(t,g+0),r.fromBufferAttribute(t,g+1),a.fromBufferAttribute(t,g+2),p.subVectors(a,r),m.subVectors(i,r),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)cn.fromBufferAttribute(e,t),cn.normalize(),e.setXYZ(t,cn.x,cn.y,cn.z)}toNonIndexed(){function e(c,u){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(u.length*p);let x=0,M=0;for(let y=0,_=u.length;y<_;y++){c.isInterleavedBufferAttribute?x=u[y]*c.data.stride+c.offset:x=u[y]*p;for(let w=0;w<p;w++)g[M++]=f[x++]}return new Tt(g,p,m)}if(h(e,"convertBufferAttribute"),this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new it,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],f=e(u,n);t.setAttribute(c,f)}const r=this.morphAttributes;for(const c in r){const u=[],f=r[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],x=e(g,n);u.push(x)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const f=a[c];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const f in u)u[f]!==void 0&&(e[f]=u[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const f=n[u];e.data.attributes[u]=f.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const f=this.morphAttributes[u],p=[];for(let m=0,g=f.length;m<g;m++){const x=f[m];p.push(x.toJSON(e.data))}p.length>0&&(i[u]=p,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(t))}const r=e.morphAttributes;for(const f in r){const p=[],m=r[f];for(let g=0,x=m.length;g<x;g++)p.push(m[g].clone(t));this.morphAttributes[f]=p}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let f=0,p=a.length;f<p;f++){const m=a[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}h(it,"BufferGeometry");const Jm=new tt,Ys=new Mo,Wh=new Rr,gr=new N,vr=new N,xr=new N,Gh=new N,Xh=new N,qh=new N,jl=new N,Ql=new N,Kl=new N,$l=new fe,ec=new fe,tc=new fe,Yh=new N,nc=new N;class un extends vt{constructor(e=new it,t=new tr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Wh.copy(n.boundingSphere),Wh.applyMatrix4(r),e.ray.intersectsSphere(Wh)===!1)||(Jm.copy(r).invert(),Ys.copy(e.ray).applyMatrix4(Jm),n.boundingBox!==null&&Ys.intersectsBox(n.boundingBox)===!1))return;let a;const c=n.index,u=n.attributes.position,f=n.morphAttributes.position,p=n.morphTargetsRelative,m=n.attributes.uv,g=n.attributes.uv2,x=n.groups,M=n.drawRange;if(c!==null)if(Array.isArray(i))for(let y=0,_=x.length;y<_;y++){const w=x[y],E=i[w.materialIndex],b=Math.max(w.start,M.start),A=Math.min(c.count,Math.min(w.start+w.count,M.start+M.count));for(let P=b,L=A;P<L;P+=3){const O=c.getX(P),C=c.getX(P+1),I=c.getX(P+2);a=ic(this,E,e,Ys,u,f,p,m,g,O,C,I),a&&(a.faceIndex=Math.floor(P/3),a.face.materialIndex=w.materialIndex,t.push(a))}}else{const y=Math.max(0,M.start),_=Math.min(c.count,M.start+M.count);for(let w=y,E=_;w<E;w+=3){const b=c.getX(w),A=c.getX(w+1),P=c.getX(w+2);a=ic(this,i,e,Ys,u,f,p,m,g,b,A,P),a&&(a.faceIndex=Math.floor(w/3),t.push(a))}}else if(u!==void 0)if(Array.isArray(i))for(let y=0,_=x.length;y<_;y++){const w=x[y],E=i[w.materialIndex],b=Math.max(w.start,M.start),A=Math.min(u.count,Math.min(w.start+w.count,M.start+M.count));for(let P=b,L=A;P<L;P+=3){const O=P,C=P+1,I=P+2;a=ic(this,E,e,Ys,u,f,p,m,g,O,C,I),a&&(a.faceIndex=Math.floor(P/3),a.face.materialIndex=w.materialIndex,t.push(a))}}else{const y=Math.max(0,M.start),_=Math.min(u.count,M.start+M.count);for(let w=y,E=_;w<E;w+=3){const b=w,A=w+1,P=w+2;a=ic(this,i,e,Ys,u,f,p,m,g,b,A,P),a&&(a.faceIndex=Math.floor(w/3),t.push(a))}}}}h(un,"Mesh");function d1(l,e,t,n,i,r,a,c){let u;if(e.side===Hn?u=n.intersectTriangle(a,r,i,!0,c):u=n.intersectTriangle(i,r,a,e.side!==Ji,c),u===null)return null;nc.copy(c),nc.applyMatrix4(l.matrixWorld);const f=t.ray.origin.distanceTo(nc);return f<t.near||f>t.far?null:{distance:f,point:nc.clone(),object:l}}h(d1,"checkIntersection");function ic(l,e,t,n,i,r,a,c,u,f,p,m){gr.fromBufferAttribute(i,f),vr.fromBufferAttribute(i,p),xr.fromBufferAttribute(i,m);const g=l.morphTargetInfluences;if(r&&g){jl.set(0,0,0),Ql.set(0,0,0),Kl.set(0,0,0);for(let M=0,y=r.length;M<y;M++){const _=g[M],w=r[M];_!==0&&(Gh.fromBufferAttribute(w,f),Xh.fromBufferAttribute(w,p),qh.fromBufferAttribute(w,m),a?(jl.addScaledVector(Gh,_),Ql.addScaledVector(Xh,_),Kl.addScaledVector(qh,_)):(jl.addScaledVector(Gh.sub(gr),_),Ql.addScaledVector(Xh.sub(vr),_),Kl.addScaledVector(qh.sub(xr),_)))}gr.add(jl),vr.add(Ql),xr.add(Kl)}l.isSkinnedMesh&&(l.boneTransform(f,gr),l.boneTransform(p,vr),l.boneTransform(m,xr));const x=d1(l,e,t,n,gr,vr,xr,Yh);if(x){c&&($l.fromBufferAttribute(c,f),ec.fromBufferAttribute(c,p),tc.fromBufferAttribute(c,m),x.uv=Vn.getUV(Yh,gr,vr,xr,$l,ec,tc,new fe)),u&&($l.fromBufferAttribute(u,f),ec.fromBufferAttribute(u,p),tc.fromBufferAttribute(u,m),x.uv2=Vn.getUV(Yh,gr,vr,xr,$l,ec,tc,new fe));const M={a:f,b:p,c:m,normal:new N,materialIndex:0};Vn.getNormal(gr,vr,xr,M.normal),x.face=M}return x}h(ic,"checkBufferGeometryIntersection");class nr extends it{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const c=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const u=[],f=[],p=[],m=[];let g=0,x=0;M("z","y","x",-1,-1,n,t,e,a,r,0),M("z","y","x",1,-1,n,t,-e,a,r,1),M("x","z","y",1,1,e,n,t,i,a,2),M("x","z","y",1,-1,e,n,-t,i,a,3),M("x","y","z",1,-1,e,t,n,i,r,4),M("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Ne(f,3)),this.setAttribute("normal",new Ne(p,3)),this.setAttribute("uv",new Ne(m,2));function M(y,_,w,E,b,A,P,L,O,C,I){const k=A/O,G=P/C,ce=A/2,Q=P/2,W=L/2,te=O+1,ae=C+1;let de=0,U=0;const ee=new N;for(let q=0;q<ae;q++){const j=q*G-Q;for(let Z=0;Z<te;Z++){const xe=Z*k-ce;ee[y]=xe*E,ee[_]=j*b,ee[w]=W,f.push(ee.x,ee.y,ee.z),ee[y]=0,ee[_]=0,ee[w]=L>0?1:-1,p.push(ee.x,ee.y,ee.z),m.push(Z/O),m.push(1-q/C),de+=1}}for(let q=0;q<C;q++)for(let j=0;j<O;j++){const Z=g+j+te*q,xe=g+j+te*(q+1),pe=g+(j+1)+te*(q+1),Me=g+(j+1)+te*q;u.push(Z,xe,Me),u.push(xe,pe,Me),U+=6}c.addGroup(x,U,I),x+=U,g+=de}h(M,"buildPlane")}static fromJSON(e){return new nr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}h(nr,"BoxGeometry");function ho(l){const e={};for(const t in l){e[t]={};for(const n in l[t]){const i=l[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}h(ho,"cloneUniforms");function En(l){const e={};for(let t=0;t<l.length;t++){const n=ho(l[t]);for(const i in n)e[i]=n[i]}return e}h(En,"mergeUniforms");function p1(l){const e=[];for(let t=0;t<l.length;t++)e.push(l[t].clone());return e}h(p1,"cloneUniformsGroups");function yv(l){return l.getRenderTarget()===null&&l.outputEncoding===Lt?pi:uo}h(yv,"getUnlitUniformColorSpace");const Mv={clone:ho,merge:En};var m1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,g1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class xi extends hn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=m1,this.fragmentShader=g1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ho(e.uniforms),this.uniformsGroups=p1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}h(xi,"ShaderMaterial");class So extends vt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new tt,this.projectionMatrix=new tt,this.projectionMatrixInverse=new tt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}h(So,"Camera");class en extends So{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Pa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(cs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Pa*2*Math.atan(Math.tan(cs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(cs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,f=a.fullHeight;r+=a.offsetX*i/u,t-=a.offsetY*n/f,i*=a.width/u,n*=a.height/f}const c=this.filmOffset;c!==0&&(r+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}h(en,"PerspectiveCamera");const Zs=-90,Js=1;class cd extends vt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new en(Zs,Js,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new en(Zs,Js,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const a=new en(Zs,Js,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const c=new en(Zs,Js,e,t);c.layers=this.layers,c.up.set(0,0,1),c.lookAt(0,-1,0),this.add(c);const u=new en(Zs,Js,e,t);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,1),this.add(u);const f=new en(Zs,Js,e,t);f.layers=this.layers,f.up.set(0,1,0),f.lookAt(0,0,-1),this.add(f)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,c,u,f]=this.children,p=e.getRenderTarget(),m=e.toneMapping,g=e.xr.enabled;e.toneMapping=gi,e.xr.enabled=!1;const x=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=x,e.setRenderTarget(n,5),e.render(t,f),e.setRenderTarget(p),e.toneMapping=m,e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}h(cd,"CubeCamera");class wo extends zt{constructor(e,t,n,i,r,a,c,u,f,p){e=e!==void 0?e:[],t=t!==void 0?t:Tr,super(e,t,n,i,r,a,c,u,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}h(wo,"CubeTexture");class ud extends Gn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new wo(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Gt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new nr(5,5,5),r=new xi({name:"CubemapFromEquirect",uniforms:ho(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Hn,blending:Ki});r.uniforms.tEquirect.value=t;const a=new un(i,r),c=t.minFilter;return t.minFilter===vs&&(t.minFilter=Gt),new cd(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}h(ud,"WebGLCubeRenderTarget");const Zh=new N,v1=new N,x1=new yn;class Yi{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Zh.subVectors(n,t).cross(v1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Zh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||x1.getNormalMatrix(e),i=this.coplanarPoint(Zh).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}h(Yi,"Plane");const js=new Rr,rc=new N;class Fa{constructor(e=new Yi,t=new Yi,n=new Yi,i=new Yi,r=new Yi,a=new Yi){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],c=n[3],u=n[4],f=n[5],p=n[6],m=n[7],g=n[8],x=n[9],M=n[10],y=n[11],_=n[12],w=n[13],E=n[14],b=n[15];return t[0].setComponents(c-i,m-u,y-g,b-_).normalize(),t[1].setComponents(c+i,m+u,y+g,b+_).normalize(),t[2].setComponents(c+r,m+f,y+x,b+w).normalize(),t[3].setComponents(c-r,m-f,y-x,b-w).normalize(),t[4].setComponents(c-a,m-p,y-M,b-E).normalize(),t[5].setComponents(c+a,m+p,y+M,b+E).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),js.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(js)}intersectsSprite(e){return js.center.set(0,0,0),js.radius=.7071067811865476,js.applyMatrix4(e.matrixWorld),this.intersectsSphere(js)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(rc.x=i.normal.x>0?e.max.x:e.min.x,rc.y=i.normal.y>0?e.max.y:e.min.y,rc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(rc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}h(Fa,"Frustum");function Sv(){let l=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=l.requestAnimationFrame(i)}return h(i,"onAnimationFrame"),{start:function(){e!==!0&&t!==null&&(n=l.requestAnimationFrame(i),e=!0)},stop:function(){l.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){l=r}}}h(Sv,"WebGLAnimation");function _1(l,e){const t=e.isWebGL2,n=new WeakMap;function i(f,p){const m=f.array,g=f.usage,x=l.createBuffer();l.bindBuffer(p,x),l.bufferData(p,m,g),f.onUploadCallback();let M;if(m instanceof Float32Array)M=5126;else if(m instanceof Uint16Array)if(f.isFloat16BufferAttribute)if(t)M=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else M=5123;else if(m instanceof Int16Array)M=5122;else if(m instanceof Uint32Array)M=5125;else if(m instanceof Int32Array)M=5124;else if(m instanceof Int8Array)M=5120;else if(m instanceof Uint8Array)M=5121;else if(m instanceof Uint8ClampedArray)M=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:x,type:M,bytesPerElement:m.BYTES_PER_ELEMENT,version:f.version}}h(i,"createBuffer");function r(f,p,m){const g=p.array,x=p.updateRange;l.bindBuffer(m,f),x.count===-1?l.bufferSubData(m,0,g):(t?l.bufferSubData(m,x.offset*g.BYTES_PER_ELEMENT,g,x.offset,x.count):l.bufferSubData(m,x.offset*g.BYTES_PER_ELEMENT,g.subarray(x.offset,x.offset+x.count)),x.count=-1),p.onUploadCallback()}h(r,"updateBuffer");function a(f){return f.isInterleavedBufferAttribute&&(f=f.data),n.get(f)}h(a,"get");function c(f){f.isInterleavedBufferAttribute&&(f=f.data);const p=n.get(f);p&&(l.deleteBuffer(p.buffer),n.delete(f))}h(c,"remove");function u(f,p){if(f.isGLBufferAttribute){const g=n.get(f);(!g||g.version<f.version)&&n.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,version:f.version});return}f.isInterleavedBufferAttribute&&(f=f.data);const m=n.get(f);m===void 0?n.set(f,i(f,p)):m.version<f.version&&(r(m.buffer,f,p),m.version=f.version)}return h(u,"update"),{get:a,remove:c,update:u}}h(_1,"WebGLAttributes");class _s extends it{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),f=c+1,p=u+1,m=e/c,g=t/u,x=[],M=[],y=[],_=[];for(let w=0;w<p;w++){const E=w*g-a;for(let b=0;b<f;b++){const A=b*m-r;M.push(A,-E,0),y.push(0,0,1),_.push(b/c),_.push(1-w/u)}}for(let w=0;w<u;w++)for(let E=0;E<c;E++){const b=E+f*w,A=E+f*(w+1),P=E+1+f*(w+1),L=E+1+f*w;x.push(b,A,L),x.push(A,P,L)}this.setIndex(x),this.setAttribute("position",new Ne(M,3)),this.setAttribute("normal",new Ne(y,3)),this.setAttribute("uv",new Ne(_,2))}static fromJSON(e){return new _s(e.width,e.height,e.widthSegments,e.heightSegments)}}h(_s,"PlaneGeometry");var y1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,M1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,S1=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,w1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,b1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,T1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,E1="vec3 transformed = vec3( position );",A1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,C1=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,P1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,L1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,R1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,I1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,D1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,N1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,z1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,F1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,O1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,k1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,U1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,B1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,V1=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,H1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,W1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,G1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,X1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,q1="gl_FragColor = linearToOutputTexel( gl_FragColor );",Y1=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Z1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,J1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,j1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Q1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,K1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,$1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,eM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,tM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,nM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,iM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,rM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,sM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,oM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,aM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,cM=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,uM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,hM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,fM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,dM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,pM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,mM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,gM=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,vM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,xM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_M=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,yM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,MM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,SM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,wM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,bM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,TM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,EM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,AM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,CM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,PM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,LM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,RM=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,IM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,DM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,NM=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,zM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,FM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,OM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,kM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,UM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,BM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,VM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,HM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,WM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,GM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,XM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,qM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,YM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ZM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,JM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,QM=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,KM=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,$M=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,eS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,tS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,nS=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,iS=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,rS=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sS=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,oS=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,aS=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,lS=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,cS=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,uS=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,hS=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,fS=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,dS=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,pS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,mS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,gS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,vS=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const xS=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_S=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,yS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,MS=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,SS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,wS=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bS=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,TS=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ES=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,AS=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,CS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,PS=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,LS=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,RS=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,IS=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,DS=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NS=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zS=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FS=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,OS=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kS=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,US=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,BS=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VS=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HS=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,WS=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GS=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,XS=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qS=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,YS=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ZS=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,JS=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,jS=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,QS=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,at={alphamap_fragment:y1,alphamap_pars_fragment:M1,alphatest_fragment:S1,alphatest_pars_fragment:w1,aomap_fragment:b1,aomap_pars_fragment:T1,begin_vertex:E1,beginnormal_vertex:A1,bsdfs:C1,iridescence_fragment:P1,bumpmap_pars_fragment:L1,clipping_planes_fragment:R1,clipping_planes_pars_fragment:I1,clipping_planes_pars_vertex:D1,clipping_planes_vertex:N1,color_fragment:z1,color_pars_fragment:F1,color_pars_vertex:O1,color_vertex:k1,common:U1,cube_uv_reflection_fragment:B1,defaultnormal_vertex:V1,displacementmap_pars_vertex:H1,displacementmap_vertex:W1,emissivemap_fragment:G1,emissivemap_pars_fragment:X1,encodings_fragment:q1,encodings_pars_fragment:Y1,envmap_fragment:Z1,envmap_common_pars_fragment:J1,envmap_pars_fragment:j1,envmap_pars_vertex:Q1,envmap_physical_pars_fragment:cM,envmap_vertex:K1,fog_vertex:$1,fog_pars_vertex:eM,fog_fragment:tM,fog_pars_fragment:nM,gradientmap_pars_fragment:iM,lightmap_fragment:rM,lightmap_pars_fragment:sM,lights_lambert_fragment:oM,lights_lambert_pars_fragment:aM,lights_pars_begin:lM,lights_toon_fragment:uM,lights_toon_pars_fragment:hM,lights_phong_fragment:fM,lights_phong_pars_fragment:dM,lights_physical_fragment:pM,lights_physical_pars_fragment:mM,lights_fragment_begin:gM,lights_fragment_maps:vM,lights_fragment_end:xM,logdepthbuf_fragment:_M,logdepthbuf_pars_fragment:yM,logdepthbuf_pars_vertex:MM,logdepthbuf_vertex:SM,map_fragment:wM,map_pars_fragment:bM,map_particle_fragment:TM,map_particle_pars_fragment:EM,metalnessmap_fragment:AM,metalnessmap_pars_fragment:CM,morphcolor_vertex:PM,morphnormal_vertex:LM,morphtarget_pars_vertex:RM,morphtarget_vertex:IM,normal_fragment_begin:DM,normal_fragment_maps:NM,normal_pars_fragment:zM,normal_pars_vertex:FM,normal_vertex:OM,normalmap_pars_fragment:kM,clearcoat_normal_fragment_begin:UM,clearcoat_normal_fragment_maps:BM,clearcoat_pars_fragment:VM,iridescence_pars_fragment:HM,output_fragment:WM,packing:GM,premultiplied_alpha_fragment:XM,project_vertex:qM,dithering_fragment:YM,dithering_pars_fragment:ZM,roughnessmap_fragment:JM,roughnessmap_pars_fragment:jM,shadowmap_pars_fragment:QM,shadowmap_pars_vertex:KM,shadowmap_vertex:$M,shadowmask_pars_fragment:eS,skinbase_vertex:tS,skinning_pars_vertex:nS,skinning_vertex:iS,skinnormal_vertex:rS,specularmap_fragment:sS,specularmap_pars_fragment:oS,tonemapping_fragment:aS,tonemapping_pars_fragment:lS,transmission_fragment:cS,transmission_pars_fragment:uS,uv_pars_fragment:hS,uv_pars_vertex:fS,uv_vertex:dS,uv2_pars_fragment:pS,uv2_pars_vertex:mS,uv2_vertex:gS,worldpos_vertex:vS,background_vert:xS,background_frag:_S,backgroundCube_vert:yS,backgroundCube_frag:MS,cube_vert:SS,cube_frag:wS,depth_vert:bS,depth_frag:TS,distanceRGBA_vert:ES,distanceRGBA_frag:AS,equirect_vert:CS,equirect_frag:PS,linedashed_vert:LS,linedashed_frag:RS,meshbasic_vert:IS,meshbasic_frag:DS,meshlambert_vert:NS,meshlambert_frag:zS,meshmatcap_vert:FS,meshmatcap_frag:OS,meshnormal_vert:kS,meshnormal_frag:US,meshphong_vert:BS,meshphong_frag:VS,meshphysical_vert:HS,meshphysical_frag:WS,meshtoon_vert:GS,meshtoon_frag:XS,points_vert:qS,points_frag:YS,shadow_vert:ZS,shadow_frag:JS,sprite_vert:jS,sprite_frag:QS},Se={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new yn},uv2Transform:{value:new yn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yn}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yn}}},mi={basic:{uniforms:En([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.fog]),vertexShader:at.meshbasic_vert,fragmentShader:at.meshbasic_frag},lambert:{uniforms:En([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,Se.lights,{emissive:{value:new Le(0)}}]),vertexShader:at.meshlambert_vert,fragmentShader:at.meshlambert_frag},phong:{uniforms:En([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,Se.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:at.meshphong_vert,fragmentShader:at.meshphong_frag},standard:{uniforms:En([Se.common,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.roughnessmap,Se.metalnessmap,Se.fog,Se.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag},toon:{uniforms:En([Se.common,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.gradientmap,Se.fog,Se.lights,{emissive:{value:new Le(0)}}]),vertexShader:at.meshtoon_vert,fragmentShader:at.meshtoon_frag},matcap:{uniforms:En([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,{matcap:{value:null}}]),vertexShader:at.meshmatcap_vert,fragmentShader:at.meshmatcap_frag},points:{uniforms:En([Se.points,Se.fog]),vertexShader:at.points_vert,fragmentShader:at.points_frag},dashed:{uniforms:En([Se.common,Se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:at.linedashed_vert,fragmentShader:at.linedashed_frag},depth:{uniforms:En([Se.common,Se.displacementmap]),vertexShader:at.depth_vert,fragmentShader:at.depth_frag},normal:{uniforms:En([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,{opacity:{value:1}}]),vertexShader:at.meshnormal_vert,fragmentShader:at.meshnormal_frag},sprite:{uniforms:En([Se.sprite,Se.fog]),vertexShader:at.sprite_vert,fragmentShader:at.sprite_frag},background:{uniforms:{uvTransform:{value:new yn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:at.background_vert,fragmentShader:at.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:at.backgroundCube_vert,fragmentShader:at.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:at.cube_vert,fragmentShader:at.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:at.equirect_vert,fragmentShader:at.equirect_frag},distanceRGBA:{uniforms:En([Se.common,Se.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:at.distanceRGBA_vert,fragmentShader:at.distanceRGBA_frag},shadow:{uniforms:En([Se.lights,Se.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:at.shadow_vert,fragmentShader:at.shadow_frag}};mi.physical={uniforms:En([mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new fe(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag};const sc={r:0,b:0,g:0};function KS(l,e,t,n,i,r,a){const c=new Le(0);let u=r===!0?0:1,f,p,m=null,g=0,x=null;function M(_,w){let E=!1,b=w.isScene===!0?w.background:null;b&&b.isTexture&&(b=(w.backgroundBlurriness>0?t:e).get(b));const A=l.xr,P=A.getSession&&A.getSession();P&&P.environmentBlendMode==="additive"&&(b=null),b===null?y(c,u):b&&b.isColor&&(y(b,1),E=!0),(l.autoClear||E)&&l.clear(l.autoClearColor,l.autoClearDepth,l.autoClearStencil),b&&(b.isCubeTexture||b.mapping===_o)?(p===void 0&&(p=new un(new nr(1,1,1),new xi({name:"BackgroundCubeMaterial",uniforms:ho(mi.backgroundCube.uniforms),vertexShader:mi.backgroundCube.vertexShader,fragmentShader:mi.backgroundCube.fragmentShader,side:Hn,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(L,O,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),p.material.uniforms.envMap.value=b,p.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,(m!==b||g!==b.version||x!==l.toneMapping)&&(p.material.needsUpdate=!0,m=b,g=b.version,x=l.toneMapping),p.layers.enableAll(),_.unshift(p,p.geometry,p.material,0,0,null)):b&&b.isTexture&&(f===void 0&&(f=new un(new _s(2,2),new xi({name:"BackgroundMaterial",uniforms:ho(mi.background.uniforms),vertexShader:mi.background.vertexShader,fragmentShader:mi.background.fragmentShader,side:fs,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=b,f.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,b.matrixAutoUpdate===!0&&b.updateMatrix(),f.material.uniforms.uvTransform.value.copy(b.matrix),(m!==b||g!==b.version||x!==l.toneMapping)&&(f.material.needsUpdate=!0,m=b,g=b.version,x=l.toneMapping),f.layers.enableAll(),_.unshift(f,f.geometry,f.material,0,0,null))}h(M,"render");function y(_,w){_.getRGB(sc,yv(l)),n.buffers.color.setClear(sc.r,sc.g,sc.b,w,a)}return h(y,"setClear"),{getClearColor:function(){return c},setClearColor:function(_,w=1){c.set(_),u=w,y(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(_){u=_,y(c,u)},render:M}}h(KS,"WebGLBackground");function $S(l,e,t,n){const i=l.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,c={},u=_(null);let f=u,p=!1;function m(W,te,ae,de,U){let ee=!1;if(a){const q=y(de,ae,te);f!==q&&(f=q,x(f.object)),ee=w(W,de,ae,U),ee&&E(W,de,ae,U)}else{const q=te.wireframe===!0;(f.geometry!==de.id||f.program!==ae.id||f.wireframe!==q)&&(f.geometry=de.id,f.program=ae.id,f.wireframe=q,ee=!0)}U!==null&&t.update(U,34963),(ee||p)&&(p=!1,C(W,te,ae,de),U!==null&&l.bindBuffer(34963,t.get(U).buffer))}h(m,"setup");function g(){return n.isWebGL2?l.createVertexArray():r.createVertexArrayOES()}h(g,"createVertexArrayObject");function x(W){return n.isWebGL2?l.bindVertexArray(W):r.bindVertexArrayOES(W)}h(x,"bindVertexArrayObject");function M(W){return n.isWebGL2?l.deleteVertexArray(W):r.deleteVertexArrayOES(W)}h(M,"deleteVertexArrayObject");function y(W,te,ae){const de=ae.wireframe===!0;let U=c[W.id];U===void 0&&(U={},c[W.id]=U);let ee=U[te.id];ee===void 0&&(ee={},U[te.id]=ee);let q=ee[de];return q===void 0&&(q=_(g()),ee[de]=q),q}h(y,"getBindingState");function _(W){const te=[],ae=[],de=[];for(let U=0;U<i;U++)te[U]=0,ae[U]=0,de[U]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:te,enabledAttributes:ae,attributeDivisors:de,object:W,attributes:{},index:null}}h(_,"createBindingState");function w(W,te,ae,de){const U=f.attributes,ee=te.attributes;let q=0;const j=ae.getAttributes();for(const Z in j)if(j[Z].location>=0){const pe=U[Z];let Me=ee[Z];if(Me===void 0&&(Z==="instanceMatrix"&&W.instanceMatrix&&(Me=W.instanceMatrix),Z==="instanceColor"&&W.instanceColor&&(Me=W.instanceColor)),pe===void 0||pe.attribute!==Me||Me&&pe.data!==Me.data)return!0;q++}return f.attributesNum!==q||f.index!==de}h(w,"needsUpdate");function E(W,te,ae,de){const U={},ee=te.attributes;let q=0;const j=ae.getAttributes();for(const Z in j)if(j[Z].location>=0){let pe=ee[Z];pe===void 0&&(Z==="instanceMatrix"&&W.instanceMatrix&&(pe=W.instanceMatrix),Z==="instanceColor"&&W.instanceColor&&(pe=W.instanceColor));const Me={};Me.attribute=pe,pe&&pe.data&&(Me.data=pe.data),U[Z]=Me,q++}f.attributes=U,f.attributesNum=q,f.index=de}h(E,"saveCache");function b(){const W=f.newAttributes;for(let te=0,ae=W.length;te<ae;te++)W[te]=0}h(b,"initAttributes");function A(W){P(W,0)}h(A,"enableAttribute");function P(W,te){const ae=f.newAttributes,de=f.enabledAttributes,U=f.attributeDivisors;ae[W]=1,de[W]===0&&(l.enableVertexAttribArray(W),de[W]=1),U[W]!==te&&((n.isWebGL2?l:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,te),U[W]=te)}h(P,"enableAttributeAndDivisor");function L(){const W=f.newAttributes,te=f.enabledAttributes;for(let ae=0,de=te.length;ae<de;ae++)te[ae]!==W[ae]&&(l.disableVertexAttribArray(ae),te[ae]=0)}h(L,"disableUnusedAttributes");function O(W,te,ae,de,U,ee){n.isWebGL2===!0&&(ae===5124||ae===5125)?l.vertexAttribIPointer(W,te,ae,U,ee):l.vertexAttribPointer(W,te,ae,de,U,ee)}h(O,"vertexAttribPointer");function C(W,te,ae,de){if(n.isWebGL2===!1&&(W.isInstancedMesh||de.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;b();const U=de.attributes,ee=ae.getAttributes(),q=te.defaultAttributeValues;for(const j in ee){const Z=ee[j];if(Z.location>=0){let xe=U[j];if(xe===void 0&&(j==="instanceMatrix"&&W.instanceMatrix&&(xe=W.instanceMatrix),j==="instanceColor"&&W.instanceColor&&(xe=W.instanceColor)),xe!==void 0){const pe=xe.normalized,Me=xe.itemSize,ie=t.get(xe);if(ie===void 0)continue;const Ge=ie.buffer,Ie=ie.type,Ye=ie.bytesPerElement;if(xe.isInterleavedBufferAttribute){const we=xe.data,Ze=we.stride,he=xe.offset;if(we.isInstancedInterleavedBuffer){for(let re=0;re<Z.locationSize;re++)P(Z.location+re,we.meshPerAttribute);W.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=we.meshPerAttribute*we.count)}else for(let re=0;re<Z.locationSize;re++)A(Z.location+re);l.bindBuffer(34962,Ge);for(let re=0;re<Z.locationSize;re++)O(Z.location+re,Me/Z.locationSize,Ie,pe,Ze*Ye,(he+Me/Z.locationSize*re)*Ye)}else{if(xe.isInstancedBufferAttribute){for(let we=0;we<Z.locationSize;we++)P(Z.location+we,xe.meshPerAttribute);W.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=xe.meshPerAttribute*xe.count)}else for(let we=0;we<Z.locationSize;we++)A(Z.location+we);l.bindBuffer(34962,Ge);for(let we=0;we<Z.locationSize;we++)O(Z.location+we,Me/Z.locationSize,Ie,pe,Me*Ye,Me/Z.locationSize*we*Ye)}}else if(q!==void 0){const pe=q[j];if(pe!==void 0)switch(pe.length){case 2:l.vertexAttrib2fv(Z.location,pe);break;case 3:l.vertexAttrib3fv(Z.location,pe);break;case 4:l.vertexAttrib4fv(Z.location,pe);break;default:l.vertexAttrib1fv(Z.location,pe)}}}}L()}h(C,"setupVertexAttributes");function I(){ce();for(const W in c){const te=c[W];for(const ae in te){const de=te[ae];for(const U in de)M(de[U].object),delete de[U];delete te[ae]}delete c[W]}}h(I,"dispose");function k(W){if(c[W.id]===void 0)return;const te=c[W.id];for(const ae in te){const de=te[ae];for(const U in de)M(de[U].object),delete de[U];delete te[ae]}delete c[W.id]}h(k,"releaseStatesOfGeometry");function G(W){for(const te in c){const ae=c[te];if(ae[W.id]===void 0)continue;const de=ae[W.id];for(const U in de)M(de[U].object),delete de[U];delete ae[W.id]}}h(G,"releaseStatesOfProgram");function ce(){Q(),p=!0,f!==u&&(f=u,x(f.object))}h(ce,"reset");function Q(){u.geometry=null,u.program=null,u.wireframe=!1}return h(Q,"resetDefaultState"),{setup:m,reset:ce,resetDefaultState:Q,dispose:I,releaseStatesOfGeometry:k,releaseStatesOfProgram:G,initAttributes:b,enableAttribute:A,disableUnusedAttributes:L}}h($S,"WebGLBindingStates");function ew(l,e,t,n){const i=n.isWebGL2;let r;function a(f){r=f}h(a,"setMode");function c(f,p){l.drawArrays(r,f,p),t.update(p,r,1)}h(c,"render");function u(f,p,m){if(m===0)return;let g,x;if(i)g=l,x="drawArraysInstanced";else if(g=e.get("ANGLE_instanced_arrays"),x="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[x](r,f,p,m),t.update(p,r,m)}h(u,"renderInstances"),this.setMode=a,this.render=c,this.renderInstances=u}h(ew,"WebGLBufferRenderer");function tw(l,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");n=l.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}h(i,"getMaxAnisotropy");function r(O){if(O==="highp"){if(l.getShaderPrecisionFormat(35633,36338).precision>0&&l.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";O="mediump"}return O==="mediump"&&l.getShaderPrecisionFormat(35633,36337).precision>0&&l.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}h(r,"getMaxPrecision");const a=typeof WebGL2RenderingContext<"u"&&l instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&l instanceof WebGL2ComputeRenderingContext;let c=t.precision!==void 0?t.precision:"highp";const u=r(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const f=a||e.has("WEBGL_draw_buffers"),p=t.logarithmicDepthBuffer===!0,m=l.getParameter(34930),g=l.getParameter(35660),x=l.getParameter(3379),M=l.getParameter(34076),y=l.getParameter(34921),_=l.getParameter(36347),w=l.getParameter(36348),E=l.getParameter(36349),b=g>0,A=a||e.has("OES_texture_float"),P=b&&A,L=a?l.getParameter(36183):0;return{isWebGL2:a,drawBuffers:f,getMaxAnisotropy:i,getMaxPrecision:r,precision:c,logarithmicDepthBuffer:p,maxTextures:m,maxVertexTextures:g,maxTextureSize:x,maxCubemapSize:M,maxAttributes:y,maxVertexUniforms:_,maxVaryings:w,maxFragmentUniforms:E,vertexTextures:b,floatFragmentTextures:A,floatVertexTextures:P,maxSamples:L}}h(tw,"WebGLCapabilities");function nw(l){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Yi,c=new yn,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g,x){const M=m.length!==0||g||n!==0||i;return i=g,t=p(m,x,0),n=m.length,M},this.beginShadows=function(){r=!0,p(null)},this.endShadows=function(){r=!1,f()},this.setState=function(m,g,x){const M=m.clippingPlanes,y=m.clipIntersection,_=m.clipShadows,w=l.get(m);if(!i||M===null||M.length===0||r&&!_)r?p(null):f();else{const E=r?0:n,b=E*4;let A=w.clippingState||null;u.value=A,A=p(M,g,b,x);for(let P=0;P!==b;++P)A[P]=t[P];w.clippingState=A,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=E}};function f(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}h(f,"resetGlobalState");function p(m,g,x,M){const y=m!==null?m.length:0;let _=null;if(y!==0){if(_=u.value,M!==!0||_===null){const w=x+y*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(_===null||_.length<w)&&(_=new Float32Array(w));for(let b=0,A=x;b!==y;++b,A+=4)a.copy(m[b]).applyMatrix4(E,c),a.normal.toArray(_,A),_[A+3]=a.constant}u.value=_,u.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,_}h(p,"projectPlanes")}h(nw,"WebGLClipping");function iw(l){let e=new WeakMap;function t(a,c){return c===Ma?a.mapping=Tr:c===Sa&&(a.mapping=Er),a}h(t,"mapTextureMapping");function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const c=a.mapping;if(c===Ma||c===Sa)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const f=new ud(u.height/2);return f.fromEquirectangularTexture(l,a),e.set(a,f),a.addEventListener("dispose",i),t(f.texture,a.mapping)}else return null}}return a}h(n,"get");function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}h(i,"onTextureDispose");function r(){e=new WeakMap}return h(r,"dispose"),{get:n,dispose:r}}h(iw,"WebGLCubeMaps");class bo extends So{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=f*this.view.offsetX,a=r+f*this.view.width,c-=p*this.view.offsetY,u=c-p*this.view.height}this.projectionMatrix.makeOrthographic(r,a,c,u,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}h(bo,"OrthographicCamera");const ao=4,jm=[.125,.215,.35,.446,.526,.582],ts=20,Jh=new bo,Qm=new Le;let jh=null;const $r=(1+Math.sqrt(5))/2,Qs=1/$r,Km=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,$r,Qs),new N(0,$r,-Qs),new N(Qs,0,$r),new N(-Qs,0,$r),new N($r,Qs,0),new N(-$r,Qs,0)];class Gc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){jh=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=tg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=eg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jh),e.scissorTest=!1,oc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Tr||e.mapping===Er?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Gt,minFilter:Gt,generateMipmaps:!1,type:co,format:Bn,encoding:$i,depthBuffer:!1},i=$m(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=$m(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=rw(r)),this._blurMaterial=sw(r,e,t)}return i}_compileMaterial(e){const t=new un(this._lodPlanes[0],e);this._renderer.compile(t,Jh)}_sceneToCubeUV(e,t,n,i){const c=new en(90,1,t,n),u=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,g=p.toneMapping;p.getClearColor(Qm),p.toneMapping=gi,p.autoClear=!1;const x=new tr({name:"PMREM.Background",side:Hn,depthWrite:!1,depthTest:!1}),M=new un(new nr,x);let y=!1;const _=e.background;_?_.isColor&&(x.color.copy(_),e.background=null,y=!0):(x.color.copy(Qm),y=!0);for(let w=0;w<6;w++){const E=w%3;E===0?(c.up.set(0,u[w],0),c.lookAt(f[w],0,0)):E===1?(c.up.set(0,0,u[w]),c.lookAt(0,f[w],0)):(c.up.set(0,u[w],0),c.lookAt(0,0,f[w]));const b=this._cubeSize;oc(i,E*b,w>2?b:0,b,b),p.setRenderTarget(i),y&&p.render(M,c),p.render(e,c)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=g,p.autoClear=m,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Tr||e.mapping===Er;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=tg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=eg());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new un(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=e;const u=this._cubeSize;oc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,Jh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Km[(i-1)%Km.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,c){const u=this._renderer,f=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new un(this._lodPlanes[i],f),g=f.uniforms,x=this._sizeLods[n]-1,M=isFinite(r)?Math.PI/(2*x):2*Math.PI/(2*ts-1),y=r/M,_=isFinite(r)?1+Math.floor(p*y):ts;_>ts&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${ts}`);const w=[];let E=0;for(let O=0;O<ts;++O){const C=O/y,I=Math.exp(-C*C/2);w.push(I),O===0?E+=I:O<_&&(E+=2*I)}for(let O=0;O<w.length;O++)w[O]=w[O]/E;g.envMap.value=e.texture,g.samples.value=_,g.weights.value=w,g.latitudinal.value=a==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:b}=this;g.dTheta.value=M,g.mipInt.value=b-n;const A=this._sizeLods[i],P=3*A*(i>b-ao?i-b+ao:0),L=4*(this._cubeSize-A);oc(t,P,L,3*A,2*A),u.setRenderTarget(t),u.render(m,Jh)}}h(Gc,"PMREMGenerator");function rw(l){const e=[],t=[],n=[];let i=l;const r=l-ao+1+jm.length;for(let a=0;a<r;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>l-ao?u=jm[a-l+ao-1]:a===0&&(u=0),n.push(u);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],x=6,M=6,y=3,_=2,w=1,E=new Float32Array(y*M*x),b=new Float32Array(_*M*x),A=new Float32Array(w*M*x);for(let L=0;L<x;L++){const O=L%3*2/3-1,C=L>2?0:-1,I=[O,C,0,O+2/3,C,0,O+2/3,C+1,0,O,C,0,O+2/3,C+1,0,O,C+1,0];E.set(I,y*M*L),b.set(g,_*M*L);const k=[L,L,L,L,L,L];A.set(k,w*M*L)}const P=new it;P.setAttribute("position",new Tt(E,y)),P.setAttribute("uv",new Tt(b,_)),P.setAttribute("faceIndex",new Tt(A,w)),e.push(P),i>ao&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}h(rw,"_createPlanes");function $m(l,e,t){const n=new Gn(l,e,t);return n.texture.mapping=_o,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}h($m,"_createRenderTarget");function oc(l,e,t,n,i){l.viewport.set(e,t,n,i),l.scissor.set(e,t,n,i)}h(oc,"_setViewport");function sw(l,e,t){const n=new Float32Array(ts),i=new N(0,1,0);return new xi({name:"SphericalGaussianBlur",defines:{n:ts,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${l}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ki,depthTest:!1,depthWrite:!1})}h(sw,"_getBlurShader");function eg(){return new xi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ki,depthTest:!1,depthWrite:!1})}h(eg,"_getEquirectMaterial");function tg(){return new xi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ki,depthTest:!1,depthWrite:!1})}h(tg,"_getCubemapMaterial");function hd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}h(hd,"_getCommonVertexShader");function ow(l){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,f=u===Ma||u===Sa,p=u===Tr||u===Er;if(f||p)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let m=e.get(c);return t===null&&(t=new Gc(l)),m=f?t.fromEquirectangular(c,m):t.fromCubemap(c,m),e.set(c,m),m.texture}else{if(e.has(c))return e.get(c).texture;{const m=c.image;if(f&&m&&m.height>0||p&&m&&i(m)){t===null&&(t=new Gc(l));const g=f?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,g),c.addEventListener("dispose",r),g.texture}else return null}}}return c}h(n,"get");function i(c){let u=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&u++;return u===f}h(i,"isCubeTextureComplete");function r(c){const u=c.target;u.removeEventListener("dispose",r);const f=e.get(u);f!==void 0&&(e.delete(u),f.dispose())}h(r,"onTextureDispose");function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return h(a,"dispose"),{get:n,dispose:a}}h(ow,"WebGLCubeUVMaps");function aw(l){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=l.getExtension("WEBGL_depth_texture")||l.getExtension("MOZ_WEBGL_depth_texture")||l.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=l.getExtension("WEBGL_compressed_texture_pvrtc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=l.getExtension(n)}return e[n]=i,i}return h(t,"getExtension"),{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}h(aw,"WebGLExtensions");function lw(l,e,t,n){const i={},r=new WeakMap;function a(m){const g=m.target;g.index!==null&&e.remove(g.index);for(const M in g.attributes)e.remove(g.attributes[M]);g.removeEventListener("dispose",a),delete i[g.id];const x=r.get(g);x&&(e.remove(x),r.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}h(a,"onGeometryDispose");function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",a),i[g.id]=!0,t.memory.geometries++),g}h(c,"get");function u(m){const g=m.attributes;for(const M in g)e.update(g[M],34962);const x=m.morphAttributes;for(const M in x){const y=x[M];for(let _=0,w=y.length;_<w;_++)e.update(y[_],34962)}}h(u,"update");function f(m){const g=[],x=m.index,M=m.attributes.position;let y=0;if(x!==null){const E=x.array;y=x.version;for(let b=0,A=E.length;b<A;b+=3){const P=E[b+0],L=E[b+1],O=E[b+2];g.push(P,L,L,O,O,P)}}else{const E=M.array;y=M.version;for(let b=0,A=E.length/3-1;b<A;b+=3){const P=b+0,L=b+1,O=b+2;g.push(P,L,L,O,O,P)}}const _=new(lv(g)?$c:Kc)(g,1);_.version=y;const w=r.get(m);w&&e.remove(w),r.set(m,_)}h(f,"updateWireframeAttribute");function p(m){const g=r.get(m);if(g){const x=m.index;x!==null&&g.version<x.version&&f(m)}else f(m);return r.get(m)}return h(p,"getWireframeAttribute"),{get:c,update:u,getWireframeAttribute:p}}h(lw,"WebGLGeometries");function cw(l,e,t,n){const i=n.isWebGL2;let r;function a(g){r=g}h(a,"setMode");let c,u;function f(g){c=g.type,u=g.bytesPerElement}h(f,"setIndex");function p(g,x){l.drawElements(r,x,c,g*u),t.update(x,r,1)}h(p,"render");function m(g,x,M){if(M===0)return;let y,_;if(i)y=l,_="drawElementsInstanced";else if(y=e.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[_](r,x,c,g*u,M),t.update(x,r,M)}h(m,"renderInstances"),this.setMode=a,this.setIndex=f,this.render=p,this.renderInstances=m}h(cw,"WebGLIndexedBufferRenderer");function uw(l){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,c){switch(t.calls++,a){case 4:t.triangles+=c*(r/3);break;case 1:t.lines+=c*(r/2);break;case 3:t.lines+=c*(r-1);break;case 2:t.lines+=c*r;break;case 0:t.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}h(n,"update");function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return h(i,"reset"),{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}h(uw,"WebGLInfo");function hw(l,e){return l[0]-e[0]}h(hw,"numericalSort");function fw(l,e){return Math.abs(e[1])-Math.abs(l[1])}h(fw,"absNumericalSort");function dw(l,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new bt,c=[];for(let f=0;f<8;f++)c[f]=[f,0];function u(f,p,m,g){const x=f.morphTargetInfluences;if(e.isWebGL2===!0){const M=p.morphAttributes.position||p.morphAttributes.normal||p.morphAttributes.color,y=M!==void 0?M.length:0;let _=r.get(p);if(_===void 0||_.count!==y){let te=function(){Q.dispose(),r.delete(p),p.removeEventListener("dispose",te)};h(te,"disposeTexture"),_!==void 0&&_.texture.dispose();const b=p.morphAttributes.position!==void 0,A=p.morphAttributes.normal!==void 0,P=p.morphAttributes.color!==void 0,L=p.morphAttributes.position||[],O=p.morphAttributes.normal||[],C=p.morphAttributes.color||[];let I=0;b===!0&&(I=1),A===!0&&(I=2),P===!0&&(I=3);let k=p.attributes.position.count*I,G=1;k>e.maxTextureSize&&(G=Math.ceil(k/e.maxTextureSize),k=e.maxTextureSize);const ce=new Float32Array(k*G*4*y),Q=new yo(ce,k,G,y);Q.type=ji,Q.needsUpdate=!0;const W=I*4;for(let ae=0;ae<y;ae++){const de=L[ae],U=O[ae],ee=C[ae],q=k*G*4*ae;for(let j=0;j<de.count;j++){const Z=j*W;b===!0&&(a.fromBufferAttribute(de,j),ce[q+Z+0]=a.x,ce[q+Z+1]=a.y,ce[q+Z+2]=a.z,ce[q+Z+3]=0),A===!0&&(a.fromBufferAttribute(U,j),ce[q+Z+4]=a.x,ce[q+Z+5]=a.y,ce[q+Z+6]=a.z,ce[q+Z+7]=0),P===!0&&(a.fromBufferAttribute(ee,j),ce[q+Z+8]=a.x,ce[q+Z+9]=a.y,ce[q+Z+10]=a.z,ce[q+Z+11]=ee.itemSize===4?a.w:1)}}_={count:y,texture:Q,size:new fe(k,G)},r.set(p,_),p.addEventListener("dispose",te)}let w=0;for(let b=0;b<x.length;b++)w+=x[b];const E=p.morphTargetsRelative?1:1-w;g.getUniforms().setValue(l,"morphTargetBaseInfluence",E),g.getUniforms().setValue(l,"morphTargetInfluences",x),g.getUniforms().setValue(l,"morphTargetsTexture",_.texture,t),g.getUniforms().setValue(l,"morphTargetsTextureSize",_.size)}else{const M=x===void 0?0:x.length;let y=n[p.id];if(y===void 0||y.length!==M){y=[];for(let A=0;A<M;A++)y[A]=[A,0];n[p.id]=y}for(let A=0;A<M;A++){const P=y[A];P[0]=A,P[1]=x[A]}y.sort(fw);for(let A=0;A<8;A++)A<M&&y[A][1]?(c[A][0]=y[A][0],c[A][1]=y[A][1]):(c[A][0]=Number.MAX_SAFE_INTEGER,c[A][1]=0);c.sort(hw);const _=p.morphAttributes.position,w=p.morphAttributes.normal;let E=0;for(let A=0;A<8;A++){const P=c[A],L=P[0],O=P[1];L!==Number.MAX_SAFE_INTEGER&&O?(_&&p.getAttribute("morphTarget"+A)!==_[L]&&p.setAttribute("morphTarget"+A,_[L]),w&&p.getAttribute("morphNormal"+A)!==w[L]&&p.setAttribute("morphNormal"+A,w[L]),i[A]=O,E+=O):(_&&p.hasAttribute("morphTarget"+A)===!0&&p.deleteAttribute("morphTarget"+A),w&&p.hasAttribute("morphNormal"+A)===!0&&p.deleteAttribute("morphNormal"+A),i[A]=0)}const b=p.morphTargetsRelative?1:1-E;g.getUniforms().setValue(l,"morphTargetBaseInfluence",b),g.getUniforms().setValue(l,"morphTargetInfluences",i)}}return h(u,"update"),{update:u}}h(dw,"WebGLMorphtargets");function pw(l,e,t,n){let i=new WeakMap;function r(u){const f=n.render.frame,p=u.geometry,m=e.get(u,p);return i.get(m)!==f&&(e.update(m),i.set(m,f)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,34962),u.instanceColor!==null&&t.update(u.instanceColor,34962)),m}h(r,"update");function a(){i=new WeakMap}h(a,"dispose");function c(u){const f=u.target;f.removeEventListener("dispose",c),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return h(c,"onInstancedMeshDispose"),{update:r,dispose:a}}h(pw,"WebGLObjects");const wv=new zt,bv=new yo,Tv=new za,Ev=new wo,ng=[],ig=[],rg=new Float32Array(16),sg=new Float32Array(9),og=new Float32Array(4);function To(l,e,t){const n=l[0];if(n<=0||n>0)return l;const i=e*t;let r=ng[i];if(r===void 0&&(r=new Float32Array(i),ng[i]=r),e!==0){n.toArray(r,0);for(let a=1,c=0;a!==e;++a)c+=t,l[a].toArray(r,c)}return r}h(To,"flatten");function tn(l,e){if(l.length!==e.length)return!1;for(let t=0,n=l.length;t<n;t++)if(l[t]!==e[t])return!1;return!0}h(tn,"arraysEqual");function nn(l,e){for(let t=0,n=e.length;t<n;t++)l[t]=e[t]}h(nn,"copyArray");function eu(l,e){let t=ig[e];t===void 0&&(t=new Int32Array(e),ig[e]=t);for(let n=0;n!==e;++n)t[n]=l.allocateTextureUnit();return t}h(eu,"allocTexUnits");function mw(l,e){const t=this.cache;t[0]!==e&&(l.uniform1f(this.addr,e),t[0]=e)}h(mw,"setValueV1f");function gw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;l.uniform2fv(this.addr,e),nn(t,e)}}h(gw,"setValueV2f");function vw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(l.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(tn(t,e))return;l.uniform3fv(this.addr,e),nn(t,e)}}h(vw,"setValueV3f");function xw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;l.uniform4fv(this.addr,e),nn(t,e)}}h(xw,"setValueV4f");function _w(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;l.uniformMatrix2fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;og.set(n),l.uniformMatrix2fv(this.addr,!1,og),nn(t,n)}}h(_w,"setValueM2");function yw(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;l.uniformMatrix3fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;sg.set(n),l.uniformMatrix3fv(this.addr,!1,sg),nn(t,n)}}h(yw,"setValueM3");function Mw(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;l.uniformMatrix4fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;rg.set(n),l.uniformMatrix4fv(this.addr,!1,rg),nn(t,n)}}h(Mw,"setValueM4");function Sw(l,e){const t=this.cache;t[0]!==e&&(l.uniform1i(this.addr,e),t[0]=e)}h(Sw,"setValueV1i");function ww(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;l.uniform2iv(this.addr,e),nn(t,e)}}h(ww,"setValueV2i");function bw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;l.uniform3iv(this.addr,e),nn(t,e)}}h(bw,"setValueV3i");function Tw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;l.uniform4iv(this.addr,e),nn(t,e)}}h(Tw,"setValueV4i");function Ew(l,e){const t=this.cache;t[0]!==e&&(l.uniform1ui(this.addr,e),t[0]=e)}h(Ew,"setValueV1ui");function Aw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;l.uniform2uiv(this.addr,e),nn(t,e)}}h(Aw,"setValueV2ui");function Cw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;l.uniform3uiv(this.addr,e),nn(t,e)}}h(Cw,"setValueV3ui");function Pw(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;l.uniform4uiv(this.addr,e),nn(t,e)}}h(Pw,"setValueV4ui");function Lw(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||wv,i)}h(Lw,"setValueT1");function Rw(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Tv,i)}h(Rw,"setValueT3D1");function Iw(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ev,i)}h(Iw,"setValueT6");function Dw(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||bv,i)}h(Dw,"setValueT2DArray1");function Nw(l){switch(l){case 5126:return mw;case 35664:return gw;case 35665:return vw;case 35666:return xw;case 35674:return _w;case 35675:return yw;case 35676:return Mw;case 5124:case 35670:return Sw;case 35667:case 35671:return ww;case 35668:case 35672:return bw;case 35669:case 35673:return Tw;case 5125:return Ew;case 36294:return Aw;case 36295:return Cw;case 36296:return Pw;case 35678:case 36198:case 36298:case 36306:case 35682:return Lw;case 35679:case 36299:case 36307:return Rw;case 35680:case 36300:case 36308:case 36293:return Iw;case 36289:case 36303:case 36311:case 36292:return Dw}}h(Nw,"getSingularSetter");function zw(l,e){l.uniform1fv(this.addr,e)}h(zw,"setValueV1fArray");function Fw(l,e){const t=To(e,this.size,2);l.uniform2fv(this.addr,t)}h(Fw,"setValueV2fArray");function Ow(l,e){const t=To(e,this.size,3);l.uniform3fv(this.addr,t)}h(Ow,"setValueV3fArray");function kw(l,e){const t=To(e,this.size,4);l.uniform4fv(this.addr,t)}h(kw,"setValueV4fArray");function Uw(l,e){const t=To(e,this.size,4);l.uniformMatrix2fv(this.addr,!1,t)}h(Uw,"setValueM2Array");function Bw(l,e){const t=To(e,this.size,9);l.uniformMatrix3fv(this.addr,!1,t)}h(Bw,"setValueM3Array");function Vw(l,e){const t=To(e,this.size,16);l.uniformMatrix4fv(this.addr,!1,t)}h(Vw,"setValueM4Array");function Hw(l,e){l.uniform1iv(this.addr,e)}h(Hw,"setValueV1iArray");function Ww(l,e){l.uniform2iv(this.addr,e)}h(Ww,"setValueV2iArray");function Gw(l,e){l.uniform3iv(this.addr,e)}h(Gw,"setValueV3iArray");function Xw(l,e){l.uniform4iv(this.addr,e)}h(Xw,"setValueV4iArray");function qw(l,e){l.uniform1uiv(this.addr,e)}h(qw,"setValueV1uiArray");function Yw(l,e){l.uniform2uiv(this.addr,e)}h(Yw,"setValueV2uiArray");function Zw(l,e){l.uniform3uiv(this.addr,e)}h(Zw,"setValueV3uiArray");function Jw(l,e){l.uniform4uiv(this.addr,e)}h(Jw,"setValueV4uiArray");function jw(l,e,t){const n=this.cache,i=e.length,r=eu(t,i);tn(n,r)||(l.uniform1iv(this.addr,r),nn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||wv,r[a])}h(jw,"setValueT1Array");function Qw(l,e,t){const n=this.cache,i=e.length,r=eu(t,i);tn(n,r)||(l.uniform1iv(this.addr,r),nn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Tv,r[a])}h(Qw,"setValueT3DArray");function Kw(l,e,t){const n=this.cache,i=e.length,r=eu(t,i);tn(n,r)||(l.uniform1iv(this.addr,r),nn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Ev,r[a])}h(Kw,"setValueT6Array");function $w(l,e,t){const n=this.cache,i=e.length,r=eu(t,i);tn(n,r)||(l.uniform1iv(this.addr,r),nn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||bv,r[a])}h($w,"setValueT2DArrayArray");function eb(l){switch(l){case 5126:return zw;case 35664:return Fw;case 35665:return Ow;case 35666:return kw;case 35674:return Uw;case 35675:return Bw;case 35676:return Vw;case 5124:case 35670:return Hw;case 35667:case 35671:return Ww;case 35668:case 35672:return Gw;case 35669:case 35673:return Xw;case 5125:return qw;case 36294:return Yw;case 36295:return Zw;case 36296:return Jw;case 35678:case 36198:case 36298:case 36306:case 35682:return jw;case 35679:case 36299:case 36307:return Qw;case 35680:case 36300:case 36308:case 36293:return Kw;case 36289:case 36303:case 36311:case 36292:return $w}}h(eb,"getPureArraySetter");class Av{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Nw(t.type)}}h(Av,"SingleUniform");class Cv{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=eb(t.type)}}h(Cv,"PureArrayUniform");class Pv{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const c=i[r];c.setValue(e,t[c.id],n)}}}h(Pv,"StructuredUniform");const Qh=/(\w+)(\])?(\[|\.)?/g;function ag(l,e){l.seq.push(e),l.map[e.id]=e}h(ag,"addUniform");function tb(l,e,t){const n=l.name,i=n.length;for(Qh.lastIndex=0;;){const r=Qh.exec(n),a=Qh.lastIndex;let c=r[1];const u=r[2]==="]",f=r[3];if(u&&(c=c|0),f===void 0||f==="["&&a+2===i){ag(t,f===void 0?new Av(c,l,e):new Cv(c,l,e));break}else{let m=t.map[c];m===void 0&&(m=new Pv(c),ag(t,m)),t=m}}}h(tb,"parseUniform");class xa{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);tb(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const c=t[r],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}h(xa,"WebGLUniforms");function lg(l,e,t){const n=l.createShader(e);return l.shaderSource(n,t),l.compileShader(n),n}h(lg,"WebGLShader");let nb=0;function ib(l,e){const t=l.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}h(ib,"handleSource");function rb(l){switch(l){case $i:return["Linear","( value )"];case Lt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",l),["Linear","( value )"]}}h(rb,"getEncodingComponents");function cg(l,e,t){const n=l.getShaderParameter(e,35713),i=l.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+ib(l.getShaderSource(e),a)}else return i}h(cg,"getShaderErrors");function sb(l,e){const t=rb(e);return"vec4 "+l+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}h(sb,"getTexelEncodingFunction");function ob(l,e){let t;switch(e){case z0:t="Linear";break;case F0:t="Reinhard";break;case O0:t="OptimizedCineon";break;case rd:t="ACESFilmic";break;case k0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+l+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}h(ob,"getToneMappingFunction");function ab(l){return[l.extensionDerivatives||!!l.envMapCubeUVHeight||l.bumpMap||l.tangentSpaceNormalMap||l.clearcoatNormalMap||l.flatShading||l.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(l.extensionFragDepth||l.logarithmicDepthBuffer)&&l.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",l.extensionDrawBuffers&&l.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(l.extensionShaderTextureLOD||l.envMap||l.transmission)&&l.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ga).join(`
`)}h(ab,"generateExtensions");function lb(l){const e=[];for(const t in l){const n=l[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}h(lb,"generateDefines");function cb(l,e){const t={},n=l.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=l.getActiveAttrib(e,i),a=r.name;let c=1;r.type===35674&&(c=2),r.type===35675&&(c=3),r.type===35676&&(c=4),t[a]={type:r.type,location:l.getAttribLocation(e,a),locationSize:c}}return t}h(cb,"fetchAttributeLocations");function ga(l){return l!==""}h(ga,"filterEmptyLine");function ug(l,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return l.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}h(ug,"replaceLightNums");function hg(l,e){return l.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}h(hg,"replaceClippingPlaneNums");const ub=/^[ \t]*#include +<([\w\d./]+)>/gm;function Gf(l){return l.replace(ub,hb)}h(Gf,"resolveIncludes");function hb(l,e){const t=at[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Gf(t)}h(hb,"includeReplacer");const fb=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function fg(l){return l.replace(fb,db)}h(fg,"unrollLoops");function db(l,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}h(db,"loopReplacer");function dg(l){let e="precision "+l.precision+` float;
precision `+l.precision+" int;";return l.precision==="highp"?e+=`
#define HIGH_PRECISION`:l.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:l.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}h(dg,"generatePrecision");function pb(l){let e="SHADOWMAP_TYPE_BASIC";return l.shadowMapType===ed?e="SHADOWMAP_TYPE_PCF":l.shadowMapType===td?e="SHADOWMAP_TYPE_PCF_SOFT":l.shadowMapType===so&&(e="SHADOWMAP_TYPE_VSM"),e}h(pb,"generateShadowMapTypeDefine");function mb(l){let e="ENVMAP_TYPE_CUBE";if(l.envMap)switch(l.envMapMode){case Tr:case Er:e="ENVMAP_TYPE_CUBE";break;case _o:e="ENVMAP_TYPE_CUBE_UV";break}return e}h(mb,"generateEnvMapTypeDefine");function gb(l){let e="ENVMAP_MODE_REFLECTION";if(l.envMap)switch(l.envMapMode){case Er:e="ENVMAP_MODE_REFRACTION";break}return e}h(gb,"generateEnvMapModeDefine");function vb(l){let e="ENVMAP_BLENDING_NONE";if(l.envMap)switch(l.combine){case Na:e="ENVMAP_BLENDING_MULTIPLY";break;case D0:e="ENVMAP_BLENDING_MIX";break;case N0:e="ENVMAP_BLENDING_ADD";break}return e}h(vb,"generateEnvMapBlendingDefine");function xb(l){const e=l.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}h(xb,"generateCubeUVSize");function _b(l,e,t,n){const i=l.getContext(),r=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=pb(t),f=mb(t),p=gb(t),m=vb(t),g=xb(t),x=t.isWebGL2?"":ab(t),M=lb(r),y=i.createProgram();let _,w,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=[M].filter(ga).join(`
`),_.length>0&&(_+=`
`),w=[x,M].filter(ga).join(`
`),w.length>0&&(w+=`
`)):(_=[dg(t),"#define SHADER_NAME "+t.shaderName,M,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ga).join(`
`),w=[x,dg(t),"#define SHADER_NAME "+t.shaderName,M,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",t.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==gi?"#define TONE_MAPPING":"",t.toneMapping!==gi?at.tonemapping_pars_fragment:"",t.toneMapping!==gi?ob("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",at.encodings_pars_fragment,sb("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ga).join(`
`)),a=Gf(a),a=ug(a,t),a=hg(a,t),c=Gf(c),c=ug(c,t),c=hg(c,t),a=fg(a),c=fg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,w=["#define varying in",t.glslVersion===Hf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Hf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w);const b=E+_+a,A=E+w+c,P=lg(i,35633,b),L=lg(i,35632,A);if(i.attachShader(y,P),i.attachShader(y,L),t.index0AttributeName!==void 0?i.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),l.debug.checkShaderErrors){const I=i.getProgramInfoLog(y).trim(),k=i.getShaderInfoLog(P).trim(),G=i.getShaderInfoLog(L).trim();let ce=!0,Q=!0;if(i.getProgramParameter(y,35714)===!1){ce=!1;const W=cg(i,P,"vertex"),te=cg(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,35715)+`

Program Info Log: `+I+`
`+W+`
`+te)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(k===""||G==="")&&(Q=!1);Q&&(this.diagnostics={runnable:ce,programLog:I,vertexShader:{log:k,prefix:_},fragmentShader:{log:G,prefix:w}})}i.deleteShader(P),i.deleteShader(L);let O;this.getUniforms=function(){return O===void 0&&(O=new xa(i,y)),O};let C;return this.getAttributes=function(){return C===void 0&&(C=cb(i,y)),C},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.name=t.shaderName,this.id=nb++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=P,this.fragmentShader=L,this}h(_b,"WebGLProgram");let yb=0;class Lv{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Rv(e),t.set(e,n)),n}}h(Lv,"WebGLShaderCache");class Rv{constructor(e){this.id=yb++,this.code=e,this.usedTimes=0}}h(Rv,"WebGLShaderStage");function Mb(l,e,t,n,i,r,a){const c=new wr,u=new Lv,f=[],p=i.isWebGL2,m=i.logarithmicDepthBuffer,g=i.vertexTextures;let x=i.precision;const M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(C,I,k,G,ce){const Q=G.fog,W=ce.geometry,te=C.isMeshStandardMaterial?G.environment:null,ae=(C.isMeshStandardMaterial?t:e).get(C.envMap||te),de=!!ae&&ae.mapping===_o?ae.image.height:null,U=M[C.type];C.precision!==null&&(x=i.getMaxPrecision(C.precision),x!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",x,"instead."));const ee=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,q=ee!==void 0?ee.length:0;let j=0;W.morphAttributes.position!==void 0&&(j=1),W.morphAttributes.normal!==void 0&&(j=2),W.morphAttributes.color!==void 0&&(j=3);let Z,xe,pe,Me;if(U){const Ze=mi[U];Z=Ze.vertexShader,xe=Ze.fragmentShader}else Z=C.vertexShader,xe=C.fragmentShader,u.update(C),pe=u.getVertexShaderID(C),Me=u.getFragmentShaderID(C);const ie=l.getRenderTarget(),Ge=C.alphaTest>0,Ie=C.clearcoat>0,Ye=C.iridescence>0;return{isWebGL2:p,shaderID:U,shaderName:C.type,vertexShader:Z,fragmentShader:xe,defines:C.defines,customVertexShaderID:pe,customFragmentShaderID:Me,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:x,instancing:ce.isInstancedMesh===!0,instancingColor:ce.isInstancedMesh===!0&&ce.instanceColor!==null,supportsVertexTextures:g,outputEncoding:ie===null?l.outputEncoding:ie.isXRRenderTarget===!0?ie.texture.encoding:$i,map:!!C.map,matcap:!!C.matcap,envMap:!!ae,envMapMode:ae&&ae.mapping,envMapCubeUVHeight:de,lightMap:!!C.lightMap,aoMap:!!C.aoMap,emissiveMap:!!C.emissiveMap,bumpMap:!!C.bumpMap,normalMap:!!C.normalMap,objectSpaceNormalMap:C.normalMapType===sv,tangentSpaceNormalMap:C.normalMapType===Pr,decodeVideoTexture:!!C.map&&C.map.isVideoTexture===!0&&C.map.encoding===Lt,clearcoat:Ie,clearcoatMap:Ie&&!!C.clearcoatMap,clearcoatRoughnessMap:Ie&&!!C.clearcoatRoughnessMap,clearcoatNormalMap:Ie&&!!C.clearcoatNormalMap,iridescence:Ye,iridescenceMap:Ye&&!!C.iridescenceMap,iridescenceThicknessMap:Ye&&!!C.iridescenceThicknessMap,displacementMap:!!C.displacementMap,roughnessMap:!!C.roughnessMap,metalnessMap:!!C.metalnessMap,specularMap:!!C.specularMap,specularIntensityMap:!!C.specularIntensityMap,specularColorMap:!!C.specularColorMap,opaque:C.transparent===!1&&C.blending===as,alphaMap:!!C.alphaMap,alphaTest:Ge,gradientMap:!!C.gradientMap,sheen:C.sheen>0,sheenColorMap:!!C.sheenColorMap,sheenRoughnessMap:!!C.sheenRoughnessMap,transmission:C.transmission>0,transmissionMap:!!C.transmissionMap,thicknessMap:!!C.thicknessMap,combine:C.combine,vertexTangents:!!C.normalMap&&!!W.attributes.tangent,vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUvs:!!C.map||!!C.bumpMap||!!C.normalMap||!!C.specularMap||!!C.alphaMap||!!C.emissiveMap||!!C.roughnessMap||!!C.metalnessMap||!!C.clearcoatMap||!!C.clearcoatRoughnessMap||!!C.clearcoatNormalMap||!!C.iridescenceMap||!!C.iridescenceThicknessMap||!!C.displacementMap||!!C.transmissionMap||!!C.thicknessMap||!!C.specularIntensityMap||!!C.specularColorMap||!!C.sheenColorMap||!!C.sheenRoughnessMap,uvsVertexOnly:!(!!C.map||!!C.bumpMap||!!C.normalMap||!!C.specularMap||!!C.alphaMap||!!C.emissiveMap||!!C.roughnessMap||!!C.metalnessMap||!!C.clearcoatNormalMap||!!C.iridescenceMap||!!C.iridescenceThicknessMap||C.transmission>0||!!C.transmissionMap||!!C.thicknessMap||!!C.specularIntensityMap||!!C.specularColorMap||C.sheen>0||!!C.sheenColorMap||!!C.sheenRoughnessMap)&&!!C.displacementMap,fog:!!Q,useFog:C.fog===!0,fogExp2:Q&&Q.isFogExp2,flatShading:!!C.flatShading,sizeAttenuation:C.sizeAttenuation,logarithmicDepthBuffer:m,skinning:ce.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:q,morphTextureStride:j,numDirLights:I.directional.length,numPointLights:I.point.length,numSpotLights:I.spot.length,numSpotLightMaps:I.spotLightMap.length,numRectAreaLights:I.rectArea.length,numHemiLights:I.hemi.length,numDirLightShadows:I.directionalShadowMap.length,numPointLightShadows:I.pointShadowMap.length,numSpotLightShadows:I.spotShadowMap.length,numSpotLightShadowsWithMaps:I.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:C.dithering,shadowMapEnabled:l.shadowMap.enabled&&k.length>0,shadowMapType:l.shadowMap.type,toneMapping:C.toneMapped?l.toneMapping:gi,physicallyCorrectLights:l.physicallyCorrectLights,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===Ji,flipSided:C.side===Hn,useDepthPacking:!!C.depthPacking,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionDerivatives:C.extensions&&C.extensions.derivatives,extensionFragDepth:C.extensions&&C.extensions.fragDepth,extensionDrawBuffers:C.extensions&&C.extensions.drawBuffers,extensionShaderTextureLOD:C.extensions&&C.extensions.shaderTextureLOD,rendererExtensionFragDepth:p||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||n.has("EXT_shader_texture_lod"),customProgramCacheKey:C.customProgramCacheKey()}}h(y,"getParameters");function _(C){const I=[];if(C.shaderID?I.push(C.shaderID):(I.push(C.customVertexShaderID),I.push(C.customFragmentShaderID)),C.defines!==void 0)for(const k in C.defines)I.push(k),I.push(C.defines[k]);return C.isRawShaderMaterial===!1&&(w(I,C),E(I,C),I.push(l.outputEncoding)),I.push(C.customProgramCacheKey),I.join()}h(_,"getProgramCacheKey");function w(C,I){C.push(I.precision),C.push(I.outputEncoding),C.push(I.envMapMode),C.push(I.envMapCubeUVHeight),C.push(I.combine),C.push(I.vertexUvs),C.push(I.fogExp2),C.push(I.sizeAttenuation),C.push(I.morphTargetsCount),C.push(I.morphAttributeCount),C.push(I.numDirLights),C.push(I.numPointLights),C.push(I.numSpotLights),C.push(I.numSpotLightMaps),C.push(I.numHemiLights),C.push(I.numRectAreaLights),C.push(I.numDirLightShadows),C.push(I.numPointLightShadows),C.push(I.numSpotLightShadows),C.push(I.numSpotLightShadowsWithMaps),C.push(I.shadowMapType),C.push(I.toneMapping),C.push(I.numClippingPlanes),C.push(I.numClipIntersection),C.push(I.depthPacking)}h(w,"getProgramCacheKeyParameters");function E(C,I){c.disableAll(),I.isWebGL2&&c.enable(0),I.supportsVertexTextures&&c.enable(1),I.instancing&&c.enable(2),I.instancingColor&&c.enable(3),I.map&&c.enable(4),I.matcap&&c.enable(5),I.envMap&&c.enable(6),I.lightMap&&c.enable(7),I.aoMap&&c.enable(8),I.emissiveMap&&c.enable(9),I.bumpMap&&c.enable(10),I.normalMap&&c.enable(11),I.objectSpaceNormalMap&&c.enable(12),I.tangentSpaceNormalMap&&c.enable(13),I.clearcoat&&c.enable(14),I.clearcoatMap&&c.enable(15),I.clearcoatRoughnessMap&&c.enable(16),I.clearcoatNormalMap&&c.enable(17),I.iridescence&&c.enable(18),I.iridescenceMap&&c.enable(19),I.iridescenceThicknessMap&&c.enable(20),I.displacementMap&&c.enable(21),I.specularMap&&c.enable(22),I.roughnessMap&&c.enable(23),I.metalnessMap&&c.enable(24),I.gradientMap&&c.enable(25),I.alphaMap&&c.enable(26),I.alphaTest&&c.enable(27),I.vertexColors&&c.enable(28),I.vertexAlphas&&c.enable(29),I.vertexUvs&&c.enable(30),I.vertexTangents&&c.enable(31),I.uvsVertexOnly&&c.enable(32),C.push(c.mask),c.disableAll(),I.fog&&c.enable(0),I.useFog&&c.enable(1),I.flatShading&&c.enable(2),I.logarithmicDepthBuffer&&c.enable(3),I.skinning&&c.enable(4),I.morphTargets&&c.enable(5),I.morphNormals&&c.enable(6),I.morphColors&&c.enable(7),I.premultipliedAlpha&&c.enable(8),I.shadowMapEnabled&&c.enable(9),I.physicallyCorrectLights&&c.enable(10),I.doubleSided&&c.enable(11),I.flipSided&&c.enable(12),I.useDepthPacking&&c.enable(13),I.dithering&&c.enable(14),I.specularIntensityMap&&c.enable(15),I.specularColorMap&&c.enable(16),I.transmission&&c.enable(17),I.transmissionMap&&c.enable(18),I.thicknessMap&&c.enable(19),I.sheen&&c.enable(20),I.sheenColorMap&&c.enable(21),I.sheenRoughnessMap&&c.enable(22),I.decodeVideoTexture&&c.enable(23),I.opaque&&c.enable(24),C.push(c.mask)}h(E,"getProgramCacheKeyBooleans");function b(C){const I=M[C.type];let k;if(I){const G=mi[I];k=Mv.clone(G.uniforms)}else k=C.uniforms;return k}h(b,"getUniforms");function A(C,I){let k;for(let G=0,ce=f.length;G<ce;G++){const Q=f[G];if(Q.cacheKey===I){k=Q,++k.usedTimes;break}}return k===void 0&&(k=new _b(l,I,C,r),f.push(k)),k}h(A,"acquireProgram");function P(C){if(--C.usedTimes===0){const I=f.indexOf(C);f[I]=f[f.length-1],f.pop(),C.destroy()}}h(P,"releaseProgram");function L(C){u.remove(C)}h(L,"releaseShaderCache");function O(){u.dispose()}return h(O,"dispose"),{getParameters:y,getProgramCacheKey:_,getUniforms:b,acquireProgram:A,releaseProgram:P,releaseShaderCache:L,programs:f,dispose:O}}h(Mb,"WebGLPrograms");function Sb(){let l=new WeakMap;function e(r){let a=l.get(r);return a===void 0&&(a={},l.set(r,a)),a}h(e,"get");function t(r){l.delete(r)}h(t,"remove");function n(r,a,c){l.get(r)[a]=c}h(n,"update");function i(){l=new WeakMap}return h(i,"dispose"),{get:e,remove:t,update:n,dispose:i}}h(Sb,"WebGLProperties");function wb(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.material.id!==e.material.id?l.material.id-e.material.id:l.z!==e.z?l.z-e.z:l.id-e.id}h(wb,"painterSortStable");function pg(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.z!==e.z?e.z-l.z:l.id-e.id}h(pg,"reversePainterSortStable");function mg(){const l=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}h(r,"init");function a(m,g,x,M,y,_){let w=l[e];return w===void 0?(w={id:m.id,object:m,geometry:g,material:x,groupOrder:M,renderOrder:m.renderOrder,z:y,group:_},l[e]=w):(w.id=m.id,w.object=m,w.geometry=g,w.material=x,w.groupOrder=M,w.renderOrder=m.renderOrder,w.z=y,w.group=_),e++,w}h(a,"getNextRenderItem");function c(m,g,x,M,y,_){const w=a(m,g,x,M,y,_);x.transmission>0?n.push(w):x.transparent===!0?i.push(w):t.push(w)}h(c,"push");function u(m,g,x,M,y,_){const w=a(m,g,x,M,y,_);x.transmission>0?n.unshift(w):x.transparent===!0?i.unshift(w):t.unshift(w)}h(u,"unshift");function f(m,g){t.length>1&&t.sort(m||wb),n.length>1&&n.sort(g||pg),i.length>1&&i.sort(g||pg)}h(f,"sort");function p(){for(let m=e,g=l.length;m<g;m++){const x=l[m];if(x.id===null)break;x.id=null,x.object=null,x.geometry=null,x.material=null,x.group=null}}return h(p,"finish"),{opaque:t,transmissive:n,transparent:i,init:r,push:c,unshift:u,finish:p,sort:f}}h(mg,"WebGLRenderList");function bb(){let l=new WeakMap;function e(n,i){const r=l.get(n);let a;return r===void 0?(a=new mg,l.set(n,[a])):i>=r.length?(a=new mg,r.push(a)):a=r[i],a}h(e,"get");function t(){l=new WeakMap}return h(t,"dispose"),{get:e,dispose:t}}h(bb,"WebGLRenderLists");function Tb(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Le};break;case"SpotLight":t={position:new N,direction:new N,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new N,halfWidth:new N,halfHeight:new N};break}return l[e.id]=t,t}}}h(Tb,"UniformsCache");function Eb(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return l[e.id]=t,t}}}h(Eb,"ShadowUniformsCache");let Ab=0;function Cb(l,e){return(e.castShadow?2:0)-(l.castShadow?2:0)+(e.map?1:0)-(l.map?1:0)}h(Cb,"shadowCastingAndTexturingLightsFirst");function Pb(l,e){const t=new Tb,n=Eb(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let p=0;p<9;p++)i.probe.push(new N);const r=new N,a=new tt,c=new tt;function u(p,m){let g=0,x=0,M=0;for(let G=0;G<9;G++)i.probe[G].set(0,0,0);let y=0,_=0,w=0,E=0,b=0,A=0,P=0,L=0,O=0,C=0;p.sort(Cb);const I=m!==!0?Math.PI:1;for(let G=0,ce=p.length;G<ce;G++){const Q=p[G],W=Q.color,te=Q.intensity,ae=Q.distance,de=Q.shadow&&Q.shadow.map?Q.shadow.map.texture:null;if(Q.isAmbientLight)g+=W.r*te*I,x+=W.g*te*I,M+=W.b*te*I;else if(Q.isLightProbe)for(let U=0;U<9;U++)i.probe[U].addScaledVector(Q.sh.coefficients[U],te);else if(Q.isDirectionalLight){const U=t.get(Q);if(U.color.copy(Q.color).multiplyScalar(Q.intensity*I),Q.castShadow){const ee=Q.shadow,q=n.get(Q);q.shadowBias=ee.bias,q.shadowNormalBias=ee.normalBias,q.shadowRadius=ee.radius,q.shadowMapSize=ee.mapSize,i.directionalShadow[y]=q,i.directionalShadowMap[y]=de,i.directionalShadowMatrix[y]=Q.shadow.matrix,A++}i.directional[y]=U,y++}else if(Q.isSpotLight){const U=t.get(Q);U.position.setFromMatrixPosition(Q.matrixWorld),U.color.copy(W).multiplyScalar(te*I),U.distance=ae,U.coneCos=Math.cos(Q.angle),U.penumbraCos=Math.cos(Q.angle*(1-Q.penumbra)),U.decay=Q.decay,i.spot[w]=U;const ee=Q.shadow;if(Q.map&&(i.spotLightMap[O]=Q.map,O++,ee.updateMatrices(Q),Q.castShadow&&C++),i.spotLightMatrix[w]=ee.matrix,Q.castShadow){const q=n.get(Q);q.shadowBias=ee.bias,q.shadowNormalBias=ee.normalBias,q.shadowRadius=ee.radius,q.shadowMapSize=ee.mapSize,i.spotShadow[w]=q,i.spotShadowMap[w]=de,L++}w++}else if(Q.isRectAreaLight){const U=t.get(Q);U.color.copy(W).multiplyScalar(te),U.halfWidth.set(Q.width*.5,0,0),U.halfHeight.set(0,Q.height*.5,0),i.rectArea[E]=U,E++}else if(Q.isPointLight){const U=t.get(Q);if(U.color.copy(Q.color).multiplyScalar(Q.intensity*I),U.distance=Q.distance,U.decay=Q.decay,Q.castShadow){const ee=Q.shadow,q=n.get(Q);q.shadowBias=ee.bias,q.shadowNormalBias=ee.normalBias,q.shadowRadius=ee.radius,q.shadowMapSize=ee.mapSize,q.shadowCameraNear=ee.camera.near,q.shadowCameraFar=ee.camera.far,i.pointShadow[_]=q,i.pointShadowMap[_]=de,i.pointShadowMatrix[_]=Q.shadow.matrix,P++}i.point[_]=U,_++}else if(Q.isHemisphereLight){const U=t.get(Q);U.skyColor.copy(Q.color).multiplyScalar(te*I),U.groundColor.copy(Q.groundColor).multiplyScalar(te*I),i.hemi[b]=U,b++}}E>0&&(e.isWebGL2||l.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_FLOAT_1,i.rectAreaLTC2=Se.LTC_FLOAT_2):l.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_HALF_1,i.rectAreaLTC2=Se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=g,i.ambient[1]=x,i.ambient[2]=M;const k=i.hash;(k.directionalLength!==y||k.pointLength!==_||k.spotLength!==w||k.rectAreaLength!==E||k.hemiLength!==b||k.numDirectionalShadows!==A||k.numPointShadows!==P||k.numSpotShadows!==L||k.numSpotMaps!==O)&&(i.directional.length=y,i.spot.length=w,i.rectArea.length=E,i.point.length=_,i.hemi.length=b,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=P,i.pointShadowMap.length=P,i.spotShadow.length=L,i.spotShadowMap.length=L,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=P,i.spotLightMatrix.length=L+O-C,i.spotLightMap.length=O,i.numSpotLightShadowsWithMaps=C,k.directionalLength=y,k.pointLength=_,k.spotLength=w,k.rectAreaLength=E,k.hemiLength=b,k.numDirectionalShadows=A,k.numPointShadows=P,k.numSpotShadows=L,k.numSpotMaps=O,i.version=Ab++)}h(u,"setup");function f(p,m){let g=0,x=0,M=0,y=0,_=0;const w=m.matrixWorldInverse;for(let E=0,b=p.length;E<b;E++){const A=p[E];if(A.isDirectionalLight){const P=i.directional[g];P.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),P.direction.sub(r),P.direction.transformDirection(w),g++}else if(A.isSpotLight){const P=i.spot[M];P.position.setFromMatrixPosition(A.matrixWorld),P.position.applyMatrix4(w),P.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),P.direction.sub(r),P.direction.transformDirection(w),M++}else if(A.isRectAreaLight){const P=i.rectArea[y];P.position.setFromMatrixPosition(A.matrixWorld),P.position.applyMatrix4(w),c.identity(),a.copy(A.matrixWorld),a.premultiply(w),c.extractRotation(a),P.halfWidth.set(A.width*.5,0,0),P.halfHeight.set(0,A.height*.5,0),P.halfWidth.applyMatrix4(c),P.halfHeight.applyMatrix4(c),y++}else if(A.isPointLight){const P=i.point[x];P.position.setFromMatrixPosition(A.matrixWorld),P.position.applyMatrix4(w),x++}else if(A.isHemisphereLight){const P=i.hemi[_];P.direction.setFromMatrixPosition(A.matrixWorld),P.direction.transformDirection(w),_++}}}return h(f,"setupView"),{setup:u,setupView:f,state:i}}h(Pb,"WebGLLights");function gg(l,e){const t=new Pb(l,e),n=[],i=[];function r(){n.length=0,i.length=0}h(r,"init");function a(m){n.push(m)}h(a,"pushLight");function c(m){i.push(m)}h(c,"pushShadow");function u(m){t.setup(n,m)}h(u,"setupLights");function f(m){t.setupView(n,m)}return h(f,"setupLightsView"),{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:f,pushLight:a,pushShadow:c}}h(gg,"WebGLRenderState");function Lb(l,e){let t=new WeakMap;function n(r,a=0){const c=t.get(r);let u;return c===void 0?(u=new gg(l,e),t.set(r,[u])):a>=c.length?(u=new gg(l,e),c.push(u)):u=c[a],u}h(n,"get");function i(){t=new WeakMap}return h(i,"dispose"),{get:n,dispose:i}}h(Lb,"WebGLRenderStates");class tu extends hn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=iv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}h(tu,"MeshDepthMaterial");class nu extends hn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new N,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}h(nu,"MeshDistanceMaterial");const Rb=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Ib=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Db(l,e,t){let n=new Fa;const i=new fe,r=new fe,a=new bt,c=new tu({depthPacking:rv}),u=new nu,f={},p=t.maxTextureSize,m={0:Hn,1:fs,2:Ji},g=new xi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:Rb,fragmentShader:Ib}),x=g.clone();x.defines.HORIZONTAL_PASS=1;const M=new it;M.setAttribute("position",new Tt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new un(M,g),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ed,this.render=function(A,P,L){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||A.length===0)return;const O=l.getRenderTarget(),C=l.getActiveCubeFace(),I=l.getActiveMipmapLevel(),k=l.state;k.setBlending(Ki),k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);for(let G=0,ce=A.length;G<ce;G++){const Q=A[G],W=Q.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;i.copy(W.mapSize);const te=W.getFrameExtents();if(i.multiply(te),r.copy(W.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(r.x=Math.floor(p/te.x),i.x=r.x*te.x,W.mapSize.x=r.x),i.y>p&&(r.y=Math.floor(p/te.y),i.y=r.y*te.y,W.mapSize.y=r.y)),W.map===null){const de=this.type!==so?{minFilter:Qt,magFilter:Qt}:{};W.map=new Gn(i.x,i.y,de),W.map.texture.name=Q.name+".shadowMap",W.camera.updateProjectionMatrix()}l.setRenderTarget(W.map),l.clear();const ae=W.getViewportCount();for(let de=0;de<ae;de++){const U=W.getViewport(de);a.set(r.x*U.x,r.y*U.y,r.x*U.z,r.y*U.w),k.viewport(a),W.updateMatrices(Q,de),n=W.getFrustum(),b(P,L,W.camera,Q,this.type)}W.isPointLightShadow!==!0&&this.type===so&&w(W,L),W.needsUpdate=!1}_.needsUpdate=!1,l.setRenderTarget(O,C,I)};function w(A,P){const L=e.update(y);g.defines.VSM_SAMPLES!==A.blurSamples&&(g.defines.VSM_SAMPLES=A.blurSamples,x.defines.VSM_SAMPLES=A.blurSamples,g.needsUpdate=!0,x.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new Gn(i.x,i.y)),g.uniforms.shadow_pass.value=A.map.texture,g.uniforms.resolution.value=A.mapSize,g.uniforms.radius.value=A.radius,l.setRenderTarget(A.mapPass),l.clear(),l.renderBufferDirect(P,null,L,g,y,null),x.uniforms.shadow_pass.value=A.mapPass.texture,x.uniforms.resolution.value=A.mapSize,x.uniforms.radius.value=A.radius,l.setRenderTarget(A.map),l.clear(),l.renderBufferDirect(P,null,L,x,y,null)}h(w,"VSMPass");function E(A,P,L,O,C,I){let k=null;const G=L.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(G!==void 0?k=G:k=L.isPointLight===!0?u:c,l.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const ce=k.uuid,Q=P.uuid;let W=f[ce];W===void 0&&(W={},f[ce]=W);let te=W[Q];te===void 0&&(te=k.clone(),W[Q]=te),k=te}return k.visible=P.visible,k.wireframe=P.wireframe,I===so?k.side=P.shadowSide!==null?P.shadowSide:P.side:k.side=P.shadowSide!==null?P.shadowSide:m[P.side],k.alphaMap=P.alphaMap,k.alphaTest=P.alphaTest,k.map=P.map,k.clipShadows=P.clipShadows,k.clippingPlanes=P.clippingPlanes,k.clipIntersection=P.clipIntersection,k.displacementMap=P.displacementMap,k.displacementScale=P.displacementScale,k.displacementBias=P.displacementBias,k.wireframeLinewidth=P.wireframeLinewidth,k.linewidth=P.linewidth,L.isPointLight===!0&&k.isMeshDistanceMaterial===!0&&(k.referencePosition.setFromMatrixPosition(L.matrixWorld),k.nearDistance=O,k.farDistance=C),k}h(E,"getDepthMaterial");function b(A,P,L,O,C){if(A.visible===!1)return;if(A.layers.test(P.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&C===so)&&(!A.frustumCulled||n.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,A.matrixWorld);const G=e.update(A),ce=A.material;if(Array.isArray(ce)){const Q=G.groups;for(let W=0,te=Q.length;W<te;W++){const ae=Q[W],de=ce[ae.materialIndex];if(de&&de.visible){const U=E(A,de,O,L.near,L.far,C);l.renderBufferDirect(L,null,G,U,A,ae)}}}else if(ce.visible){const Q=E(A,ce,O,L.near,L.far,C);l.renderBufferDirect(L,null,G,Q,A,null)}}const k=A.children;for(let G=0,ce=k.length;G<ce;G++)b(k[G],P,L,O,C)}h(b,"renderObject")}h(Db,"WebGLShadowMap");function Nb(l,e,t){const n=t.isWebGL2;function i(){let V=!1;const oe=new bt;let me=null;const Pe=new bt(0,0,0,0);return{setMask:function(Oe){me!==Oe&&!V&&(l.colorMask(Oe,Oe,Oe,Oe),me=Oe)},setLocked:function(Oe){V=Oe},setClear:function(Oe,gt,Bt,rn,yi){yi===!0&&(Oe*=rn,gt*=rn,Bt*=rn),oe.set(Oe,gt,Bt,rn),Pe.equals(oe)===!1&&(l.clearColor(Oe,gt,Bt,rn),Pe.copy(oe))},reset:function(){V=!1,me=null,Pe.set(-1,0,0,0)}}}h(i,"ColorBuffer");function r(){let V=!1,oe=null,me=null,Pe=null;return{setTest:function(Oe){Oe?Ge(2929):Ie(2929)},setMask:function(Oe){oe!==Oe&&!V&&(l.depthMask(Oe),oe=Oe)},setFunc:function(Oe){if(me!==Oe){switch(Oe){case E0:l.depthFunc(512);break;case A0:l.depthFunc(519);break;case C0:l.depthFunc(513);break;case Uc:l.depthFunc(515);break;case P0:l.depthFunc(514);break;case L0:l.depthFunc(518);break;case R0:l.depthFunc(516);break;case I0:l.depthFunc(517);break;default:l.depthFunc(515)}me=Oe}},setLocked:function(Oe){V=Oe},setClear:function(Oe){Pe!==Oe&&(l.clearDepth(Oe),Pe=Oe)},reset:function(){V=!1,oe=null,me=null,Pe=null}}}h(r,"DepthBuffer");function a(){let V=!1,oe=null,me=null,Pe=null,Oe=null,gt=null,Bt=null,rn=null,yi=null;return{setTest:function(At){V||(At?Ge(2960):Ie(2960))},setMask:function(At){oe!==At&&!V&&(l.stencilMask(At),oe=At)},setFunc:function(At,Xn,Cn){(me!==At||Pe!==Xn||Oe!==Cn)&&(l.stencilFunc(At,Xn,Cn),me=At,Pe=Xn,Oe=Cn)},setOp:function(At,Xn,Cn){(gt!==At||Bt!==Xn||rn!==Cn)&&(l.stencilOp(At,Xn,Cn),gt=At,Bt=Xn,rn=Cn)},setLocked:function(At){V=At},setClear:function(At){yi!==At&&(l.clearStencil(At),yi=At)},reset:function(){V=!1,oe=null,me=null,Pe=null,Oe=null,gt=null,Bt=null,rn=null,yi=null}}}h(a,"StencilBuffer");const c=new i,u=new r,f=new a,p=new WeakMap,m=new WeakMap;let g={},x={},M=new WeakMap,y=[],_=null,w=!1,E=null,b=null,A=null,P=null,L=null,O=null,C=null,I=!1,k=null,G=null,ce=null,Q=null,W=null;const te=l.getParameter(35661);let ae=!1,de=0;const U=l.getParameter(7938);U.indexOf("WebGL")!==-1?(de=parseFloat(/^WebGL (\d)/.exec(U)[1]),ae=de>=1):U.indexOf("OpenGL ES")!==-1&&(de=parseFloat(/^OpenGL ES (\d)/.exec(U)[1]),ae=de>=2);let ee=null,q={};const j=l.getParameter(3088),Z=l.getParameter(2978),xe=new bt().fromArray(j),pe=new bt().fromArray(Z);function Me(V,oe,me){const Pe=new Uint8Array(4),Oe=l.createTexture();l.bindTexture(V,Oe),l.texParameteri(V,10241,9728),l.texParameteri(V,10240,9728);for(let gt=0;gt<me;gt++)l.texImage2D(oe+gt,0,6408,1,1,0,6408,5121,Pe);return Oe}h(Me,"createTexture");const ie={};ie[3553]=Me(3553,3553,1),ie[34067]=Me(34067,34069,6),c.setClear(0,0,0,1),u.setClear(1),f.setClear(0),Ge(2929),u.setFunc(Uc),be(!1),Qe(mf),Ge(2884),ye(Ki);function Ge(V){g[V]!==!0&&(l.enable(V),g[V]=!0)}h(Ge,"enable");function Ie(V){g[V]!==!1&&(l.disable(V),g[V]=!1)}h(Ie,"disable");function Ye(V,oe){return x[V]!==oe?(l.bindFramebuffer(V,oe),x[V]=oe,n&&(V===36009&&(x[36160]=oe),V===36160&&(x[36009]=oe)),!0):!1}h(Ye,"bindFramebuffer");function we(V,oe){let me=y,Pe=!1;if(V)if(me=M.get(oe),me===void 0&&(me=[],M.set(oe,me)),V.isWebGLMultipleRenderTargets){const Oe=V.texture;if(me.length!==Oe.length||me[0]!==36064){for(let gt=0,Bt=Oe.length;gt<Bt;gt++)me[gt]=36064+gt;me.length=Oe.length,Pe=!0}}else me[0]!==36064&&(me[0]=36064,Pe=!0);else me[0]!==1029&&(me[0]=1029,Pe=!0);Pe&&(t.isWebGL2?l.drawBuffers(me):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(me))}h(we,"drawBuffers");function Ze(V){return _!==V?(l.useProgram(V),_=V,!0):!1}h(Ze,"useProgram");const he={[es]:32774,[m0]:32778,[g0]:32779};if(n)he[_f]=32775,he[yf]=32776;else{const V=e.get("EXT_blend_minmax");V!==null&&(he[_f]=V.MIN_EXT,he[yf]=V.MAX_EXT)}const re={[v0]:0,[x0]:1,[_0]:768,[nd]:770,[T0]:776,[w0]:774,[M0]:772,[y0]:769,[id]:771,[b0]:775,[S0]:773};function ye(V,oe,me,Pe,Oe,gt,Bt,rn){if(V===Ki){w===!0&&(Ie(3042),w=!1);return}if(w===!1&&(Ge(3042),w=!0),V!==p0){if(V!==E||rn!==I){if((b!==es||L!==es)&&(l.blendEquation(32774),b=es,L=es),rn)switch(V){case as:l.blendFuncSeparate(1,771,1,771);break;case gf:l.blendFunc(1,1);break;case vf:l.blendFuncSeparate(0,769,0,1);break;case xf:l.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case as:l.blendFuncSeparate(770,771,1,771);break;case gf:l.blendFunc(770,1);break;case vf:l.blendFuncSeparate(0,769,0,1);break;case xf:l.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}A=null,P=null,O=null,C=null,E=V,I=rn}return}Oe=Oe||oe,gt=gt||me,Bt=Bt||Pe,(oe!==b||Oe!==L)&&(l.blendEquationSeparate(he[oe],he[Oe]),b=oe,L=Oe),(me!==A||Pe!==P||gt!==O||Bt!==C)&&(l.blendFuncSeparate(re[me],re[Pe],re[gt],re[Bt]),A=me,P=Pe,O=gt,C=Bt),E=V,I=!1}h(ye,"setBlending");function De(V,oe){V.side===Ji?Ie(2884):Ge(2884);let me=V.side===Hn;oe&&(me=!me),be(me),V.blending===as&&V.transparent===!1?ye(Ki):ye(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.premultipliedAlpha),u.setFunc(V.depthFunc),u.setTest(V.depthTest),u.setMask(V.depthWrite),c.setMask(V.colorWrite);const Pe=V.stencilWrite;f.setTest(Pe),Pe&&(f.setMask(V.stencilWriteMask),f.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),f.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),He(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Ge(32926):Ie(32926)}h(De,"setMaterial");function be(V){k!==V&&(V?l.frontFace(2304):l.frontFace(2305),k=V)}h(be,"setFlipSided");function Qe(V){V!==f0?(Ge(2884),V!==G&&(V===mf?l.cullFace(1029):V===d0?l.cullFace(1028):l.cullFace(1032))):Ie(2884),G=V}h(Qe,"setCullFace");function Xe(V){V!==ce&&(ae&&l.lineWidth(V),ce=V)}h(Xe,"setLineWidth");function He(V,oe,me){V?(Ge(32823),(Q!==oe||W!==me)&&(l.polygonOffset(oe,me),Q=oe,W=me)):Ie(32823)}h(He,"setPolygonOffset");function Mt(V){V?Ge(3089):Ie(3089)}h(Mt,"setScissorTest");function St(V){V===void 0&&(V=33984+te-1),ee!==V&&(l.activeTexture(V),ee=V)}h(St,"activeTexture");function F(V,oe,me){me===void 0&&(ee===null?me=33984+te-1:me=ee);let Pe=q[me];Pe===void 0&&(Pe={type:void 0,texture:void 0},q[me]=Pe),(Pe.type!==V||Pe.texture!==oe)&&(ee!==me&&(l.activeTexture(me),ee=me),l.bindTexture(V,oe||ie[V]),Pe.type=V,Pe.texture=oe)}h(F,"bindTexture");function R(){const V=q[ee];V!==void 0&&V.type!==void 0&&(l.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}h(R,"unbindTexture");function $(){try{l.compressedTexImage2D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h($,"compressedTexImage2D");function ge(){try{l.compressedTexImage3D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(ge,"compressedTexImage3D");function _e(){try{l.texSubImage2D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(_e,"texSubImage2D");function Ee(){try{l.texSubImage3D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(Ee,"texSubImage3D");function je(){try{l.compressedTexSubImage2D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(je,"compressedTexSubImage2D");function Ce(){try{l.compressedTexSubImage3D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(Ce,"compressedTexSubImage3D");function ue(){try{l.texStorage2D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(ue,"texStorage2D");function Ue(){try{l.texStorage3D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(Ue,"texStorage3D");function Je(){try{l.texImage2D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(Je,"texImage2D");function ze(){try{l.texImage3D.apply(l,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}h(ze,"texImage3D");function qe(V){xe.equals(V)===!1&&(l.scissor(V.x,V.y,V.z,V.w),xe.copy(V))}h(qe,"scissor");function Be(V){pe.equals(V)===!1&&(l.viewport(V.x,V.y,V.z,V.w),pe.copy(V))}h(Be,"viewport");function dt(V,oe){let me=m.get(oe);me===void 0&&(me=new WeakMap,m.set(oe,me));let Pe=me.get(V);Pe===void 0&&(Pe=l.getUniformBlockIndex(oe,V.name),me.set(V,Pe))}h(dt,"updateUBOMapping");function Et(V,oe){const Pe=m.get(oe).get(V);p.get(V)!==Pe&&(l.uniformBlockBinding(oe,Pe,V.__bindingPointIndex),p.set(V,Pe))}h(Et,"uniformBlockBinding");function qt(){l.disable(3042),l.disable(2884),l.disable(2929),l.disable(32823),l.disable(3089),l.disable(2960),l.disable(32926),l.blendEquation(32774),l.blendFunc(1,0),l.blendFuncSeparate(1,0,1,0),l.colorMask(!0,!0,!0,!0),l.clearColor(0,0,0,0),l.depthMask(!0),l.depthFunc(513),l.clearDepth(1),l.stencilMask(4294967295),l.stencilFunc(519,0,4294967295),l.stencilOp(7680,7680,7680),l.clearStencil(0),l.cullFace(1029),l.frontFace(2305),l.polygonOffset(0,0),l.activeTexture(33984),l.bindFramebuffer(36160,null),n===!0&&(l.bindFramebuffer(36009,null),l.bindFramebuffer(36008,null)),l.useProgram(null),l.lineWidth(1),l.scissor(0,0,l.canvas.width,l.canvas.height),l.viewport(0,0,l.canvas.width,l.canvas.height),g={},ee=null,q={},x={},M=new WeakMap,y=[],_=null,w=!1,E=null,b=null,A=null,P=null,L=null,O=null,C=null,I=!1,k=null,G=null,ce=null,Q=null,W=null,xe.set(0,0,l.canvas.width,l.canvas.height),pe.set(0,0,l.canvas.width,l.canvas.height),c.reset(),u.reset(),f.reset()}return h(qt,"reset"),{buffers:{color:c,depth:u,stencil:f},enable:Ge,disable:Ie,bindFramebuffer:Ye,drawBuffers:we,useProgram:Ze,setBlending:ye,setMaterial:De,setFlipSided:be,setCullFace:Qe,setLineWidth:Xe,setPolygonOffset:He,setScissorTest:Mt,activeTexture:St,bindTexture:F,unbindTexture:R,compressedTexImage2D:$,compressedTexImage3D:ge,texImage2D:Je,texImage3D:ze,updateUBOMapping:dt,uniformBlockBinding:Et,texStorage2D:ue,texStorage3D:Ue,texSubImage2D:_e,texSubImage3D:Ee,compressedTexSubImage2D:je,compressedTexSubImage3D:Ce,scissor:qe,viewport:Be,reset:qt}}h(Nb,"WebGLState");function zb(l,e,t,n,i,r,a){const c=i.isWebGL2,u=i.maxTextures,f=i.maxCubemapSize,p=i.maxTextureSize,m=i.maxSamples,g=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,x=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),M=new WeakMap;let y;const _=new WeakMap;let w=!1;try{w=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(F,R){return w?new OffscreenCanvas(F,R):La("canvas")}h(E,"createCanvas");function b(F,R,$,ge){let _e=1;if((F.width>ge||F.height>ge)&&(_e=ge/Math.max(F.width,F.height)),_e<1||R===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const Ee=R?Wc:Math.floor,je=Ee(_e*F.width),Ce=Ee(_e*F.height);y===void 0&&(y=E(je,Ce));const ue=$?E(je,Ce):y;return ue.width=je,ue.height=Ce,ue.getContext("2d").drawImage(F,0,0,je,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+je+"x"+Ce+")."),ue}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}h(b,"resizeImage");function A(F){return Wf(F.width)&&Wf(F.height)}h(A,"isPowerOfTwo$1");function P(F){return c?!1:F.wrapS!==_n||F.wrapT!==_n||F.minFilter!==Qt&&F.minFilter!==Gt}h(P,"textureNeedsPowerOfTwo");function L(F,R){return F.generateMipmaps&&R&&F.minFilter!==Qt&&F.minFilter!==Gt}h(L,"textureNeedsGenerateMipmaps");function O(F){l.generateMipmap(F)}h(O,"generateMipmap");function C(F,R,$,ge,_e=!1){if(c===!1)return R;if(F!==null){if(l[F]!==void 0)return l[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Ee=R;return R===6403&&($===5126&&(Ee=33326),$===5131&&(Ee=33325),$===5121&&(Ee=33321)),R===33319&&($===5126&&(Ee=33328),$===5131&&(Ee=33327),$===5121&&(Ee=33323)),R===6408&&($===5126&&(Ee=34836),$===5131&&(Ee=34842),$===5121&&(Ee=ge===Lt&&_e===!1?35907:32856),$===32819&&(Ee=32854),$===32820&&(Ee=32855)),(Ee===33325||Ee===33326||Ee===33327||Ee===33328||Ee===34842||Ee===34836)&&e.get("EXT_color_buffer_float"),Ee}h(C,"getInternalFormat");function I(F,R,$){return L(F,$)===!0||F.isFramebufferTexture&&F.minFilter!==Qt&&F.minFilter!==Gt?Math.log2(Math.max(R.width,R.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?R.mipmaps.length:1}h(I,"getMipLevels");function k(F){return F===Qt||F===Bc||F===Vc?9728:9729}h(k,"filterFallback");function G(F){const R=F.target;R.removeEventListener("dispose",G),Q(R),R.isVideoTexture&&M.delete(R)}h(G,"onTextureDispose");function ce(F){const R=F.target;R.removeEventListener("dispose",ce),te(R)}h(ce,"onRenderTargetDispose");function Q(F){const R=n.get(F);if(R.__webglInit===void 0)return;const $=F.source,ge=_.get($);if(ge){const _e=ge[R.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&W(F),Object.keys(ge).length===0&&_.delete($)}n.remove(F)}h(Q,"deallocateTexture");function W(F){const R=n.get(F);l.deleteTexture(R.__webglTexture);const $=F.source,ge=_.get($);delete ge[R.__cacheKey],a.memory.textures--}h(W,"deleteTexture");function te(F){const R=F.texture,$=n.get(F),ge=n.get(R);if(ge.__webglTexture!==void 0&&(l.deleteTexture(ge.__webglTexture),a.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++)l.deleteFramebuffer($.__webglFramebuffer[_e]),$.__webglDepthbuffer&&l.deleteRenderbuffer($.__webglDepthbuffer[_e]);else{if(l.deleteFramebuffer($.__webglFramebuffer),$.__webglDepthbuffer&&l.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&l.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer)for(let _e=0;_e<$.__webglColorRenderbuffer.length;_e++)$.__webglColorRenderbuffer[_e]&&l.deleteRenderbuffer($.__webglColorRenderbuffer[_e]);$.__webglDepthRenderbuffer&&l.deleteRenderbuffer($.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let _e=0,Ee=R.length;_e<Ee;_e++){const je=n.get(R[_e]);je.__webglTexture&&(l.deleteTexture(je.__webglTexture),a.memory.textures--),n.remove(R[_e])}n.remove(R),n.remove(F)}h(te,"deallocateRenderTarget");let ae=0;function de(){ae=0}h(de,"resetTextureUnits");function U(){const F=ae;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),ae+=1,F}h(U,"allocateTextureUnit");function ee(F){const R=[];return R.push(F.wrapS),R.push(F.wrapT),R.push(F.wrapR||0),R.push(F.magFilter),R.push(F.minFilter),R.push(F.anisotropy),R.push(F.internalFormat),R.push(F.format),R.push(F.type),R.push(F.generateMipmaps),R.push(F.premultiplyAlpha),R.push(F.flipY),R.push(F.unpackAlignment),R.push(F.encoding),R.join()}h(ee,"getTextureCacheKey");function q(F,R){const $=n.get(F);if(F.isVideoTexture&&Mt(F),F.isRenderTargetTexture===!1&&F.version>0&&$.__version!==F.version){const ge=F.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ie($,F,R);return}}t.bindTexture(3553,$.__webglTexture,33984+R)}h(q,"setTexture2D");function j(F,R){const $=n.get(F);if(F.version>0&&$.__version!==F.version){Ie($,F,R);return}t.bindTexture(35866,$.__webglTexture,33984+R)}h(j,"setTexture2DArray");function Z(F,R){const $=n.get(F);if(F.version>0&&$.__version!==F.version){Ie($,F,R);return}t.bindTexture(32879,$.__webglTexture,33984+R)}h(Z,"setTexture3D");function xe(F,R){const $=n.get(F);if(F.version>0&&$.__version!==F.version){Ye($,F,R);return}t.bindTexture(34067,$.__webglTexture,33984+R)}h(xe,"setTextureCube");const pe={[wa]:10497,[_n]:33071,[ba]:33648},Me={[Qt]:9728,[Bc]:9984,[Vc]:9986,[Gt]:9729,[sd]:9985,[vs]:9987};function ie(F,R,$){if($?(l.texParameteri(F,10242,pe[R.wrapS]),l.texParameteri(F,10243,pe[R.wrapT]),(F===32879||F===35866)&&l.texParameteri(F,32882,pe[R.wrapR]),l.texParameteri(F,10240,Me[R.magFilter]),l.texParameteri(F,10241,Me[R.minFilter])):(l.texParameteri(F,10242,33071),l.texParameteri(F,10243,33071),(F===32879||F===35866)&&l.texParameteri(F,32882,33071),(R.wrapS!==_n||R.wrapT!==_n)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),l.texParameteri(F,10240,k(R.magFilter)),l.texParameteri(F,10241,k(R.minFilter)),R.minFilter!==Qt&&R.minFilter!==Gt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(R.type===ji&&e.has("OES_texture_float_linear")===!1||c===!1&&R.type===co&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(l.texParameterf(F,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}h(ie,"setTextureParameters");function Ge(F,R){let $=!1;F.__webglInit===void 0&&(F.__webglInit=!0,R.addEventListener("dispose",G));const ge=R.source;let _e=_.get(ge);_e===void 0&&(_e={},_.set(ge,_e));const Ee=ee(R);if(Ee!==F.__cacheKey){_e[Ee]===void 0&&(_e[Ee]={texture:l.createTexture(),usedTimes:0},a.memory.textures++,$=!0),_e[Ee].usedTimes++;const je=_e[F.__cacheKey];je!==void 0&&(_e[F.__cacheKey].usedTimes--,je.usedTimes===0&&W(R)),F.__cacheKey=Ee,F.__webglTexture=_e[Ee].texture}return $}h(Ge,"initTexture");function Ie(F,R,$){let ge=3553;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ge=35866),R.isData3DTexture&&(ge=32879);const _e=Ge(F,R),Ee=R.source;t.bindTexture(ge,F.__webglTexture,33984+$);const je=n.get(Ee);if(Ee.version!==je.__version||_e===!0){t.activeTexture(33984+$),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const Ce=P(R)&&A(R.image)===!1;let ue=b(R.image,Ce,!1,p);ue=St(R,ue);const Ue=A(ue)||c,Je=r.convert(R.format,R.encoding);let ze=r.convert(R.type),qe=C(R.internalFormat,Je,ze,R.encoding,R.isVideoTexture);ie(ge,R,Ue);let Be;const dt=R.mipmaps,Et=c&&R.isVideoTexture!==!0,qt=je.__version===void 0||_e===!0,V=I(R,ue,Ue);if(R.isDepthTexture)qe=6402,c?R.type===ji?qe=36012:R.type===yr?qe=33190:R.type===ls?qe=35056:qe=33189:R.type===ji&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===Sr&&qe===6402&&R.type!==od&&R.type!==yr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=yr,ze=r.convert(R.type)),R.format===ds&&qe===6402&&(qe=34041,R.type!==ls&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=ls,ze=r.convert(R.type))),qt&&(Et?t.texStorage2D(3553,1,qe,ue.width,ue.height):t.texImage2D(3553,0,qe,ue.width,ue.height,0,Je,ze,null));else if(R.isDataTexture)if(dt.length>0&&Ue){Et&&qt&&t.texStorage2D(3553,V,qe,dt[0].width,dt[0].height);for(let oe=0,me=dt.length;oe<me;oe++)Be=dt[oe],Et?t.texSubImage2D(3553,oe,0,0,Be.width,Be.height,Je,ze,Be.data):t.texImage2D(3553,oe,qe,Be.width,Be.height,0,Je,ze,Be.data);R.generateMipmaps=!1}else Et?(qt&&t.texStorage2D(3553,V,qe,ue.width,ue.height),t.texSubImage2D(3553,0,0,0,ue.width,ue.height,Je,ze,ue.data)):t.texImage2D(3553,0,qe,ue.width,ue.height,0,Je,ze,ue.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){Et&&qt&&t.texStorage3D(35866,V,qe,dt[0].width,dt[0].height,ue.depth);for(let oe=0,me=dt.length;oe<me;oe++)Be=dt[oe],R.format!==Bn?Je!==null?Et?t.compressedTexSubImage3D(35866,oe,0,0,0,Be.width,Be.height,ue.depth,Je,Be.data,0,0):t.compressedTexImage3D(35866,oe,qe,Be.width,Be.height,ue.depth,0,Be.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?t.texSubImage3D(35866,oe,0,0,0,Be.width,Be.height,ue.depth,Je,ze,Be.data):t.texImage3D(35866,oe,qe,Be.width,Be.height,ue.depth,0,Je,ze,Be.data)}else{Et&&qt&&t.texStorage2D(3553,V,qe,dt[0].width,dt[0].height);for(let oe=0,me=dt.length;oe<me;oe++)Be=dt[oe],R.format!==Bn?Je!==null?Et?t.compressedTexSubImage2D(3553,oe,0,0,Be.width,Be.height,Je,Be.data):t.compressedTexImage2D(3553,oe,qe,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?t.texSubImage2D(3553,oe,0,0,Be.width,Be.height,Je,ze,Be.data):t.texImage2D(3553,oe,qe,Be.width,Be.height,0,Je,ze,Be.data)}else if(R.isDataArrayTexture)Et?(qt&&t.texStorage3D(35866,V,qe,ue.width,ue.height,ue.depth),t.texSubImage3D(35866,0,0,0,0,ue.width,ue.height,ue.depth,Je,ze,ue.data)):t.texImage3D(35866,0,qe,ue.width,ue.height,ue.depth,0,Je,ze,ue.data);else if(R.isData3DTexture)Et?(qt&&t.texStorage3D(32879,V,qe,ue.width,ue.height,ue.depth),t.texSubImage3D(32879,0,0,0,0,ue.width,ue.height,ue.depth,Je,ze,ue.data)):t.texImage3D(32879,0,qe,ue.width,ue.height,ue.depth,0,Je,ze,ue.data);else if(R.isFramebufferTexture){if(qt)if(Et)t.texStorage2D(3553,V,qe,ue.width,ue.height);else{let oe=ue.width,me=ue.height;for(let Pe=0;Pe<V;Pe++)t.texImage2D(3553,Pe,qe,oe,me,0,Je,ze,null),oe>>=1,me>>=1}}else if(dt.length>0&&Ue){Et&&qt&&t.texStorage2D(3553,V,qe,dt[0].width,dt[0].height);for(let oe=0,me=dt.length;oe<me;oe++)Be=dt[oe],Et?t.texSubImage2D(3553,oe,0,0,Je,ze,Be):t.texImage2D(3553,oe,qe,Je,ze,Be);R.generateMipmaps=!1}else Et?(qt&&t.texStorage2D(3553,V,qe,ue.width,ue.height),t.texSubImage2D(3553,0,0,0,Je,ze,ue)):t.texImage2D(3553,0,qe,Je,ze,ue);L(R,Ue)&&O(ge),je.__version=Ee.version,R.onUpdate&&R.onUpdate(R)}F.__version=R.version}h(Ie,"uploadTexture");function Ye(F,R,$){if(R.image.length!==6)return;const ge=Ge(F,R),_e=R.source;t.bindTexture(34067,F.__webglTexture,33984+$);const Ee=n.get(_e);if(_e.version!==Ee.__version||ge===!0){t.activeTexture(33984+$),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const je=R.isCompressedTexture||R.image[0].isCompressedTexture,Ce=R.image[0]&&R.image[0].isDataTexture,ue=[];for(let oe=0;oe<6;oe++)!je&&!Ce?ue[oe]=b(R.image[oe],!1,!0,f):ue[oe]=Ce?R.image[oe].image:R.image[oe],ue[oe]=St(R,ue[oe]);const Ue=ue[0],Je=A(Ue)||c,ze=r.convert(R.format,R.encoding),qe=r.convert(R.type),Be=C(R.internalFormat,ze,qe,R.encoding),dt=c&&R.isVideoTexture!==!0,Et=Ee.__version===void 0||ge===!0;let qt=I(R,Ue,Je);ie(34067,R,Je);let V;if(je){dt&&Et&&t.texStorage2D(34067,qt,Be,Ue.width,Ue.height);for(let oe=0;oe<6;oe++){V=ue[oe].mipmaps;for(let me=0;me<V.length;me++){const Pe=V[me];R.format!==Bn?ze!==null?dt?t.compressedTexSubImage2D(34069+oe,me,0,0,Pe.width,Pe.height,ze,Pe.data):t.compressedTexImage2D(34069+oe,me,Be,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):dt?t.texSubImage2D(34069+oe,me,0,0,Pe.width,Pe.height,ze,qe,Pe.data):t.texImage2D(34069+oe,me,Be,Pe.width,Pe.height,0,ze,qe,Pe.data)}}}else{V=R.mipmaps,dt&&Et&&(V.length>0&&qt++,t.texStorage2D(34067,qt,Be,ue[0].width,ue[0].height));for(let oe=0;oe<6;oe++)if(Ce){dt?t.texSubImage2D(34069+oe,0,0,0,ue[oe].width,ue[oe].height,ze,qe,ue[oe].data):t.texImage2D(34069+oe,0,Be,ue[oe].width,ue[oe].height,0,ze,qe,ue[oe].data);for(let me=0;me<V.length;me++){const Oe=V[me].image[oe].image;dt?t.texSubImage2D(34069+oe,me+1,0,0,Oe.width,Oe.height,ze,qe,Oe.data):t.texImage2D(34069+oe,me+1,Be,Oe.width,Oe.height,0,ze,qe,Oe.data)}}else{dt?t.texSubImage2D(34069+oe,0,0,0,ze,qe,ue[oe]):t.texImage2D(34069+oe,0,Be,ze,qe,ue[oe]);for(let me=0;me<V.length;me++){const Pe=V[me];dt?t.texSubImage2D(34069+oe,me+1,0,0,ze,qe,Pe.image[oe]):t.texImage2D(34069+oe,me+1,Be,ze,qe,Pe.image[oe])}}}L(R,Je)&&O(34067),Ee.__version=_e.version,R.onUpdate&&R.onUpdate(R)}F.__version=R.version}h(Ye,"uploadCubeTexture");function we(F,R,$,ge,_e){const Ee=r.convert($.format,$.encoding),je=r.convert($.type),Ce=C($.internalFormat,Ee,je,$.encoding);n.get(R).__hasExternalTextures||(_e===32879||_e===35866?t.texImage3D(_e,0,Ce,R.width,R.height,R.depth,0,Ee,je,null):t.texImage2D(_e,0,Ce,R.width,R.height,0,Ee,je,null)),t.bindFramebuffer(36160,F),He(R)?g.framebufferTexture2DMultisampleEXT(36160,ge,_e,n.get($).__webglTexture,0,Xe(R)):(_e===3553||_e>=34069&&_e<=34074)&&l.framebufferTexture2D(36160,ge,_e,n.get($).__webglTexture,0),t.bindFramebuffer(36160,null)}h(we,"setupFrameBufferTexture");function Ze(F,R,$){if(l.bindRenderbuffer(36161,F),R.depthBuffer&&!R.stencilBuffer){let ge=33189;if($||He(R)){const _e=R.depthTexture;_e&&_e.isDepthTexture&&(_e.type===ji?ge=36012:_e.type===yr&&(ge=33190));const Ee=Xe(R);He(R)?g.renderbufferStorageMultisampleEXT(36161,Ee,ge,R.width,R.height):l.renderbufferStorageMultisample(36161,Ee,ge,R.width,R.height)}else l.renderbufferStorage(36161,ge,R.width,R.height);l.framebufferRenderbuffer(36160,36096,36161,F)}else if(R.depthBuffer&&R.stencilBuffer){const ge=Xe(R);$&&He(R)===!1?l.renderbufferStorageMultisample(36161,ge,35056,R.width,R.height):He(R)?g.renderbufferStorageMultisampleEXT(36161,ge,35056,R.width,R.height):l.renderbufferStorage(36161,34041,R.width,R.height),l.framebufferRenderbuffer(36160,33306,36161,F)}else{const ge=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let _e=0;_e<ge.length;_e++){const Ee=ge[_e],je=r.convert(Ee.format,Ee.encoding),Ce=r.convert(Ee.type),ue=C(Ee.internalFormat,je,Ce,Ee.encoding),Ue=Xe(R);$&&He(R)===!1?l.renderbufferStorageMultisample(36161,Ue,ue,R.width,R.height):He(R)?g.renderbufferStorageMultisampleEXT(36161,Ue,ue,R.width,R.height):l.renderbufferStorage(36161,ue,R.width,R.height)}}l.bindRenderbuffer(36161,null)}h(Ze,"setupRenderBufferStorage");function he(F,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,F),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),q(R.depthTexture,0);const ge=n.get(R.depthTexture).__webglTexture,_e=Xe(R);if(R.depthTexture.format===Sr)He(R)?g.framebufferTexture2DMultisampleEXT(36160,36096,3553,ge,0,_e):l.framebufferTexture2D(36160,36096,3553,ge,0);else if(R.depthTexture.format===ds)He(R)?g.framebufferTexture2DMultisampleEXT(36160,33306,3553,ge,0,_e):l.framebufferTexture2D(36160,33306,3553,ge,0);else throw new Error("Unknown depthTexture format")}h(he,"setupDepthTexture");function re(F){const R=n.get(F),$=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!R.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");he(R.__webglFramebuffer,F)}else if($){R.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(36160,R.__webglFramebuffer[ge]),R.__webglDepthbuffer[ge]=l.createRenderbuffer(),Ze(R.__webglDepthbuffer[ge],F,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=l.createRenderbuffer(),Ze(R.__webglDepthbuffer,F,!1);t.bindFramebuffer(36160,null)}h(re,"setupDepthRenderbuffer");function ye(F,R,$){const ge=n.get(F);R!==void 0&&we(ge.__webglFramebuffer,F,F.texture,36064,3553),$!==void 0&&re(F)}h(ye,"rebindTextures");function De(F){const R=F.texture,$=n.get(F),ge=n.get(R);F.addEventListener("dispose",ce),F.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=l.createTexture()),ge.__version=R.version,a.memory.textures++);const _e=F.isWebGLCubeRenderTarget===!0,Ee=F.isWebGLMultipleRenderTargets===!0,je=A(F)||c;if(_e){$.__webglFramebuffer=[];for(let Ce=0;Ce<6;Ce++)$.__webglFramebuffer[Ce]=l.createFramebuffer()}else{if($.__webglFramebuffer=l.createFramebuffer(),Ee)if(i.drawBuffers){const Ce=F.texture;for(let ue=0,Ue=Ce.length;ue<Ue;ue++){const Je=n.get(Ce[ue]);Je.__webglTexture===void 0&&(Je.__webglTexture=l.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&F.samples>0&&He(F)===!1){const Ce=Ee?R:[R];$.__webglMultisampledFramebuffer=l.createFramebuffer(),$.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,$.__webglMultisampledFramebuffer);for(let ue=0;ue<Ce.length;ue++){const Ue=Ce[ue];$.__webglColorRenderbuffer[ue]=l.createRenderbuffer(),l.bindRenderbuffer(36161,$.__webglColorRenderbuffer[ue]);const Je=r.convert(Ue.format,Ue.encoding),ze=r.convert(Ue.type),qe=C(Ue.internalFormat,Je,ze,Ue.encoding,F.isXRRenderTarget===!0),Be=Xe(F);l.renderbufferStorageMultisample(36161,Be,qe,F.width,F.height),l.framebufferRenderbuffer(36160,36064+ue,36161,$.__webglColorRenderbuffer[ue])}l.bindRenderbuffer(36161,null),F.depthBuffer&&($.__webglDepthRenderbuffer=l.createRenderbuffer(),Ze($.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(36160,null)}}if(_e){t.bindTexture(34067,ge.__webglTexture),ie(34067,R,je);for(let Ce=0;Ce<6;Ce++)we($.__webglFramebuffer[Ce],F,R,36064,34069+Ce);L(R,je)&&O(34067),t.unbindTexture()}else if(Ee){const Ce=F.texture;for(let ue=0,Ue=Ce.length;ue<Ue;ue++){const Je=Ce[ue],ze=n.get(Je);t.bindTexture(3553,ze.__webglTexture),ie(3553,Je,je),we($.__webglFramebuffer,F,Je,36064+ue,3553),L(Je,je)&&O(3553)}t.unbindTexture()}else{let Ce=3553;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(c?Ce=F.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ce,ge.__webglTexture),ie(Ce,R,je),we($.__webglFramebuffer,F,R,36064,Ce),L(R,je)&&O(Ce),t.unbindTexture()}F.depthBuffer&&re(F)}h(De,"setupRenderTarget");function be(F){const R=A(F)||c,$=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let ge=0,_e=$.length;ge<_e;ge++){const Ee=$[ge];if(L(Ee,R)){const je=F.isWebGLCubeRenderTarget?34067:3553,Ce=n.get(Ee).__webglTexture;t.bindTexture(je,Ce),O(je),t.unbindTexture()}}}h(be,"updateRenderTargetMipmap");function Qe(F){if(c&&F.samples>0&&He(F)===!1){const R=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],$=F.width,ge=F.height;let _e=16384;const Ee=[],je=F.stencilBuffer?33306:36096,Ce=n.get(F),ue=F.isWebGLMultipleRenderTargets===!0;if(ue)for(let Ue=0;Ue<R.length;Ue++)t.bindFramebuffer(36160,Ce.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+Ue,36161,null),t.bindFramebuffer(36160,Ce.__webglFramebuffer),l.framebufferTexture2D(36009,36064+Ue,3553,null,0);t.bindFramebuffer(36008,Ce.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ce.__webglFramebuffer);for(let Ue=0;Ue<R.length;Ue++){Ee.push(36064+Ue),F.depthBuffer&&Ee.push(je);const Je=Ce.__ignoreDepthValues!==void 0?Ce.__ignoreDepthValues:!1;if(Je===!1&&(F.depthBuffer&&(_e|=256),F.stencilBuffer&&(_e|=1024)),ue&&l.framebufferRenderbuffer(36008,36064,36161,Ce.__webglColorRenderbuffer[Ue]),Je===!0&&(l.invalidateFramebuffer(36008,[je]),l.invalidateFramebuffer(36009,[je])),ue){const ze=n.get(R[Ue]).__webglTexture;l.framebufferTexture2D(36009,36064,3553,ze,0)}l.blitFramebuffer(0,0,$,ge,0,0,$,ge,_e,9728),x&&l.invalidateFramebuffer(36008,Ee)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ue)for(let Ue=0;Ue<R.length;Ue++){t.bindFramebuffer(36160,Ce.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+Ue,36161,Ce.__webglColorRenderbuffer[Ue]);const Je=n.get(R[Ue]).__webglTexture;t.bindFramebuffer(36160,Ce.__webglFramebuffer),l.framebufferTexture2D(36009,36064+Ue,3553,Je,0)}t.bindFramebuffer(36009,Ce.__webglMultisampledFramebuffer)}}h(Qe,"updateMultisampleRenderTarget");function Xe(F){return Math.min(m,F.samples)}h(Xe,"getRenderTargetSamples");function He(F){const R=n.get(F);return c&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}h(He,"useMultisampledRTT");function Mt(F){const R=a.render.frame;M.get(F)!==R&&(M.set(F,R),F.update())}h(Mt,"updateVideoTexture");function St(F,R){const $=F.encoding,ge=F.format,_e=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===Hc||$!==$i&&($===Lt?c===!1?e.has("EXT_sRGB")===!0&&ge===Bn?(F.format=Hc,F.minFilter=Gt,F.generateMipmaps=!1):R=Qc.sRGBToLinear(R):(ge!==Bn||_e!==Ar)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",$)),R}h(St,"verifyColorSpace"),this.allocateTextureUnit=U,this.resetTextureUnits=de,this.setTexture2D=q,this.setTexture2DArray=j,this.setTexture3D=Z,this.setTextureCube=xe,this.rebindTextures=ye,this.setupRenderTarget=De,this.updateRenderTargetMipmap=be,this.updateMultisampleRenderTarget=Qe,this.setupDepthRenderbuffer=re,this.setupFrameBufferTexture=we,this.useMultisampledRTT=He}h(zb,"WebGLTextures");function Iv(l,e,t){const n=t.isWebGL2;function i(r,a=null){let c;if(r===Ar)return 5121;if(r===H0)return 32819;if(r===W0)return 32820;if(r===U0)return 5120;if(r===B0)return 5122;if(r===od)return 5123;if(r===V0)return 5124;if(r===yr)return 5125;if(r===ji)return 5126;if(r===co)return n?5131:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(r===G0)return 6406;if(r===Bn)return 6408;if(r===q0)return 6409;if(r===Y0)return 6410;if(r===Sr)return 6402;if(r===ds)return 34041;if(r===X0)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Hc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(r===Z0)return 6403;if(r===J0)return 36244;if(r===j0)return 33319;if(r===Q0)return 33320;if(r===K0)return 36249;if(r===Rc||r===Ic||r===Dc||r===Nc)if(a===Lt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(r===Rc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Ic)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Dc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Nc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(r===Rc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Ic)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Dc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Nc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Mf||r===Sf||r===wf||r===bf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(r===Mf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Sf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===wf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===bf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===$0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Tf||r===Ef)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(r===Tf)return a===Lt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(r===Ef)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Af||r===Cf||r===Pf||r===Lf||r===Rf||r===If||r===Df||r===Nf||r===zf||r===Ff||r===Of||r===kf||r===Uf||r===Bf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(r===Af)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Cf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Pf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Lf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Rf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===If)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Df)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Nf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===zf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Ff)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Of)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===kf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Uf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Bf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Vf)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(r===Vf)return a===Lt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===ls?n?34042:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):l[r]!==void 0?l[r]:null}return h(i,"convert"),{convert:i}}h(Iv,"WebGLUtils");class fd extends en{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}h(fd,"ArrayCamera");class rs extends vt{constructor(){super(),this.isGroup=!0,this.type="Group"}}h(rs,"Group");const Fb={type:"move"};class kc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new rs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new rs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new rs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const c=this._targetRay,u=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){a=!0;for(const y of e.hand.values()){const _=t.getJointPose(y,n),w=this._getHandJoint(f,y);_!==null&&(w.matrix.fromArray(_.transform.matrix),w.matrix.decompose(w.position,w.rotation,w.scale),w.jointRadius=_.radius),w.visible=_!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),x=.02,M=.005;f.inputState.pinching&&g>x+M?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&g<=x-M&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Fb)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=r!==null),f!==null&&(f.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new rs;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}h(kc,"WebXRController");class dd extends zt{constructor(e,t,n,i,r,a,c,u,f,p){if(p=p!==void 0?p:Sr,p!==Sr&&p!==ds)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===Sr&&(n=yr),n===void 0&&p===ds&&(n=ls),super(null,i,r,a,c,u,p,n,f),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Qt,this.minFilter=u!==void 0?u:Qt,this.flipY=!1,this.generateMipmaps=!1}}h(dd,"DepthTexture");class Dv extends Pi{constructor(e,t){super();const n=this;let i=null,r=1,a=null,c="local-floor",u=null,f=null,p=null,m=null,g=null,x=null;const M=t.getContextAttributes();let y=null,_=null;const w=[],E=[],b=new Set,A=new Map,P=new en;P.layers.enable(1),P.viewport=new bt;const L=new en;L.layers.enable(2),L.viewport=new bt;const O=[P,L],C=new fd;C.layers.enable(1),C.layers.enable(2);let I=null,k=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let Z=w[j];return Z===void 0&&(Z=new kc,w[j]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(j){let Z=w[j];return Z===void 0&&(Z=new kc,w[j]=Z),Z.getGripSpace()},this.getHand=function(j){let Z=w[j];return Z===void 0&&(Z=new kc,w[j]=Z),Z.getHandSpace()};function G(j){const Z=E.indexOf(j.inputSource);if(Z===-1)return;const xe=w[Z];xe!==void 0&&xe.dispatchEvent({type:j.type,data:j.inputSource})}h(G,"onSessionEvent");function ce(){i.removeEventListener("select",G),i.removeEventListener("selectstart",G),i.removeEventListener("selectend",G),i.removeEventListener("squeeze",G),i.removeEventListener("squeezestart",G),i.removeEventListener("squeezeend",G),i.removeEventListener("end",ce),i.removeEventListener("inputsourceschange",Q);for(let j=0;j<w.length;j++){const Z=E[j];Z!==null&&(E[j]=null,w[j].disconnect(Z))}I=null,k=null,e.setRenderTarget(y),g=null,m=null,p=null,i=null,_=null,q.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}h(ce,"onSessionEnd"),this.setFramebufferScaleFactor=function(j){r=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){c=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(j){u=j},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",G),i.addEventListener("selectstart",G),i.addEventListener("selectend",G),i.addEventListener("squeeze",G),i.addEventListener("squeezestart",G),i.addEventListener("squeezeend",G),i.addEventListener("end",ce),i.addEventListener("inputsourceschange",Q),M.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Z={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:M.alpha,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:r};g=new XRWebGLLayer(i,t,Z),i.updateRenderState({baseLayer:g}),_=new Gn(g.framebufferWidth,g.framebufferHeight,{format:Bn,type:Ar,encoding:e.outputEncoding,stencilBuffer:M.stencil})}else{let Z=null,xe=null,pe=null;M.depth&&(pe=M.stencil?35056:33190,Z=M.stencil?ds:Sr,xe=M.stencil?ls:yr);const Me={colorFormat:32856,depthFormat:pe,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Me),i.updateRenderState({layers:[m]}),_=new Gn(m.textureWidth,m.textureHeight,{format:Bn,type:Ar,depthTexture:new dd(m.textureWidth,m.textureHeight,xe,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:M.stencil,encoding:e.outputEncoding,samples:M.antialias?4:0});const ie=e.properties.get(_);ie.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(1),u=null,a=await i.requestReferenceSpace(c),q.setContext(i),q.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function Q(j){for(let Z=0;Z<j.removed.length;Z++){const xe=j.removed[Z],pe=E.indexOf(xe);pe>=0&&(E[pe]=null,w[pe].disconnect(xe))}for(let Z=0;Z<j.added.length;Z++){const xe=j.added[Z];let pe=E.indexOf(xe);if(pe===-1){for(let ie=0;ie<w.length;ie++)if(ie>=E.length){E.push(xe),pe=ie;break}else if(E[ie]===null){E[ie]=xe,pe=ie;break}if(pe===-1)break}const Me=w[pe];Me&&Me.connect(xe)}}h(Q,"onInputSourcesChange");const W=new N,te=new N;function ae(j,Z,xe){W.setFromMatrixPosition(Z.matrixWorld),te.setFromMatrixPosition(xe.matrixWorld);const pe=W.distanceTo(te),Me=Z.projectionMatrix.elements,ie=xe.projectionMatrix.elements,Ge=Me[14]/(Me[10]-1),Ie=Me[14]/(Me[10]+1),Ye=(Me[9]+1)/Me[5],we=(Me[9]-1)/Me[5],Ze=(Me[8]-1)/Me[0],he=(ie[8]+1)/ie[0],re=Ge*Ze,ye=Ge*he,De=pe/(-Ze+he),be=De*-Ze;Z.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(be),j.translateZ(De),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const Qe=Ge+De,Xe=Ie+De,He=re-be,Mt=ye+(pe-be),St=Ye*Ie/Xe*Qe,F=we*Ie/Xe*Qe;j.projectionMatrix.makePerspective(He,Mt,St,F,Qe,Xe)}h(ae,"setProjectionFromUnion");function de(j,Z){Z===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(Z.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}h(de,"updateCamera"),this.updateCamera=function(j){if(i===null)return;C.near=L.near=P.near=j.near,C.far=L.far=P.far=j.far,(I!==C.near||k!==C.far)&&(i.updateRenderState({depthNear:C.near,depthFar:C.far}),I=C.near,k=C.far);const Z=j.parent,xe=C.cameras;de(C,Z);for(let Me=0;Me<xe.length;Me++)de(xe[Me],Z);C.matrixWorld.decompose(C.position,C.quaternion,C.scale),j.matrix.copy(C.matrix),j.matrix.decompose(j.position,j.quaternion,j.scale);const pe=j.children;for(let Me=0,ie=pe.length;Me<ie;Me++)pe[Me].updateMatrixWorld(!0);xe.length===2?ae(C,P,L):C.projectionMatrix.copy(P.projectionMatrix)},this.getCamera=function(){return C},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(g!==null)return g.fixedFoveation},this.setFoveation=function(j){m!==null&&(m.fixedFoveation=j),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=j)},this.getPlanes=function(){return b};let U=null;function ee(j,Z){if(f=Z.getViewerPose(u||a),x=Z,f!==null){const xe=f.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let pe=!1;xe.length!==C.cameras.length&&(C.cameras.length=0,pe=!0);for(let Me=0;Me<xe.length;Me++){const ie=xe[Me];let Ge=null;if(g!==null)Ge=g.getViewport(ie);else{const Ye=p.getViewSubImage(m,ie);Ge=Ye.viewport,Me===0&&(e.setRenderTargetTextures(_,Ye.colorTexture,m.ignoreDepthValues?void 0:Ye.depthStencilTexture),e.setRenderTarget(_))}let Ie=O[Me];Ie===void 0&&(Ie=new en,Ie.layers.enable(Me),Ie.viewport=new bt,O[Me]=Ie),Ie.matrix.fromArray(ie.transform.matrix),Ie.projectionMatrix.fromArray(ie.projectionMatrix),Ie.viewport.set(Ge.x,Ge.y,Ge.width,Ge.height),Me===0&&C.matrix.copy(Ie.matrix),pe===!0&&C.cameras.push(Ie)}}for(let xe=0;xe<w.length;xe++){const pe=E[xe],Me=w[xe];pe!==null&&Me!==void 0&&Me.update(pe,Z,u||a)}if(U&&U(j,Z),Z.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:Z.detectedPlanes});let xe=null;for(const pe of b)Z.detectedPlanes.has(pe)||(xe===null&&(xe=[]),xe.push(pe));if(xe!==null)for(const pe of xe)b.delete(pe),A.delete(pe),n.dispatchEvent({type:"planeremoved",data:pe});for(const pe of Z.detectedPlanes)if(!b.has(pe))b.add(pe),A.set(pe,Z.lastChangedTime),n.dispatchEvent({type:"planeadded",data:pe});else{const Me=A.get(pe);pe.lastChangedTime>Me&&(A.set(pe,pe.lastChangedTime),n.dispatchEvent({type:"planechanged",data:pe}))}}x=null}h(ee,"onAnimationFrame");const q=new Sv;q.setAnimationLoop(ee),this.setAnimationLoop=function(j){U=j},this.dispose=function(){}}}h(Dv,"WebXRManager");function Ob(l,e){function t(y,_){_.color.getRGB(y.fogColor.value,yv(l)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}h(t,"refreshFogUniforms");function n(y,_,w,E,b){_.isMeshBasicMaterial||_.isMeshLambertMaterial?i(y,_):_.isMeshToonMaterial?(i(y,_),p(y,_)):_.isMeshPhongMaterial?(i(y,_),f(y,_)):_.isMeshStandardMaterial?(i(y,_),m(y,_),_.isMeshPhysicalMaterial&&g(y,_,b)):_.isMeshMatcapMaterial?(i(y,_),x(y,_)):_.isMeshDepthMaterial?i(y,_):_.isMeshDistanceMaterial?(i(y,_),M(y,_)):_.isMeshNormalMaterial?i(y,_):_.isLineBasicMaterial?(r(y,_),_.isLineDashedMaterial&&a(y,_)):_.isPointsMaterial?c(y,_,w,E):_.isSpriteMaterial?u(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}h(n,"refreshMaterialUniforms");function i(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap),_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===Hn&&(y.bumpScale.value*=-1)),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===Hn&&y.normalScale.value.negate()),_.specularMap&&(y.specularMap.value=_.specularMap),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const w=e.get(_).envMap;if(w&&(y.envMap.value=w,y.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const A=l.physicallyCorrectLights!==!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*A}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity);let E;_.map?E=_.map:_.specularMap?E=_.specularMap:_.displacementMap?E=_.displacementMap:_.normalMap?E=_.normalMap:_.bumpMap?E=_.bumpMap:_.roughnessMap?E=_.roughnessMap:_.metalnessMap?E=_.metalnessMap:_.alphaMap?E=_.alphaMap:_.emissiveMap?E=_.emissiveMap:_.clearcoatMap?E=_.clearcoatMap:_.clearcoatNormalMap?E=_.clearcoatNormalMap:_.clearcoatRoughnessMap?E=_.clearcoatRoughnessMap:_.iridescenceMap?E=_.iridescenceMap:_.iridescenceThicknessMap?E=_.iridescenceThicknessMap:_.specularIntensityMap?E=_.specularIntensityMap:_.specularColorMap?E=_.specularColorMap:_.transmissionMap?E=_.transmissionMap:_.thicknessMap?E=_.thicknessMap:_.sheenColorMap?E=_.sheenColorMap:_.sheenRoughnessMap&&(E=_.sheenRoughnessMap),E!==void 0&&(E.isWebGLRenderTarget&&(E=E.texture),E.matrixAutoUpdate===!0&&E.updateMatrix(),y.uvTransform.value.copy(E.matrix));let b;_.aoMap?b=_.aoMap:_.lightMap&&(b=_.lightMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),y.uv2Transform.value.copy(b.matrix))}h(i,"refreshUniformsCommon");function r(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity}h(r,"refreshUniformsLine");function a(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}h(a,"refreshUniformsDash");function c(y,_,w,E){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*w,y.scale.value=E*.5,_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);let b;_.map?b=_.map:_.alphaMap&&(b=_.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),y.uvTransform.value.copy(b.matrix))}h(c,"refreshUniformsPoints");function u(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);let w;_.map?w=_.map:_.alphaMap&&(w=_.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),y.uvTransform.value.copy(w.matrix))}h(u,"refreshUniformsSprites");function f(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}h(f,"refreshUniformsPhong");function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}h(p,"refreshUniformsToon");function m(y,_){y.roughness.value=_.roughness,y.metalness.value=_.metalness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap),_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap),e.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}h(m,"refreshUniformsStandard");function g(y,_,w){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap)),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap),_.clearcoatNormalMap&&(y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),y.clearcoatNormalMap.value=_.clearcoatNormalMap,_.side===Hn&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap)),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=w.texture,y.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap)}h(g,"refreshUniformsPhysical");function x(y,_){_.matcap&&(y.matcap.value=_.matcap)}h(x,"refreshUniformsMatcap");function M(y,_){y.referencePosition.value.copy(_.referencePosition),y.nearDistance.value=_.nearDistance,y.farDistance.value=_.farDistance}return h(M,"refreshUniformsDistance"),{refreshFogUniforms:t,refreshMaterialUniforms:n}}h(Ob,"WebGLMaterials");function kb(l,e,t,n){let i={},r={},a=[];const c=t.isWebGL2?l.getParameter(35375):0;function u(E,b){const A=b.program;n.uniformBlockBinding(E,A)}h(u,"bind");function f(E,b){let A=i[E.id];A===void 0&&(M(E),A=p(E),i[E.id]=A,E.addEventListener("dispose",_));const P=b.program;n.updateUBOMapping(E,P);const L=e.render.frame;r[E.id]!==L&&(g(E),r[E.id]=L)}h(f,"update");function p(E){const b=m();E.__bindingPointIndex=b;const A=l.createBuffer(),P=E.__size,L=E.usage;return l.bindBuffer(35345,A),l.bufferData(35345,P,L),l.bindBuffer(35345,null),l.bindBufferBase(35345,b,A),A}h(p,"createBuffer");function m(){for(let E=0;E<c;E++)if(a.indexOf(E)===-1)return a.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}h(m,"allocateBindingPointIndex");function g(E){const b=i[E.id],A=E.uniforms,P=E.__cache;l.bindBuffer(35345,b);for(let L=0,O=A.length;L<O;L++){const C=A[L];if(x(C,L,P)===!0){const I=C.value,k=C.__offset;typeof I=="number"?(C.__data[0]=I,l.bufferSubData(35345,k,C.__data)):(C.value.isMatrix3?(C.__data[0]=C.value.elements[0],C.__data[1]=C.value.elements[1],C.__data[2]=C.value.elements[2],C.__data[3]=C.value.elements[0],C.__data[4]=C.value.elements[3],C.__data[5]=C.value.elements[4],C.__data[6]=C.value.elements[5],C.__data[7]=C.value.elements[0],C.__data[8]=C.value.elements[6],C.__data[9]=C.value.elements[7],C.__data[10]=C.value.elements[8],C.__data[11]=C.value.elements[0]):I.toArray(C.__data),l.bufferSubData(35345,k,C.__data))}}l.bindBuffer(35345,null)}h(g,"updateBufferData");function x(E,b,A){const P=E.value;if(A[b]===void 0)return typeof P=="number"?A[b]=P:A[b]=P.clone(),!0;if(typeof P=="number"){if(A[b]!==P)return A[b]=P,!0}else{const L=A[b];if(L.equals(P)===!1)return L.copy(P),!0}return!1}h(x,"hasUniformChanged");function M(E){const b=E.uniforms;let A=0;const P=16;let L=0;for(let O=0,C=b.length;O<C;O++){const I=b[O],k=y(I);if(I.__data=new Float32Array(k.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=A,O>0){L=A%P;const G=P-L;L!==0&&G-k.boundary<0&&(A+=P-L,I.__offset=A)}A+=k.storage}return L=A%P,L>0&&(A+=P-L),E.__size=A,E.__cache={},this}h(M,"prepareUniformsGroup");function y(E){const b=E.value,A={boundary:0,storage:0};return typeof b=="number"?(A.boundary=4,A.storage=4):b.isVector2?(A.boundary=8,A.storage=8):b.isVector3||b.isColor?(A.boundary=16,A.storage=12):b.isVector4?(A.boundary=16,A.storage=16):b.isMatrix3?(A.boundary=48,A.storage=48):b.isMatrix4?(A.boundary=64,A.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),A}h(y,"getUniformSize");function _(E){const b=E.target;b.removeEventListener("dispose",_);const A=a.indexOf(b.__bindingPointIndex);a.splice(A,1),l.deleteBuffer(i[b.id]),delete i[b.id],delete r[b.id]}h(_,"onUniformsGroupsDispose");function w(){for(const E in i)l.deleteBuffer(i[E]);a=[],i={},r={}}return h(w,"dispose"),{bind:u,update:f,dispose:w}}h(kb,"WebGLUniformsGroups");function Ub(){const l=La("canvas");return l.style.display="block",l}h(Ub,"createCanvasElement");function pd(l={}){this.isWebGLRenderer=!0;const e=l.canvas!==void 0?l.canvas:Ub(),t=l.context!==void 0?l.context:null,n=l.depth!==void 0?l.depth:!0,i=l.stencil!==void 0?l.stencil:!0,r=l.antialias!==void 0?l.antialias:!1,a=l.premultipliedAlpha!==void 0?l.premultipliedAlpha:!0,c=l.preserveDrawingBuffer!==void 0?l.preserveDrawingBuffer:!1,u=l.powerPreference!==void 0?l.powerPreference:"default",f=l.failIfMajorPerformanceCaveat!==void 0?l.failIfMajorPerformanceCaveat:!1;let p;t!==null?p=t.getContextAttributes().alpha:p=l.alpha!==void 0?l.alpha:!1;let m=null,g=null;const x=[],M=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=$i,this.physicallyCorrectLights=!1,this.toneMapping=gi,this.toneMappingExposure=1;const y=this;let _=!1,w=0,E=0,b=null,A=-1,P=null;const L=new bt,O=new bt;let C=null,I=e.width,k=e.height,G=1,ce=null,Q=null;const W=new bt(0,0,I,k),te=new bt(0,0,I,k);let ae=!1;const de=new Fa;let U=!1,ee=!1,q=null;const j=new tt,Z=new fe,xe=new N,pe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Me(){return b===null?G:1}h(Me,"getTargetPixelRatio");let ie=t;function Ge(D,Y){for(let se=0;se<D.length;se++){const X=D[se],le=e.getContext(X,Y);if(le!==null)return le}return null}h(Ge,"getContext");try{const D={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:f};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Zc}`),e.addEventListener("webglcontextlost",qe,!1),e.addEventListener("webglcontextrestored",Be,!1),e.addEventListener("webglcontextcreationerror",dt,!1),ie===null){const Y=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&Y.shift(),ie=Ge(Y,D),ie===null)throw Ge(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ie.getShaderPrecisionFormat===void 0&&(ie.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let Ie,Ye,we,Ze,he,re,ye,De,be,Qe,Xe,He,Mt,St,F,R,$,ge,_e,Ee,je,Ce,ue,Ue;function Je(){Ie=new aw(ie),Ye=new tw(ie,Ie,l),Ie.init(Ye),Ce=new Iv(ie,Ie,Ye),we=new Nb(ie,Ie,Ye),Ze=new uw,he=new Sb,re=new zb(ie,Ie,we,he,Ye,Ce,Ze),ye=new iw(y),De=new ow(y),be=new _1(ie,Ye),ue=new $S(ie,Ie,be,Ye),Qe=new lw(ie,be,Ze,ue),Xe=new pw(ie,Qe,be,Ze),_e=new dw(ie,Ye,re),R=new nw(he),He=new Mb(y,ye,De,Ie,Ye,ue,R),Mt=new Ob(y,he),St=new bb,F=new Lb(Ie,Ye),ge=new KS(y,ye,De,we,Xe,p,a),$=new Db(y,Xe,Ye),Ue=new kb(ie,Ze,Ye,we),Ee=new ew(ie,Ie,Ze,Ye),je=new cw(ie,Ie,Ze,Ye),Ze.programs=He.programs,y.capabilities=Ye,y.extensions=Ie,y.properties=he,y.renderLists=St,y.shadowMap=$,y.state=we,y.info=Ze}h(Je,"initGLContext"),Je();const ze=new Dv(y,ie);this.xr=ze,this.getContext=function(){return ie},this.getContextAttributes=function(){return ie.getContextAttributes()},this.forceContextLoss=function(){const D=Ie.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=Ie.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(D){D!==void 0&&(G=D,this.setSize(I,k,!1))},this.getSize=function(D){return D.set(I,k)},this.setSize=function(D,Y,se){if(ze.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}I=D,k=Y,e.width=Math.floor(D*G),e.height=Math.floor(Y*G),se!==!1&&(e.style.width=D+"px",e.style.height=Y+"px"),this.setViewport(0,0,D,Y)},this.getDrawingBufferSize=function(D){return D.set(I*G,k*G).floor()},this.setDrawingBufferSize=function(D,Y,se){I=D,k=Y,G=se,e.width=Math.floor(D*se),e.height=Math.floor(Y*se),this.setViewport(0,0,D,Y)},this.getCurrentViewport=function(D){return D.copy(L)},this.getViewport=function(D){return D.copy(W)},this.setViewport=function(D,Y,se,X){D.isVector4?W.set(D.x,D.y,D.z,D.w):W.set(D,Y,se,X),we.viewport(L.copy(W).multiplyScalar(G).floor())},this.getScissor=function(D){return D.copy(te)},this.setScissor=function(D,Y,se,X){D.isVector4?te.set(D.x,D.y,D.z,D.w):te.set(D,Y,se,X),we.scissor(O.copy(te).multiplyScalar(G).floor())},this.getScissorTest=function(){return ae},this.setScissorTest=function(D){we.setScissorTest(ae=D)},this.setOpaqueSort=function(D){ce=D},this.setTransparentSort=function(D){Q=D},this.getClearColor=function(D){return D.copy(ge.getClearColor())},this.setClearColor=function(){ge.setClearColor.apply(ge,arguments)},this.getClearAlpha=function(){return ge.getClearAlpha()},this.setClearAlpha=function(){ge.setClearAlpha.apply(ge,arguments)},this.clear=function(D=!0,Y=!0,se=!0){let X=0;D&&(X|=16384),Y&&(X|=256),se&&(X|=1024),ie.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",qe,!1),e.removeEventListener("webglcontextrestored",Be,!1),e.removeEventListener("webglcontextcreationerror",dt,!1),St.dispose(),F.dispose(),he.dispose(),ye.dispose(),De.dispose(),Xe.dispose(),ue.dispose(),Ue.dispose(),He.dispose(),ze.dispose(),ze.removeEventListener("sessionstart",Pe),ze.removeEventListener("sessionend",Oe),q&&(q.dispose(),q=null),gt.stop()};function qe(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}h(qe,"onContextLost");function Be(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const D=Ze.autoReset,Y=$.enabled,se=$.autoUpdate,X=$.needsUpdate,le=$.type;Je(),Ze.autoReset=D,$.enabled=Y,$.autoUpdate=se,$.needsUpdate=X,$.type=le}h(Be,"onContextRestore");function dt(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}h(dt,"onContextCreationError");function Et(D){const Y=D.target;Y.removeEventListener("dispose",Et),qt(Y)}h(Et,"onMaterialDispose");function qt(D){V(D),he.remove(D)}h(qt,"deallocateMaterial");function V(D){const Y=he.get(D).programs;Y!==void 0&&(Y.forEach(function(se){He.releaseProgram(se)}),D.isShaderMaterial&&He.releaseShaderCache(D))}h(V,"releaseMaterialProgramReferences"),this.renderBufferDirect=function(D,Y,se,X,le,Ve){Y===null&&(Y=pe);const Ke=le.isMesh&&le.matrixWorld.determinant()<0,rt=Su(D,Y,se,X,le);we.setMaterial(X,Ke);let lt=se.index,ft=1;X.wireframe===!0&&(lt=Qe.getWireframeAttribute(se),ft=2);const ut=se.drawRange,ht=se.attributes.position;let Ft=ut.start*ft,Sn=(ut.start+ut.count)*ft;Ve!==null&&(Ft=Math.max(Ft,Ve.start*ft),Sn=Math.min(Sn,(Ve.start+Ve.count)*ft)),lt!==null?(Ft=Math.max(Ft,0),Sn=Math.min(Sn,lt.count)):ht!=null&&(Ft=Math.max(Ft,0),Sn=Math.min(Sn,ht.count));const ai=Sn-Ft;if(ai<0||ai===1/0)return;ue.setup(le,X,rt,se,lt);let Ri,Rt=Ee;if(lt!==null&&(Ri=be.get(lt),Rt=je,Rt.setIndex(Ri)),le.isMesh)X.wireframe===!0?(we.setLineWidth(X.wireframeLinewidth*Me()),Rt.setMode(1)):Rt.setMode(4);else if(le.isLine){let st=X.linewidth;st===void 0&&(st=1),we.setLineWidth(st*Me()),le.isLineSegments?Rt.setMode(1):le.isLineLoop?Rt.setMode(2):Rt.setMode(3)}else le.isPoints?Rt.setMode(0):le.isSprite&&Rt.setMode(4);if(le.isInstancedMesh)Rt.renderInstances(Ft,ai,le.count);else if(se.isInstancedBufferGeometry){const st=se._maxInstanceCount!==void 0?se._maxInstanceCount:1/0,zr=Math.min(se.instanceCount,st);Rt.renderInstances(Ft,ai,zr)}else Rt.render(Ft,ai)},this.compile=function(D,Y){function se(X,le,Ve){X.transparent===!0&&X.side===Ji?(X.side=Hn,X.needsUpdate=!0,Cn(X,le,Ve),X.side=fs,X.needsUpdate=!0,Cn(X,le,Ve),X.side=Ji):Cn(X,le,Ve)}h(se,"prepare"),g=F.get(D),g.init(),M.push(g),D.traverseVisible(function(X){X.isLight&&X.layers.test(Y.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),g.setupLights(y.physicallyCorrectLights),D.traverse(function(X){const le=X.material;if(le)if(Array.isArray(le))for(let Ve=0;Ve<le.length;Ve++){const Ke=le[Ve];se(Ke,D,X)}else se(le,D,X)}),M.pop(),g=null};let oe=null;function me(D){oe&&oe(D)}h(me,"onAnimationFrame");function Pe(){gt.stop()}h(Pe,"onXRSessionStart");function Oe(){gt.start()}h(Oe,"onXRSessionEnd");const gt=new Sv;gt.setAnimationLoop(me),typeof self<"u"&&gt.setContext(self),this.setAnimationLoop=function(D){oe=D,ze.setAnimationLoop(D),D===null?gt.stop():gt.start()},ze.addEventListener("sessionstart",Pe),ze.addEventListener("sessionend",Oe),this.render=function(D,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),ze.enabled===!0&&ze.isPresenting===!0&&(ze.cameraAutoUpdate===!0&&ze.updateCamera(Y),Y=ze.getCamera()),D.isScene===!0&&D.onBeforeRender(y,D,Y,b),g=F.get(D,M.length),g.init(),M.push(g),j.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),de.setFromProjectionMatrix(j),ee=this.localClippingEnabled,U=R.init(this.clippingPlanes,ee,Y),m=St.get(D,x.length),m.init(),x.push(m),Bt(D,Y,0,y.sortObjects),m.finish(),y.sortObjects===!0&&m.sort(ce,Q),U===!0&&R.beginShadows();const se=g.state.shadowsArray;if($.render(se,D,Y),U===!0&&R.endShadows(),this.info.autoReset===!0&&this.info.reset(),ge.render(m,D),g.setupLights(y.physicallyCorrectLights),Y.isArrayCamera){const X=Y.cameras;for(let le=0,Ve=X.length;le<Ve;le++){const Ke=X[le];rn(m,D,Ke,Ke.viewport)}}else rn(m,D,Y);b!==null&&(re.updateMultisampleRenderTarget(b),re.updateRenderTargetMipmap(b)),D.isScene===!0&&D.onAfterRender(y,D,Y),ue.resetDefaultState(),A=-1,P=null,M.pop(),M.length>0?g=M[M.length-1]:g=null,x.pop(),x.length>0?m=x[x.length-1]:m=null};function Bt(D,Y,se,X){if(D.visible===!1)return;if(D.layers.test(Y.layers)){if(D.isGroup)se=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(Y);else if(D.isLight)g.pushLight(D),D.castShadow&&g.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||de.intersectsSprite(D)){X&&xe.setFromMatrixPosition(D.matrixWorld).applyMatrix4(j);const Ke=Xe.update(D),rt=D.material;rt.visible&&m.push(D,Ke,rt,se,xe.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(D.isSkinnedMesh&&D.skeleton.frame!==Ze.render.frame&&(D.skeleton.update(),D.skeleton.frame=Ze.render.frame),!D.frustumCulled||de.intersectsObject(D))){X&&xe.setFromMatrixPosition(D.matrixWorld).applyMatrix4(j);const Ke=Xe.update(D),rt=D.material;if(Array.isArray(rt)){const lt=Ke.groups;for(let ft=0,ut=lt.length;ft<ut;ft++){const ht=lt[ft],Ft=rt[ht.materialIndex];Ft&&Ft.visible&&m.push(D,Ke,Ft,se,xe.z,ht)}}else rt.visible&&m.push(D,Ke,rt,se,xe.z,null)}}const Ve=D.children;for(let Ke=0,rt=Ve.length;Ke<rt;Ke++)Bt(Ve[Ke],Y,se,X)}h(Bt,"projectObject");function rn(D,Y,se,X){const le=D.opaque,Ve=D.transmissive,Ke=D.transparent;g.setupLightsView(se),Ve.length>0&&yi(le,Y,se),X&&we.viewport(L.copy(X)),le.length>0&&At(le,Y,se),Ve.length>0&&At(Ve,Y,se),Ke.length>0&&At(Ke,Y,se),we.buffers.depth.setTest(!0),we.buffers.depth.setMask(!0),we.buffers.color.setMask(!0),we.setPolygonOffset(!1)}h(rn,"renderScene");function yi(D,Y,se){const X=Ye.isWebGL2;q===null&&(q=new Gn(1,1,{generateMipmaps:!0,type:Ie.has("EXT_color_buffer_half_float")?co:Ar,minFilter:vs,samples:X&&r===!0?4:0})),y.getDrawingBufferSize(Z),X?q.setSize(Z.x,Z.y):q.setSize(Wc(Z.x),Wc(Z.y));const le=y.getRenderTarget();y.setRenderTarget(q),y.clear();const Ve=y.toneMapping;y.toneMapping=gi,At(D,Y,se),y.toneMapping=Ve,re.updateMultisampleRenderTarget(q),re.updateRenderTargetMipmap(q),y.setRenderTarget(le)}h(yi,"renderTransmissionPass");function At(D,Y,se){const X=Y.isScene===!0?Y.overrideMaterial:null;for(let le=0,Ve=D.length;le<Ve;le++){const Ke=D[le],rt=Ke.object,lt=Ke.geometry,ft=X===null?Ke.material:X,ut=Ke.group;rt.layers.test(se.layers)&&Xn(rt,Y,se,lt,ft,ut)}}h(At,"renderObjects");function Xn(D,Y,se,X,le,Ve){D.onBeforeRender(y,Y,se,X,le,Ve),D.modelViewMatrix.multiplyMatrices(se.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),le.onBeforeRender(y,Y,se,X,D,Ve),le.transparent===!0&&le.side===Ji?(le.side=Hn,le.needsUpdate=!0,y.renderBufferDirect(se,Y,X,le,D,Ve),le.side=fs,le.needsUpdate=!0,y.renderBufferDirect(se,Y,X,le,D,Ve),le.side=Ji):y.renderBufferDirect(se,Y,X,le,D,Ve),D.onAfterRender(y,Y,se,X,le,Ve)}h(Xn,"renderObject");function Cn(D,Y,se){Y.isScene!==!0&&(Y=pe);const X=he.get(D),le=g.state.lights,Ve=g.state.shadowsArray,Ke=le.state.version,rt=He.getParameters(D,le.state,Ve,Y,se),lt=He.getProgramCacheKey(rt);let ft=X.programs;X.environment=D.isMeshStandardMaterial?Y.environment:null,X.fog=Y.fog,X.envMap=(D.isMeshStandardMaterial?De:ye).get(D.envMap||X.environment),ft===void 0&&(D.addEventListener("dispose",Et),ft=new Map,X.programs=ft);let ut=ft.get(lt);if(ut!==void 0){if(X.currentProgram===ut&&X.lightsStateVersion===Ke)return Xa(D,rt),ut}else rt.uniforms=He.getUniforms(D),D.onBuild(se,rt,y),D.onBeforeCompile(rt,y),ut=He.acquireProgram(rt,lt),ft.set(lt,ut),X.uniforms=rt.uniforms;const ht=X.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(ht.clippingPlanes=R.uniform),Xa(D,rt),X.needsLights=Uo(D),X.lightsStateVersion=Ke,X.needsLights&&(ht.ambientLightColor.value=le.state.ambient,ht.lightProbe.value=le.state.probe,ht.directionalLights.value=le.state.directional,ht.directionalLightShadows.value=le.state.directionalShadow,ht.spotLights.value=le.state.spot,ht.spotLightShadows.value=le.state.spotShadow,ht.rectAreaLights.value=le.state.rectArea,ht.ltc_1.value=le.state.rectAreaLTC1,ht.ltc_2.value=le.state.rectAreaLTC2,ht.pointLights.value=le.state.point,ht.pointLightShadows.value=le.state.pointShadow,ht.hemisphereLights.value=le.state.hemi,ht.directionalShadowMap.value=le.state.directionalShadowMap,ht.directionalShadowMatrix.value=le.state.directionalShadowMatrix,ht.spotShadowMap.value=le.state.spotShadowMap,ht.spotLightMatrix.value=le.state.spotLightMatrix,ht.spotLightMap.value=le.state.spotLightMap,ht.pointShadowMap.value=le.state.pointShadowMap,ht.pointShadowMatrix.value=le.state.pointShadowMatrix);const Ft=ut.getUniforms(),Sn=xa.seqWithValue(Ft.seq,ht);return X.currentProgram=ut,X.uniformsList=Sn,ut}h(Cn,"getProgram");function Xa(D,Y){const se=he.get(D);se.outputEncoding=Y.outputEncoding,se.instancing=Y.instancing,se.skinning=Y.skinning,se.morphTargets=Y.morphTargets,se.morphNormals=Y.morphNormals,se.morphColors=Y.morphColors,se.morphTargetsCount=Y.morphTargetsCount,se.numClippingPlanes=Y.numClippingPlanes,se.numIntersection=Y.numClipIntersection,se.vertexAlphas=Y.vertexAlphas,se.vertexTangents=Y.vertexTangents,se.toneMapping=Y.toneMapping}h(Xa,"updateCommonMaterialProperties");function Su(D,Y,se,X,le){Y.isScene!==!0&&(Y=pe),re.resetTextureUnits();const Ve=Y.fog,Ke=X.isMeshStandardMaterial?Y.environment:null,rt=b===null?y.outputEncoding:b.isXRRenderTarget===!0?b.texture.encoding:$i,lt=(X.isMeshStandardMaterial?De:ye).get(X.envMap||Ke),ft=X.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,ut=!!X.normalMap&&!!se.attributes.tangent,ht=!!se.morphAttributes.position,Ft=!!se.morphAttributes.normal,Sn=!!se.morphAttributes.color,ai=X.toneMapped?y.toneMapping:gi,Ri=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,Rt=Ri!==void 0?Ri.length:0,st=he.get(X),zr=g.state.lights;if(U===!0&&(ee===!0||D!==P)){const wt=D===P&&X.id===A;R.setState(X,D,wt)}let Ot=!1;X.version===st.__version?(st.needsLights&&st.lightsStateVersion!==zr.state.version||st.outputEncoding!==rt||le.isInstancedMesh&&st.instancing===!1||!le.isInstancedMesh&&st.instancing===!0||le.isSkinnedMesh&&st.skinning===!1||!le.isSkinnedMesh&&st.skinning===!0||st.envMap!==lt||X.fog===!0&&st.fog!==Ve||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==R.numPlanes||st.numIntersection!==R.numIntersection)||st.vertexAlphas!==ft||st.vertexTangents!==ut||st.morphTargets!==ht||st.morphNormals!==Ft||st.morphColors!==Sn||st.toneMapping!==ai||Ye.isWebGL2===!0&&st.morphTargetsCount!==Rt)&&(Ot=!0):(Ot=!0,st.__version=X.version);let Ii=st.currentProgram;Ot===!0&&(Ii=Cn(X,Y,le));let Ts=!1,qn=!1,Yn=!1;const nt=Ii.getUniforms(),pt=st.uniforms;if(we.useProgram(Ii.program)&&(Ts=!0,qn=!0,Yn=!0),X.id!==A&&(A=X.id,qn=!0),Ts||P!==D){if(nt.setValue(ie,"projectionMatrix",D.projectionMatrix),Ye.logarithmicDepthBuffer&&nt.setValue(ie,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),P!==D&&(P=D,qn=!0,Yn=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const wt=nt.map.cameraPosition;wt!==void 0&&wt.setValue(ie,xe.setFromMatrixPosition(D.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&nt.setValue(ie,"isOrthographic",D.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||le.isSkinnedMesh)&&nt.setValue(ie,"viewMatrix",D.matrixWorldInverse)}if(le.isSkinnedMesh){nt.setOptional(ie,le,"bindMatrix"),nt.setOptional(ie,le,"bindMatrixInverse");const wt=le.skeleton;wt&&(Ye.floatVertexTextures?(wt.boneTexture===null&&wt.computeBoneTexture(),nt.setValue(ie,"boneTexture",wt.boneTexture,re),nt.setValue(ie,"boneTextureSize",wt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Zn=se.morphAttributes;if((Zn.position!==void 0||Zn.normal!==void 0||Zn.color!==void 0&&Ye.isWebGL2===!0)&&_e.update(le,se,X,Ii),(qn||st.receiveShadow!==le.receiveShadow)&&(st.receiveShadow=le.receiveShadow,nt.setValue(ie,"receiveShadow",le.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(pt.envMap.value=lt,pt.flipEnvMap.value=lt.isCubeTexture&&lt.isRenderTargetTexture===!1?-1:1),qn&&(nt.setValue(ie,"toneMappingExposure",y.toneMappingExposure),st.needsLights&&qa(pt,Yn),Ve&&X.fog===!0&&Mt.refreshFogUniforms(pt,Ve),Mt.refreshMaterialUniforms(pt,X,G,k,q),xa.upload(ie,st.uniformsList,pt,re)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(xa.upload(ie,st.uniformsList,pt,re),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&nt.setValue(ie,"center",le.center),nt.setValue(ie,"modelViewMatrix",le.modelViewMatrix),nt.setValue(ie,"normalMatrix",le.normalMatrix),nt.setValue(ie,"modelMatrix",le.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const wt=X.uniformsGroups;for(let sn=0,Di=wt.length;sn<Di;sn++)if(Ye.isWebGL2){const Ni=wt[sn];Ue.update(Ni,Ii),Ue.bind(Ni,Ii)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ii}h(Su,"setProgram");function qa(D,Y){D.ambientLightColor.needsUpdate=Y,D.lightProbe.needsUpdate=Y,D.directionalLights.needsUpdate=Y,D.directionalLightShadows.needsUpdate=Y,D.pointLights.needsUpdate=Y,D.pointLightShadows.needsUpdate=Y,D.spotLights.needsUpdate=Y,D.spotLightShadows.needsUpdate=Y,D.rectAreaLights.needsUpdate=Y,D.hemisphereLights.needsUpdate=Y}h(qa,"markUniformsLightsNeedsUpdate");function Uo(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}h(Uo,"materialNeedsLights"),this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(D,Y,se){he.get(D.texture).__webglTexture=Y,he.get(D.depthTexture).__webglTexture=se;const X=he.get(D);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=se===void 0,X.__autoAllocateDepthBuffer||Ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,Y){const se=he.get(D);se.__webglFramebuffer=Y,se.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(D,Y=0,se=0){b=D,w=Y,E=se;let X=!0,le=null,Ve=!1,Ke=!1;if(D){const lt=he.get(D);lt.__useDefaultFramebuffer!==void 0?(we.bindFramebuffer(36160,null),X=!1):lt.__webglFramebuffer===void 0?re.setupRenderTarget(D):lt.__hasExternalTextures&&re.rebindTextures(D,he.get(D.texture).__webglTexture,he.get(D.depthTexture).__webglTexture);const ft=D.texture;(ft.isData3DTexture||ft.isDataArrayTexture||ft.isCompressedArrayTexture)&&(Ke=!0);const ut=he.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(le=ut[Y],Ve=!0):Ye.isWebGL2&&D.samples>0&&re.useMultisampledRTT(D)===!1?le=he.get(D).__webglMultisampledFramebuffer:le=ut,L.copy(D.viewport),O.copy(D.scissor),C=D.scissorTest}else L.copy(W).multiplyScalar(G).floor(),O.copy(te).multiplyScalar(G).floor(),C=ae;if(we.bindFramebuffer(36160,le)&&Ye.drawBuffers&&X&&we.drawBuffers(D,le),we.viewport(L),we.scissor(O),we.setScissorTest(C),Ve){const lt=he.get(D.texture);ie.framebufferTexture2D(36160,36064,34069+Y,lt.__webglTexture,se)}else if(Ke){const lt=he.get(D.texture),ft=Y||0;ie.framebufferTextureLayer(36160,36064,lt.__webglTexture,se||0,ft)}A=-1},this.readRenderTargetPixels=function(D,Y,se,X,le,Ve,Ke){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let rt=he.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Ke!==void 0&&(rt=rt[Ke]),rt){we.bindFramebuffer(36160,rt);try{const lt=D.texture,ft=lt.format,ut=lt.type;if(ft!==Bn&&Ce.convert(ft)!==ie.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ht=ut===co&&(Ie.has("EXT_color_buffer_half_float")||Ye.isWebGL2&&Ie.has("EXT_color_buffer_float"));if(ut!==Ar&&Ce.convert(ut)!==ie.getParameter(35738)&&!(ut===ji&&(Ye.isWebGL2||Ie.has("OES_texture_float")||Ie.has("WEBGL_color_buffer_float")))&&!ht){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=D.width-X&&se>=0&&se<=D.height-le&&ie.readPixels(Y,se,X,le,Ce.convert(ft),Ce.convert(ut),Ve)}finally{const lt=b!==null?he.get(b).__webglFramebuffer:null;we.bindFramebuffer(36160,lt)}}},this.copyFramebufferToTexture=function(D,Y,se=0){const X=Math.pow(2,-se),le=Math.floor(Y.image.width*X),Ve=Math.floor(Y.image.height*X);re.setTexture2D(Y,0),ie.copyTexSubImage2D(3553,se,0,0,D.x,D.y,le,Ve),we.unbindTexture()},this.copyTextureToTexture=function(D,Y,se,X=0){const le=Y.image.width,Ve=Y.image.height,Ke=Ce.convert(se.format),rt=Ce.convert(se.type);re.setTexture2D(se,0),ie.pixelStorei(37440,se.flipY),ie.pixelStorei(37441,se.premultiplyAlpha),ie.pixelStorei(3317,se.unpackAlignment),Y.isDataTexture?ie.texSubImage2D(3553,X,D.x,D.y,le,Ve,Ke,rt,Y.image.data):Y.isCompressedTexture?ie.compressedTexSubImage2D(3553,X,D.x,D.y,Y.mipmaps[0].width,Y.mipmaps[0].height,Ke,Y.mipmaps[0].data):ie.texSubImage2D(3553,X,D.x,D.y,Ke,rt,Y.image),X===0&&se.generateMipmaps&&ie.generateMipmap(3553),we.unbindTexture()},this.copyTextureToTexture3D=function(D,Y,se,X,le=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ve=D.max.x-D.min.x+1,Ke=D.max.y-D.min.y+1,rt=D.max.z-D.min.z+1,lt=Ce.convert(X.format),ft=Ce.convert(X.type);let ut;if(X.isData3DTexture)re.setTexture3D(X,0),ut=32879;else if(X.isDataArrayTexture)re.setTexture2DArray(X,0),ut=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ie.pixelStorei(37440,X.flipY),ie.pixelStorei(37441,X.premultiplyAlpha),ie.pixelStorei(3317,X.unpackAlignment);const ht=ie.getParameter(3314),Ft=ie.getParameter(32878),Sn=ie.getParameter(3316),ai=ie.getParameter(3315),Ri=ie.getParameter(32877),Rt=se.isCompressedTexture?se.mipmaps[0]:se.image;ie.pixelStorei(3314,Rt.width),ie.pixelStorei(32878,Rt.height),ie.pixelStorei(3316,D.min.x),ie.pixelStorei(3315,D.min.y),ie.pixelStorei(32877,D.min.z),se.isDataTexture||se.isData3DTexture?ie.texSubImage3D(ut,le,Y.x,Y.y,Y.z,Ve,Ke,rt,lt,ft,Rt.data):se.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ie.compressedTexSubImage3D(ut,le,Y.x,Y.y,Y.z,Ve,Ke,rt,lt,Rt.data)):ie.texSubImage3D(ut,le,Y.x,Y.y,Y.z,Ve,Ke,rt,lt,ft,Rt),ie.pixelStorei(3314,ht),ie.pixelStorei(32878,Ft),ie.pixelStorei(3316,Sn),ie.pixelStorei(3315,ai),ie.pixelStorei(32877,Ri),le===0&&X.generateMipmaps&&ie.generateMipmap(ut),we.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?re.setTextureCube(D,0):D.isData3DTexture?re.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?re.setTexture2DArray(D,0):re.setTexture2D(D,0),we.unbindTexture()},this.resetState=function(){w=0,E=0,b=null,we.reset(),ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}h(pd,"WebGLRenderer");class md extends pd{}h(md,"WebGL1Renderer");md.prototype.isWebGL1Renderer=!0;class Oa{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new Oa(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}h(Oa,"FogExp2");class ka{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new ka(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}h(ka,"Fog");class iu extends vt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}h(iu,"Scene");class Ua{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ca,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Wn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Wn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Wn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}h(Ua,"InterleavedBuffer");const Tn=new N;class Cr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyMatrix4(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyNormalMatrix(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.transformDirection(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Qi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Qi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Qi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Qi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Tt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Cr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}h(Cr,"InterleavedBufferAttribute");class ru extends hn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}h(ru,"SpriteMaterial");let Ks;const ca=new N,$s=new N,eo=new N,to=new fe,ua=new fe,Nv=new tt,ac=new N,ha=new N,lc=new N,vg=new fe,Kh=new fe,xg=new fe;class gd extends vt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Ks===void 0){Ks=new it;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ua(t,5);Ks.setIndex([0,1,2,0,2,3]),Ks.setAttribute("position",new Cr(n,3,0,!1)),Ks.setAttribute("uv",new Cr(n,2,3,!1))}this.geometry=Ks,this.material=e!==void 0?e:new ru,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),$s.setFromMatrixScale(this.matrixWorld),Nv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),eo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&$s.multiplyScalar(-eo.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;cc(ac.set(-.5,-.5,0),eo,a,$s,i,r),cc(ha.set(.5,-.5,0),eo,a,$s,i,r),cc(lc.set(.5,.5,0),eo,a,$s,i,r),vg.set(0,0),Kh.set(1,0),xg.set(1,1);let c=e.ray.intersectTriangle(ac,ha,lc,!1,ca);if(c===null&&(cc(ha.set(-.5,.5,0),eo,a,$s,i,r),Kh.set(0,1),c=e.ray.intersectTriangle(ac,lc,ha,!1,ca),c===null))return;const u=e.ray.origin.distanceTo(ca);u<e.near||u>e.far||t.push({distance:u,point:ca.clone(),uv:Vn.getUV(ca,ac,ha,lc,vg,Kh,xg,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}h(gd,"Sprite");function cc(l,e,t,n,i,r){to.subVectors(l,t).addScalar(.5).multiply(n),i!==void 0?(ua.x=r*to.x-i*to.y,ua.y=i*to.x+r*to.y):ua.copy(to),l.copy(e),l.x+=ua.x,l.y+=ua.y,l.applyMatrix4(Nv)}h(cc,"transformVertex");const uc=new N,_g=new N;class vd extends vt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){uc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(uc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){uc.setFromMatrixPosition(e.matrixWorld),_g.setFromMatrixPosition(this.matrixWorld);const n=uc.distanceTo(_g)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}h(vd,"LOD");const yg=new N,Mg=new bt,Sg=new bt,Bb=new N,wg=new tt;class xd extends un{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new tt,this.bindMatrixInverse=new tt}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new bt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Mg.fromBufferAttribute(i.attributes.skinIndex,e),Sg.fromBufferAttribute(i.attributes.skinWeight,e),yg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Sg.getComponent(r);if(a!==0){const c=Mg.getComponent(r);wg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Bb.copy(yg).applyMatrix4(wg),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}h(xd,"SkinnedMesh");class su extends vt{constructor(){super(),this.isBone=!0,this.type="Bone"}}h(su,"Bone");class hs extends zt{constructor(e=null,t=1,n=1,i,r,a,c,u,f=Qt,p=Qt,m,g){super(null,a,c,u,f,p,i,r,m,g),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}h(hs,"DataTexture");const bg=new tt,Vb=new tt;class Ba{constructor(e=[],t=[]){this.uuid=Wn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new tt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new tt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const c=e[r]?e[r].matrixWorld:Vb;bg.multiplyMatrices(c,t[r]),bg.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ba(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=av(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new hs(t,e,e,Bn,ji);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new su),this.bones.push(a),this.boneInverses.push(new tt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}h(Ba,"Skeleton");class ps extends Tt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}h(ps,"InstancedBufferAttribute");const Tg=new tt,Eg=new tt,hc=[],Hb=new tt,fa=new un;class _d extends un{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ps(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,Hb)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(fa.geometry=this.geometry,fa.material=this.material,fa.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Tg),Eg.multiplyMatrices(n,Tg),fa.matrixWorld=Eg,fa.raycast(e,hc);for(let a=0,c=hc.length;a<c;a++){const u=hc[a];u.instanceId=r,u.object=this,t.push(u)}hc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ps(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}h(_d,"InstancedMesh");class Mn extends hn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}h(Mn,"LineBasicMaterial");const Ag=new N,Cg=new N,Pg=new tt,$h=new Mo,fc=new Rr;class er extends vt{constructor(e=new it,t=new Mn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Ag.fromBufferAttribute(t,i-1),Cg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ag.distanceTo(Cg);e.setAttribute("lineDistance",new Ne(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fc.copy(n.boundingSphere),fc.applyMatrix4(i),fc.radius+=r,e.ray.intersectsSphere(fc)===!1)return;Pg.copy(i).invert(),$h.copy(e.ray).applyMatrix4(Pg);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=new N,p=new N,m=new N,g=new N,x=this.isLineSegments?2:1,M=n.index,_=n.attributes.position;if(M!==null){const w=Math.max(0,a.start),E=Math.min(M.count,a.start+a.count);for(let b=w,A=E-1;b<A;b+=x){const P=M.getX(b),L=M.getX(b+1);if(f.fromBufferAttribute(_,P),p.fromBufferAttribute(_,L),$h.distanceSqToSegment(f,p,g,m)>u)continue;g.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(g);C<e.near||C>e.far||t.push({distance:C,point:m.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else{const w=Math.max(0,a.start),E=Math.min(_.count,a.start+a.count);for(let b=w,A=E-1;b<A;b+=x){if(f.fromBufferAttribute(_,b),p.fromBufferAttribute(_,b+1),$h.distanceSqToSegment(f,p,g,m)>u)continue;g.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(g);L<e.near||L>e.far||t.push({distance:L,point:m.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}h(er,"Line");const Lg=new N,Rg=new N;class _i extends er{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Lg.fromBufferAttribute(t,i),Rg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Lg.distanceTo(Rg);e.setAttribute("lineDistance",new Ne(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}h(_i,"LineSegments");class yd extends er{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}h(yd,"LineLoop");class ou extends hn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}h(ou,"PointsMaterial");const Ig=new tt,Xf=new Mo,dc=new Rr,pc=new N;class Md extends vt{constructor(e=new it,t=new ou){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),dc.copy(n.boundingSphere),dc.applyMatrix4(i),dc.radius+=r,e.ray.intersectsSphere(dc)===!1)return;Ig.copy(i).invert(),Xf.copy(e.ray).applyMatrix4(Ig);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,a.start),x=Math.min(f.count,a.start+a.count);for(let M=g,y=x;M<y;M++){const _=f.getX(M);pc.fromBufferAttribute(m,_),Dg(pc,_,u,i,e,t,this)}}else{const g=Math.max(0,a.start),x=Math.min(m.count,a.start+a.count);for(let M=g,y=x;M<y;M++)pc.fromBufferAttribute(m,M),Dg(pc,M,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}h(Md,"Points");function Dg(l,e,t,n,i,r,a){const c=Xf.distanceSqToPoint(l);if(c<t){const u=new N;Xf.closestPointToPoint(l,u),u.applyMatrix4(n);const f=i.ray.origin.distanceTo(u);if(f<i.near||f>i.far)return;r.push({distance:f,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:a})}}h(Dg,"testPoint");class zv extends zt{constructor(e,t,n,i,r,a,c,u,f){super(e,t,n,i,r,a,c,u,f),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Gt,this.magFilter=r!==void 0?r:Gt,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,e.requestVideoFrameCallback(m)}h(m,"updateVideo"),"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}h(zv,"VideoTexture");class Fv extends zt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Qt,this.minFilter=Qt,this.generateMipmaps=!1,this.needsUpdate=!0}}h(Fv,"FramebufferTexture");class au extends zt{constructor(e,t,n,i,r,a,c,u,f,p,m,g){super(null,a,c,u,f,p,i,r,m,g),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}h(au,"CompressedTexture");class Ov extends au{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=_n}}h(Ov,"CompressedArrayTexture");class kv extends zt{constructor(e,t,n,i,r,a,c,u,f){super(e,t,n,i,r,a,c,u,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}h(kv,"CanvasTexture");class si{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let c=0,u=r-1,f;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),f=n[i]-a,f<0)c=i+1;else if(f>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(r-1);const p=n[i],g=n[i+1]-p,x=(a-p)/g;return(i+x)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),c=this.getPoint(r),u=t||(a.isVector2?new fe:new N);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],r=[],a=[],c=new N,u=new tt;for(let x=0;x<=e;x++){const M=x/e;i[x]=this.getTangentAt(M,new N)}r[0]=new N,a[0]=new N;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),a[0].crossVectors(i[0],r[0]);for(let x=1;x<=e;x++){if(r[x]=r[x-1].clone(),a[x]=a[x-1].clone(),c.crossVectors(i[x-1],i[x]),c.length()>Number.EPSILON){c.normalize();const M=Math.acos(Xt(i[x-1].dot(i[x]),-1,1));r[x].applyMatrix4(u.makeRotationAxis(c,M))}a[x].crossVectors(i[x],r[x])}if(t===!0){let x=Math.acos(Xt(r[0].dot(r[e]),-1,1));x/=e,i[0].dot(c.crossVectors(r[0],r[e]))>0&&(x=-x);for(let M=1;M<=e;M++)r[M].applyMatrix4(u.makeRotationAxis(i[M],x*M)),a[M].crossVectors(i[M],r[M])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}h(si,"Curve");class Va extends si{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=u-this.aX,x=f-this.aY;u=g*p-x*m+this.aX,f=g*m+x*p+this.aY}return n.set(u,f)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}h(Va,"EllipseCurve");class Sd extends Va{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}h(Sd,"ArcCurve");function wd(){let l=0,e=0,t=0,n=0;function i(r,a,c,u){l=r,e=c,t=-3*r+3*a-2*c-u,n=2*r-2*a+c+u}return h(i,"init"),{initCatmullRom:function(r,a,c,u,f){i(a,c,f*(c-r),f*(u-a))},initNonuniformCatmullRom:function(r,a,c,u,f,p,m){let g=(a-r)/f-(c-r)/(f+p)+(c-a)/p,x=(c-a)/p-(u-a)/(p+m)+(u-c)/m;g*=p,x*=p,i(a,c,g,x)},calc:function(r){const a=r*r,c=a*r;return l+e*r+t*a+n*c}}}h(wd,"CubicPoly");const mc=new N,ef=new wd,tf=new wd,nf=new wd;class bd extends si{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:u===0&&c===r-1&&(c=r-2,u=1);let f,p;this.closed||c>0?f=i[(c-1)%r]:(mc.subVectors(i[0],i[1]).add(i[0]),f=mc);const m=i[c%r],g=i[(c+1)%r];if(this.closed||c+2<r?p=i[(c+2)%r]:(mc.subVectors(i[r-1],i[r-2]).add(i[r-1]),p=mc),this.curveType==="centripetal"||this.curveType==="chordal"){const x=this.curveType==="chordal"?.5:.25;let M=Math.pow(f.distanceToSquared(m),x),y=Math.pow(m.distanceToSquared(g),x),_=Math.pow(g.distanceToSquared(p),x);y<1e-4&&(y=1),M<1e-4&&(M=y),_<1e-4&&(_=y),ef.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,M,y,_),tf.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,M,y,_),nf.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,M,y,_)}else this.curveType==="catmullrom"&&(ef.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),tf.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),nf.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(ef.calc(u),tf.calc(u),nf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}h(bd,"CatmullRomCurve3");function Ng(l,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,c=l*l,u=l*c;return(2*t-2*n+r+a)*u+(-3*t+3*n-2*r-a)*c+r*l+t}h(Ng,"CatmullRom");function Wb(l,e){const t=1-l;return t*t*e}h(Wb,"QuadraticBezierP0");function Gb(l,e){return 2*(1-l)*l*e}h(Gb,"QuadraticBezierP1");function Xb(l,e){return l*l*e}h(Xb,"QuadraticBezierP2");function _a(l,e,t,n){return Wb(l,e)+Gb(l,t)+Xb(l,n)}h(_a,"QuadraticBezier");function qb(l,e){const t=1-l;return t*t*t*e}h(qb,"CubicBezierP0");function Yb(l,e){const t=1-l;return 3*t*t*l*e}h(Yb,"CubicBezierP1");function Zb(l,e){return 3*(1-l)*l*l*e}h(Zb,"CubicBezierP2");function Jb(l,e){return l*l*l*e}h(Jb,"CubicBezierP3");function ya(l,e,t,n,i){return qb(l,e)+Yb(l,t)+Zb(l,n)+Jb(l,i)}h(ya,"CubicBezier");class lu extends si{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(ya(e,i.x,r.x,a.x,c.x),ya(e,i.y,r.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}h(lu,"CubicBezierCurve");class Td extends si{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(ya(e,i.x,r.x,a.x,c.x),ya(e,i.y,r.y,a.y,c.y),ya(e,i.z,r.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}h(Td,"CubicBezierCurve3");class Ha extends si{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new fe;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}h(Ha,"LineCurve");class Ed extends si{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}h(Ed,"LineCurve3");class cu extends si{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(_a(e,i.x,r.x,a.x),_a(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}h(cu,"QuadraticBezierCurve");class uu extends si{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(_a(e,i.x,r.x,a.x),_a(e,i.y,r.y,a.y),_a(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}h(uu,"QuadraticBezierCurve3");class hu extends si{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),c=r-a,u=i[a===0?a:a-1],f=i[a],p=i[a>i.length-2?i.length-1:a+1],m=i[a>i.length-3?i.length-1:a+2];return n.set(Ng(c,u.x,f.x,p.x,m.x),Ng(c,u.y,f.y,p.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}h(hu,"SplineCurve");var Ad=Object.freeze({__proto__:null,ArcCurve:Sd,CatmullRomCurve3:bd,CubicBezierCurve:lu,CubicBezierCurve3:Td,EllipseCurve:Va,LineCurve:Ha,LineCurve3:Ed,QuadraticBezierCurve:cu,QuadraticBezierCurve3:uu,SplineCurve:hu});class Cd extends si{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ha(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,c=this.curves[r],u=c.getLength(),f=u===0?0:1-a/u;return c.getPointAt(f,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let f=0;f<u.length;f++){const p=u[f];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Ad[i.type]().fromJSON(i))}return this}}h(Cd,"CurvePath");class fo extends Cd{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ha(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new cu(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const c=new lu(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(r,a));return this.curves.push(c),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new hu(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,c,u){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+f,t+p,n,i,r,a,c,u),this}absellipse(e,t,n,i,r,a,c,u){const f=new Va(e,t,n,i,r,a,c,u);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}h(fo,"Path");class ys extends it{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Xt(i,0,Math.PI*2);const r=[],a=[],c=[],u=[],f=[],p=1/t,m=new N,g=new fe,x=new N,M=new N,y=new N;let _=0,w=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:_=e[E+1].x-e[E].x,w=e[E+1].y-e[E].y,x.x=w*1,x.y=-_,x.z=w*0,y.copy(x),x.normalize(),u.push(x.x,x.y,x.z);break;case e.length-1:u.push(y.x,y.y,y.z);break;default:_=e[E+1].x-e[E].x,w=e[E+1].y-e[E].y,x.x=w*1,x.y=-_,x.z=w*0,M.copy(x),x.x+=y.x,x.y+=y.y,x.z+=y.z,x.normalize(),u.push(x.x,x.y,x.z),y.copy(M)}for(let E=0;E<=t;E++){const b=n+E*p*i,A=Math.sin(b),P=Math.cos(b);for(let L=0;L<=e.length-1;L++){m.x=e[L].x*A,m.y=e[L].y,m.z=e[L].x*P,a.push(m.x,m.y,m.z),g.x=E/t,g.y=L/(e.length-1),c.push(g.x,g.y);const O=u[3*L+0]*A,C=u[3*L+1],I=u[3*L+0]*P;f.push(O,C,I)}}for(let E=0;E<t;E++)for(let b=0;b<e.length-1;b++){const A=b+E*e.length,P=A,L=A+e.length,O=A+e.length+1,C=A+1;r.push(P,L,C),r.push(O,C,L)}this.setIndex(r),this.setAttribute("position",new Ne(a,3)),this.setAttribute("uv",new Ne(c,2)),this.setAttribute("normal",new Ne(f,3))}static fromJSON(e){return new ys(e.points,e.segments,e.phiStart,e.phiLength)}}h(ys,"LatheGeometry");class Eo extends ys{constructor(e=1,t=1,n=4,i=8){const r=new fo;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Eo(e.radius,e.length,e.capSegments,e.radialSegments)}}h(Eo,"CapsuleGeometry");class Ao extends it{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],c=[],u=[],f=new N,p=new fe;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let m=0,g=3;m<=t;m++,g+=3){const x=n+m/t*i;f.x=e*Math.cos(x),f.y=e*Math.sin(x),a.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(a[g]/e+1)/2,p.y=(a[g+1]/e+1)/2,u.push(p.x,p.y)}for(let m=1;m<=t;m++)r.push(m,m+1,0);this.setIndex(r),this.setAttribute("position",new Ne(a,3)),this.setAttribute("normal",new Ne(c,3)),this.setAttribute("uv",new Ne(u,2))}static fromJSON(e){return new Ao(e.radius,e.segments,e.thetaStart,e.thetaLength)}}h(Ao,"CircleGeometry");class Ir extends it{constructor(e=1,t=1,n=1,i=8,r=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:c,thetaLength:u};const f=this;i=Math.floor(i),r=Math.floor(r);const p=[],m=[],g=[],x=[];let M=0;const y=[],_=n/2;let w=0;E(),a===!1&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(p),this.setAttribute("position",new Ne(m,3)),this.setAttribute("normal",new Ne(g,3)),this.setAttribute("uv",new Ne(x,2));function E(){const A=new N,P=new N;let L=0;const O=(t-e)/n;for(let C=0;C<=r;C++){const I=[],k=C/r,G=k*(t-e)+e;for(let ce=0;ce<=i;ce++){const Q=ce/i,W=Q*u+c,te=Math.sin(W),ae=Math.cos(W);P.x=G*te,P.y=-k*n+_,P.z=G*ae,m.push(P.x,P.y,P.z),A.set(te,O,ae).normalize(),g.push(A.x,A.y,A.z),x.push(Q,1-k),I.push(M++)}y.push(I)}for(let C=0;C<i;C++)for(let I=0;I<r;I++){const k=y[I][C],G=y[I+1][C],ce=y[I+1][C+1],Q=y[I][C+1];p.push(k,G,Q),p.push(G,ce,Q),L+=6}f.addGroup(w,L,0),w+=L}h(E,"generateTorso");function b(A){const P=M,L=new fe,O=new N;let C=0;const I=A===!0?e:t,k=A===!0?1:-1;for(let ce=1;ce<=i;ce++)m.push(0,_*k,0),g.push(0,k,0),x.push(.5,.5),M++;const G=M;for(let ce=0;ce<=i;ce++){const W=ce/i*u+c,te=Math.cos(W),ae=Math.sin(W);O.x=I*ae,O.y=_*k,O.z=I*te,m.push(O.x,O.y,O.z),g.push(0,k,0),L.x=te*.5+.5,L.y=ae*.5*k+.5,x.push(L.x,L.y),M++}for(let ce=0;ce<i;ce++){const Q=P+ce,W=G+ce;A===!0?p.push(W,W+1,Q):p.push(W+1,W,Q),C+=3}f.addGroup(w,C,A===!0?1:2),w+=C}h(b,"generateCap")}static fromJSON(e){return new Ir(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}h(Ir,"CylinderGeometry");class Co extends Ir{constructor(e=1,t=1,n=8,i=1,r=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,r,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Co(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}h(Co,"ConeGeometry");class Li extends it{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];c(i),f(n),p(),this.setAttribute("position",new Ne(r,3)),this.setAttribute("normal",new Ne(r.slice(),3)),this.setAttribute("uv",new Ne(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const b=new N,A=new N,P=new N;for(let L=0;L<t.length;L+=3)x(t[L+0],b),x(t[L+1],A),x(t[L+2],P),u(b,A,P,E)}h(c,"subdivide");function u(E,b,A,P){const L=P+1,O=[];for(let C=0;C<=L;C++){O[C]=[];const I=E.clone().lerp(A,C/L),k=b.clone().lerp(A,C/L),G=L-C;for(let ce=0;ce<=G;ce++)ce===0&&C===L?O[C][ce]=I:O[C][ce]=I.clone().lerp(k,ce/G)}for(let C=0;C<L;C++)for(let I=0;I<2*(L-C)-1;I++){const k=Math.floor(I/2);I%2===0?(g(O[C][k+1]),g(O[C+1][k]),g(O[C][k])):(g(O[C][k+1]),g(O[C+1][k+1]),g(O[C+1][k]))}}h(u,"subdivideFace");function f(E){const b=new N;for(let A=0;A<r.length;A+=3)b.x=r[A+0],b.y=r[A+1],b.z=r[A+2],b.normalize().multiplyScalar(E),r[A+0]=b.x,r[A+1]=b.y,r[A+2]=b.z}h(f,"applyRadius");function p(){const E=new N;for(let b=0;b<r.length;b+=3){E.x=r[b+0],E.y=r[b+1],E.z=r[b+2];const A=_(E)/2/Math.PI+.5,P=w(E)/Math.PI+.5;a.push(A,1-P)}M(),m()}h(p,"generateUVs");function m(){for(let E=0;E<a.length;E+=6){const b=a[E+0],A=a[E+2],P=a[E+4],L=Math.max(b,A,P),O=Math.min(b,A,P);L>.9&&O<.1&&(b<.2&&(a[E+0]+=1),A<.2&&(a[E+2]+=1),P<.2&&(a[E+4]+=1))}}h(m,"correctSeam");function g(E){r.push(E.x,E.y,E.z)}h(g,"pushVertex");function x(E,b){const A=E*3;b.x=e[A+0],b.y=e[A+1],b.z=e[A+2]}h(x,"getVertexByIndex");function M(){const E=new N,b=new N,A=new N,P=new N,L=new fe,O=new fe,C=new fe;for(let I=0,k=0;I<r.length;I+=9,k+=6){E.set(r[I+0],r[I+1],r[I+2]),b.set(r[I+3],r[I+4],r[I+5]),A.set(r[I+6],r[I+7],r[I+8]),L.set(a[k+0],a[k+1]),O.set(a[k+2],a[k+3]),C.set(a[k+4],a[k+5]),P.copy(E).add(b).add(A).divideScalar(3);const G=_(P);y(L,k+0,E,G),y(O,k+2,b,G),y(C,k+4,A,G)}}h(M,"correctUVs");function y(E,b,A,P){P<0&&E.x===1&&(a[b]=E.x-1),A.x===0&&A.z===0&&(a[b]=P/2/Math.PI+.5)}h(y,"correctUV");function _(E){return Math.atan2(E.z,-E.x)}h(_,"azimuth");function w(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}h(w,"inclination")}static fromJSON(e){return new Li(e.vertices,e.indices,e.radius,e.details)}}h(Li,"PolyhedronGeometry");class Po extends Li{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Po(e.radius,e.detail)}}h(Po,"DodecahedronGeometry");const gc=new N,vc=new N,rf=new N,xc=new Vn;class Pd extends it{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(cs*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},x=[];for(let M=0;M<u;M+=3){a?(f[0]=a.getX(M),f[1]=a.getX(M+1),f[2]=a.getX(M+2)):(f[0]=M,f[1]=M+1,f[2]=M+2);const{a:y,b:_,c:w}=xc;if(y.fromBufferAttribute(c,f[0]),_.fromBufferAttribute(c,f[1]),w.fromBufferAttribute(c,f[2]),xc.getNormal(rf),m[0]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,m[1]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,m[2]=`${Math.round(w.x*i)},${Math.round(w.y*i)},${Math.round(w.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const b=(E+1)%3,A=m[E],P=m[b],L=xc[p[E]],O=xc[p[b]],C=`${A}_${P}`,I=`${P}_${A}`;I in g&&g[I]?(rf.dot(g[I].normal)<=r&&(x.push(L.x,L.y,L.z),x.push(O.x,O.y,O.z)),g[I]=null):C in g||(g[C]={index0:f[E],index1:f[b],normal:rf.clone()})}}for(const M in g)if(g[M]){const{index0:y,index1:_}=g[M];gc.fromBufferAttribute(c,y),vc.fromBufferAttribute(c,_),x.push(gc.x,gc.y,gc.z),x.push(vc.x,vc.y,vc.z)}this.setAttribute("position",new Ne(x,3))}}}h(Pd,"EdgesGeometry");class br extends fo{constructor(e){super(e),this.uuid=Wn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new fo().fromJSON(i))}return this}}h(br,"Shape");const jb={triangulate:function(l,e,t=2){const n=e&&e.length,i=n?e[0]*t:l.length;let r=Uv(l,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let c,u,f,p,m,g,x;if(n&&(r=t3(l,e,r,t)),l.length>80*t){c=f=l[0],u=p=l[1];for(let M=t;M<i;M+=t)m=l[M],g=l[M+1],m<c&&(c=m),g<u&&(u=g),m>f&&(f=m),g>p&&(p=g);x=Math.max(f-c,p-u),x=x!==0?32767/x:0}return Ra(r,a,t,c,u,x,0),a}};function Uv(l,e,t,n,i){let r,a;if(i===f3(l,e,t,n)>0)for(r=e;r<t;r+=n)a=zg(r,l[r],l[r+1],a);else for(r=t-n;r>=e;r-=n)a=zg(r,l[r],l[r+1],a);return a&&fu(a,a.next)&&(Da(a),a=a.next),a}h(Uv,"linkedList");function ms(l,e){if(!l)return l;e||(e=l);let t=l,n;do if(n=!1,!t.steiner&&(fu(t,t.next)||Nt(t.prev,t,t.next)===0)){if(Da(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}h(ms,"filterPoints");function Ra(l,e,t,n,i,r,a){if(!l)return;!a&&r&&o3(l,n,i,r);let c=l,u,f;for(;l.prev!==l.next;){if(u=l.prev,f=l.next,r?Kb(l,n,i,r):Qb(l)){e.push(u.i/t|0),e.push(l.i/t|0),e.push(f.i/t|0),Da(l),l=f.next,c=f.next;continue}if(l=f,l===c){a?a===1?(l=$b(ms(l),e,t),Ra(l,e,t,n,i,r,2)):a===2&&e3(l,e,t,n,i,r):Ra(ms(l),e,t,n,i,r,1);break}}}h(Ra,"earcutLinked");function Qb(l){const e=l.prev,t=l,n=l.next;if(Nt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,c=e.y,u=t.y,f=n.y,p=i<r?i<a?i:a:r<a?r:a,m=c<u?c<f?c:f:u<f?u:f,g=i>r?i>a?i:a:r>a?r:a,x=c>u?c>f?c:f:u>f?u:f;let M=n.next;for(;M!==e;){if(M.x>=p&&M.x<=g&&M.y>=m&&M.y<=x&&lo(i,c,r,u,a,f,M.x,M.y)&&Nt(M.prev,M,M.next)>=0)return!1;M=M.next}return!0}h(Qb,"isEar");function Kb(l,e,t,n){const i=l.prev,r=l,a=l.next;if(Nt(i,r,a)>=0)return!1;const c=i.x,u=r.x,f=a.x,p=i.y,m=r.y,g=a.y,x=c<u?c<f?c:f:u<f?u:f,M=p<m?p<g?p:g:m<g?m:g,y=c>u?c>f?c:f:u>f?u:f,_=p>m?p>g?p:g:m>g?m:g,w=qf(x,M,e,t,n),E=qf(y,_,e,t,n);let b=l.prevZ,A=l.nextZ;for(;b&&b.z>=w&&A&&A.z<=E;){if(b.x>=x&&b.x<=y&&b.y>=M&&b.y<=_&&b!==i&&b!==a&&lo(c,p,u,m,f,g,b.x,b.y)&&Nt(b.prev,b,b.next)>=0||(b=b.prevZ,A.x>=x&&A.x<=y&&A.y>=M&&A.y<=_&&A!==i&&A!==a&&lo(c,p,u,m,f,g,A.x,A.y)&&Nt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;b&&b.z>=w;){if(b.x>=x&&b.x<=y&&b.y>=M&&b.y<=_&&b!==i&&b!==a&&lo(c,p,u,m,f,g,b.x,b.y)&&Nt(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;A&&A.z<=E;){if(A.x>=x&&A.x<=y&&A.y>=M&&A.y<=_&&A!==i&&A!==a&&lo(c,p,u,m,f,g,A.x,A.y)&&Nt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}h(Kb,"isEarHashed");function $b(l,e,t){let n=l;do{const i=n.prev,r=n.next.next;!fu(i,r)&&Bv(i,n,n.next,r)&&Ia(i,r)&&Ia(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Da(n),Da(n.next),n=l=r),n=n.next}while(n!==l);return ms(n)}h($b,"cureLocalIntersections");function e3(l,e,t,n,i,r){let a=l;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&c3(a,c)){let u=Vv(a,c);a=ms(a,a.next),u=ms(u,u.next),Ra(a,e,t,n,i,r,0),Ra(u,e,t,n,i,r,0);return}c=c.next}a=a.next}while(a!==l)}h(e3,"splitEarcut");function t3(l,e,t,n){const i=[];let r,a,c,u,f;for(r=0,a=e.length;r<a;r++)c=e[r]*n,u=r<a-1?e[r+1]*n:l.length,f=Uv(l,c,u,n,!1),f===f.next&&(f.steiner=!0),i.push(l3(f));for(i.sort(n3),r=0;r<i.length;r++)t=i3(i[r],t);return t}h(t3,"eliminateHoles");function n3(l,e){return l.x-e.x}h(n3,"compareX");function i3(l,e){const t=r3(l,e);if(!t)return e;const n=Vv(t,l);return ms(n,n.next),ms(t,t.next)}h(i3,"eliminateHole");function r3(l,e){let t=e,n=-1/0,i;const r=l.x,a=l.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const g=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(g<=r&&g>n&&(n=g,i=t.x<t.next.x?t:t.next,g===r))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,f=i.y;let p=1/0,m;t=i;do r>=t.x&&t.x>=u&&r!==t.x&&lo(a<f?r:n,a,u,f,a<f?n:r,a,t.x,t.y)&&(m=Math.abs(a-t.y)/(r-t.x),Ia(t,l)&&(m<p||m===p&&(t.x>i.x||t.x===i.x&&s3(i,t)))&&(i=t,p=m)),t=t.next;while(t!==c);return i}h(r3,"findHoleBridge");function s3(l,e){return Nt(l.prev,l,e.prev)<0&&Nt(e.next,l,l.next)<0}h(s3,"sectorContainsSector");function o3(l,e,t,n){let i=l;do i.z===0&&(i.z=qf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==l);i.prevZ.nextZ=null,i.prevZ=null,a3(i)}h(o3,"indexCurve");function a3(l){let e,t,n,i,r,a,c,u,f=1;do{for(t=l,l=null,r=null,a=0;t;){for(a++,n=t,c=0,e=0;e<f&&(c++,n=n.nextZ,!!n);e++);for(u=f;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:l=i,i.prevZ=r,r=i;t=n}r.nextZ=null,f*=2}while(a>1);return l}h(a3,"sortLinked");function qf(l,e,t,n,i){return l=(l-t)*i|0,e=(e-n)*i|0,l=(l|l<<8)&16711935,l=(l|l<<4)&252645135,l=(l|l<<2)&858993459,l=(l|l<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,l|e<<1}h(qf,"zOrder");function l3(l){let e=l,t=l;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==l);return t}h(l3,"getLeftmost");function lo(l,e,t,n,i,r,a,c){return(i-a)*(e-c)>=(l-a)*(r-c)&&(l-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(r-c)>=(i-a)*(n-c)}h(lo,"pointInTriangle");function c3(l,e){return l.next.i!==e.i&&l.prev.i!==e.i&&!u3(l,e)&&(Ia(l,e)&&Ia(e,l)&&h3(l,e)&&(Nt(l.prev,l,e.prev)||Nt(l,e.prev,e))||fu(l,e)&&Nt(l.prev,l,l.next)>0&&Nt(e.prev,e,e.next)>0)}h(c3,"isValidDiagonal");function Nt(l,e,t){return(e.y-l.y)*(t.x-e.x)-(e.x-l.x)*(t.y-e.y)}h(Nt,"area");function fu(l,e){return l.x===e.x&&l.y===e.y}h(fu,"equals");function Bv(l,e,t,n){const i=yc(Nt(l,e,t)),r=yc(Nt(l,e,n)),a=yc(Nt(t,n,l)),c=yc(Nt(t,n,e));return!!(i!==r&&a!==c||i===0&&_c(l,t,e)||r===0&&_c(l,n,e)||a===0&&_c(t,l,n)||c===0&&_c(t,e,n))}h(Bv,"intersects");function _c(l,e,t){return e.x<=Math.max(l.x,t.x)&&e.x>=Math.min(l.x,t.x)&&e.y<=Math.max(l.y,t.y)&&e.y>=Math.min(l.y,t.y)}h(_c,"onSegment");function yc(l){return l>0?1:l<0?-1:0}h(yc,"sign");function u3(l,e){let t=l;do{if(t.i!==l.i&&t.next.i!==l.i&&t.i!==e.i&&t.next.i!==e.i&&Bv(t,t.next,l,e))return!0;t=t.next}while(t!==l);return!1}h(u3,"intersectsPolygon");function Ia(l,e){return Nt(l.prev,l,l.next)<0?Nt(l,e,l.next)>=0&&Nt(l,l.prev,e)>=0:Nt(l,e,l.prev)<0||Nt(l,l.next,e)<0}h(Ia,"locallyInside");function h3(l,e){let t=l,n=!1;const i=(l.x+e.x)/2,r=(l.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==l);return n}h(h3,"middleInside");function Vv(l,e){const t=new Yf(l.i,l.x,l.y),n=new Yf(e.i,e.x,e.y),i=l.next,r=e.prev;return l.next=e,e.prev=l,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}h(Vv,"splitPolygon");function zg(l,e,t,n){const i=new Yf(l,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}h(zg,"insertNode");function Da(l){l.next.prev=l.prev,l.prev.next=l.next,l.prevZ&&(l.prevZ.nextZ=l.nextZ),l.nextZ&&(l.nextZ.prevZ=l.prevZ)}h(Da,"removeNode");function Yf(l,e,t){this.i=l,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}h(Yf,"Node");function f3(l,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(l[a]-l[r])*(l[r+1]+l[a+1]),a=r;return i}h(f3,"signedArea");class vi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return vi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Fg(e),Og(n,e);let a=e.length;t.forEach(Fg);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,Og(n,t[u]);const c=jb.triangulate(n,i);for(let u=0;u<c.length;u+=3)r.push(c.slice(u,u+3));return r}}h(vi,"ShapeUtils");function Fg(l){const e=l.length;e>2&&l[e-1].equals(l[0])&&l.pop()}h(Fg,"removeDupEndPts");function Og(l,e){for(let t=0;t<e.length;t++)l.push(e[t].x),l.push(e[t].y)}h(Og,"addContour");class Lo extends it{constructor(e=new br([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let c=0,u=e.length;c<u;c++){const f=e[c];a(f)}this.setAttribute("position",new Ne(i,3)),this.setAttribute("uv",new Ne(r,2)),this.computeVertexNormals();function a(c){const u=[],f=t.curveSegments!==void 0?t.curveSegments:12,p=t.steps!==void 0?t.steps:1,m=t.depth!==void 0?t.depth:1;let g=t.bevelEnabled!==void 0?t.bevelEnabled:!0,x=t.bevelThickness!==void 0?t.bevelThickness:.2,M=t.bevelSize!==void 0?t.bevelSize:x-.1,y=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3;const w=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:d3;let b,A=!1,P,L,O,C;w&&(b=w.getSpacedPoints(p),A=!0,g=!1,P=w.computeFrenetFrames(p,!1),L=new N,O=new N,C=new N),g||(_=0,x=0,M=0,y=0);const I=c.extractPoints(f);let k=I.shape;const G=I.holes;if(!vi.isClockWise(k)){k=k.reverse();for(let he=0,re=G.length;he<re;he++){const ye=G[he];vi.isClockWise(ye)&&(G[he]=ye.reverse())}}const Q=vi.triangulateShape(k,G),W=k;for(let he=0,re=G.length;he<re;he++){const ye=G[he];k=k.concat(ye)}function te(he,re,ye){return re||console.error("THREE.ExtrudeGeometry: vec does not exist"),re.clone().multiplyScalar(ye).add(he)}h(te,"scalePt2");const ae=k.length,de=Q.length;function U(he,re,ye){let De,be,Qe;const Xe=he.x-re.x,He=he.y-re.y,Mt=ye.x-he.x,St=ye.y-he.y,F=Xe*Xe+He*He,R=Xe*St-He*Mt;if(Math.abs(R)>Number.EPSILON){const $=Math.sqrt(F),ge=Math.sqrt(Mt*Mt+St*St),_e=re.x-He/$,Ee=re.y+Xe/$,je=ye.x-St/ge,Ce=ye.y+Mt/ge,ue=((je-_e)*St-(Ce-Ee)*Mt)/(Xe*St-He*Mt);De=_e+Xe*ue-he.x,be=Ee+He*ue-he.y;const Ue=De*De+be*be;if(Ue<=2)return new fe(De,be);Qe=Math.sqrt(Ue/2)}else{let $=!1;Xe>Number.EPSILON?Mt>Number.EPSILON&&($=!0):Xe<-Number.EPSILON?Mt<-Number.EPSILON&&($=!0):Math.sign(He)===Math.sign(St)&&($=!0),$?(De=-He,be=Xe,Qe=Math.sqrt(F)):(De=Xe,be=He,Qe=Math.sqrt(F/2))}return new fe(De/Qe,be/Qe)}h(U,"getBevelVec");const ee=[];for(let he=0,re=W.length,ye=re-1,De=he+1;he<re;he++,ye++,De++)ye===re&&(ye=0),De===re&&(De=0),ee[he]=U(W[he],W[ye],W[De]);const q=[];let j,Z=ee.concat();for(let he=0,re=G.length;he<re;he++){const ye=G[he];j=[];for(let De=0,be=ye.length,Qe=be-1,Xe=De+1;De<be;De++,Qe++,Xe++)Qe===be&&(Qe=0),Xe===be&&(Xe=0),j[De]=U(ye[De],ye[Qe],ye[Xe]);q.push(j),Z=Z.concat(j)}for(let he=0;he<_;he++){const re=he/_,ye=x*Math.cos(re*Math.PI/2),De=M*Math.sin(re*Math.PI/2)+y;for(let be=0,Qe=W.length;be<Qe;be++){const Xe=te(W[be],ee[be],De);Ge(Xe.x,Xe.y,-ye)}for(let be=0,Qe=G.length;be<Qe;be++){const Xe=G[be];j=q[be];for(let He=0,Mt=Xe.length;He<Mt;He++){const St=te(Xe[He],j[He],De);Ge(St.x,St.y,-ye)}}}const xe=M+y;for(let he=0;he<ae;he++){const re=g?te(k[he],Z[he],xe):k[he];A?(O.copy(P.normals[0]).multiplyScalar(re.x),L.copy(P.binormals[0]).multiplyScalar(re.y),C.copy(b[0]).add(O).add(L),Ge(C.x,C.y,C.z)):Ge(re.x,re.y,0)}for(let he=1;he<=p;he++)for(let re=0;re<ae;re++){const ye=g?te(k[re],Z[re],xe):k[re];A?(O.copy(P.normals[he]).multiplyScalar(ye.x),L.copy(P.binormals[he]).multiplyScalar(ye.y),C.copy(b[he]).add(O).add(L),Ge(C.x,C.y,C.z)):Ge(ye.x,ye.y,m/p*he)}for(let he=_-1;he>=0;he--){const re=he/_,ye=x*Math.cos(re*Math.PI/2),De=M*Math.sin(re*Math.PI/2)+y;for(let be=0,Qe=W.length;be<Qe;be++){const Xe=te(W[be],ee[be],De);Ge(Xe.x,Xe.y,m+ye)}for(let be=0,Qe=G.length;be<Qe;be++){const Xe=G[be];j=q[be];for(let He=0,Mt=Xe.length;He<Mt;He++){const St=te(Xe[He],j[He],De);A?Ge(St.x,St.y+b[p-1].y,b[p-1].x+ye):Ge(St.x,St.y,m+ye)}}}pe(),Me();function pe(){const he=i.length/3;if(g){let re=0,ye=ae*re;for(let De=0;De<de;De++){const be=Q[De];Ie(be[2]+ye,be[1]+ye,be[0]+ye)}re=p+_*2,ye=ae*re;for(let De=0;De<de;De++){const be=Q[De];Ie(be[0]+ye,be[1]+ye,be[2]+ye)}}else{for(let re=0;re<de;re++){const ye=Q[re];Ie(ye[2],ye[1],ye[0])}for(let re=0;re<de;re++){const ye=Q[re];Ie(ye[0]+ae*p,ye[1]+ae*p,ye[2]+ae*p)}}n.addGroup(he,i.length/3-he,0)}h(pe,"buildLidFaces");function Me(){const he=i.length/3;let re=0;ie(W,re),re+=W.length;for(let ye=0,De=G.length;ye<De;ye++){const be=G[ye];ie(be,re),re+=be.length}n.addGroup(he,i.length/3-he,1)}h(Me,"buildSideFaces");function ie(he,re){let ye=he.length;for(;--ye>=0;){const De=ye;let be=ye-1;be<0&&(be=he.length-1);for(let Qe=0,Xe=p+_*2;Qe<Xe;Qe++){const He=ae*Qe,Mt=ae*(Qe+1),St=re+De+He,F=re+be+He,R=re+be+Mt,$=re+De+Mt;Ye(St,F,R,$)}}}h(ie,"sidewalls");function Ge(he,re,ye){u.push(he),u.push(re),u.push(ye)}h(Ge,"v");function Ie(he,re,ye){we(he),we(re),we(ye);const De=i.length/3,be=E.generateTopUV(n,i,De-3,De-2,De-1);Ze(be[0]),Ze(be[1]),Ze(be[2])}h(Ie,"f3");function Ye(he,re,ye,De){we(he),we(re),we(De),we(re),we(ye),we(De);const be=i.length/3,Qe=E.generateSideWallUV(n,i,be-6,be-3,be-2,be-1);Ze(Qe[0]),Ze(Qe[1]),Ze(Qe[3]),Ze(Qe[1]),Ze(Qe[2]),Ze(Qe[3])}h(Ye,"f4");function we(he){i.push(u[he*3+0]),i.push(u[he*3+1]),i.push(u[he*3+2])}h(we,"addVertex");function Ze(he){r.push(he.x),r.push(he.y)}h(Ze,"addUV")}h(a,"addShape")}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return p3(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const c=t[e.shapes[r]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Ad[i.type]().fromJSON(i)),new Lo(n,e.options)}}h(Lo,"ExtrudeGeometry");const d3={generateTopUV:function(l,e,t,n,i){const r=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],f=e[i*3],p=e[i*3+1];return[new fe(r,a),new fe(c,u),new fe(f,p)]},generateSideWallUV:function(l,e,t,n,i,r){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],f=e[n*3],p=e[n*3+1],m=e[n*3+2],g=e[i*3],x=e[i*3+1],M=e[i*3+2],y=e[r*3],_=e[r*3+1],w=e[r*3+2];return Math.abs(c-p)<Math.abs(a-f)?[new fe(a,1-u),new fe(f,1-m),new fe(g,1-M),new fe(y,1-w)]:[new fe(c,1-u),new fe(p,1-m),new fe(x,1-M),new fe(_,1-w)]}};function p3(l,e,t){if(t.shapes=[],Array.isArray(l))for(let n=0,i=l.length;n<i;n++){const r=l[n];t.shapes.push(r.uuid)}else t.shapes.push(l.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}h(p3,"toJSON$1");class Ro extends Li{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ro(e.radius,e.detail)}}h(Ro,"IcosahedronGeometry");class Ms extends Li{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ms(e.radius,e.detail)}}h(Ms,"OctahedronGeometry");class Io extends it{constructor(e=.5,t=1,n=8,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],f=[],p=[];let m=e;const g=(t-e)/i,x=new N,M=new fe;for(let y=0;y<=i;y++){for(let _=0;_<=n;_++){const w=r+_/n*a;x.x=m*Math.cos(w),x.y=m*Math.sin(w),u.push(x.x,x.y,x.z),f.push(0,0,1),M.x=(x.x/t+1)/2,M.y=(x.y/t+1)/2,p.push(M.x,M.y)}m+=g}for(let y=0;y<i;y++){const _=y*(n+1);for(let w=0;w<n;w++){const E=w+_,b=E,A=E+n+1,P=E+n+2,L=E+1;c.push(b,A,L),c.push(A,P,L)}}this.setIndex(c),this.setAttribute("position",new Ne(u,3)),this.setAttribute("normal",new Ne(f,3)),this.setAttribute("uv",new Ne(p,2))}static fromJSON(e){return new Io(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}h(Io,"RingGeometry");class Do extends it{constructor(e=new br([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)f(e);else for(let p=0;p<e.length;p++)f(e[p]),this.addGroup(c,u,p),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ne(i,3)),this.setAttribute("normal",new Ne(r,3)),this.setAttribute("uv",new Ne(a,2));function f(p){const m=i.length/3,g=p.extractPoints(t);let x=g.shape;const M=g.holes;vi.isClockWise(x)===!1&&(x=x.reverse());for(let _=0,w=M.length;_<w;_++){const E=M[_];vi.isClockWise(E)===!0&&(M[_]=E.reverse())}const y=vi.triangulateShape(x,M);for(let _=0,w=M.length;_<w;_++){const E=M[_];x=x.concat(E)}for(let _=0,w=x.length;_<w;_++){const E=x[_];i.push(E.x,E.y,0),r.push(0,0,1),a.push(E.x,E.y)}for(let _=0,w=y.length;_<w;_++){const E=y[_],b=E[0]+m,A=E[1]+m,P=E[2]+m;n.push(b,A,P),u+=3}}h(f,"addShape")}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return m3(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new Do(n,e.curveSegments)}}h(Do,"ShapeGeometry");function m3(l,e){if(e.shapes=[],Array.isArray(l))for(let t=0,n=l.length;t<n;t++){const i=l[t];e.shapes.push(i.uuid)}else e.shapes.push(l.uuid);return e}h(m3,"toJSON");class Ss extends it{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let f=0;const p=[],m=new N,g=new N,x=[],M=[],y=[],_=[];for(let w=0;w<=n;w++){const E=[],b=w/n;let A=0;w==0&&a==0?A=.5/t:w==n&&u==Math.PI&&(A=-.5/t);for(let P=0;P<=t;P++){const L=P/t;m.x=-e*Math.cos(i+L*r)*Math.sin(a+b*c),m.y=e*Math.cos(a+b*c),m.z=e*Math.sin(i+L*r)*Math.sin(a+b*c),M.push(m.x,m.y,m.z),g.copy(m).normalize(),y.push(g.x,g.y,g.z),_.push(L+A,1-b),E.push(f++)}p.push(E)}for(let w=0;w<n;w++)for(let E=0;E<t;E++){const b=p[w][E+1],A=p[w][E],P=p[w+1][E],L=p[w+1][E+1];(w!==0||a>0)&&x.push(b,A,L),(w!==n-1||u<Math.PI)&&x.push(A,P,L)}this.setIndex(x),this.setAttribute("position",new Ne(M,3)),this.setAttribute("normal",new Ne(y,3)),this.setAttribute("uv",new Ne(_,2))}static fromJSON(e){return new Ss(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}h(Ss,"SphereGeometry");class No extends Li{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new No(e.radius,e.detail)}}h(No,"TetrahedronGeometry");class zo extends it{constructor(e=1,t=.4,n=8,i=6,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],f=[],p=new N,m=new N,g=new N;for(let x=0;x<=n;x++)for(let M=0;M<=i;M++){const y=M/i*r,_=x/n*Math.PI*2;m.x=(e+t*Math.cos(_))*Math.cos(y),m.y=(e+t*Math.cos(_))*Math.sin(y),m.z=t*Math.sin(_),c.push(m.x,m.y,m.z),p.x=e*Math.cos(y),p.y=e*Math.sin(y),g.subVectors(m,p).normalize(),u.push(g.x,g.y,g.z),f.push(M/i),f.push(x/n)}for(let x=1;x<=n;x++)for(let M=1;M<=i;M++){const y=(i+1)*x+M-1,_=(i+1)*(x-1)+M-1,w=(i+1)*(x-1)+M,E=(i+1)*x+M;a.push(y,_,E),a.push(_,w,E)}this.setIndex(a),this.setAttribute("position",new Ne(c,3)),this.setAttribute("normal",new Ne(u,3)),this.setAttribute("uv",new Ne(f,2))}static fromJSON(e){return new zo(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}h(zo,"TorusGeometry");class Fo extends it{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],f=[],p=[],m=new N,g=new N,x=new N,M=new N,y=new N,_=new N,w=new N;for(let b=0;b<=n;++b){const A=b/n*r*Math.PI*2;E(A,r,a,e,x),E(A+.01,r,a,e,M),_.subVectors(M,x),w.addVectors(M,x),y.crossVectors(_,w),w.crossVectors(y,_),y.normalize(),w.normalize();for(let P=0;P<=i;++P){const L=P/i*Math.PI*2,O=-t*Math.cos(L),C=t*Math.sin(L);m.x=x.x+(O*w.x+C*y.x),m.y=x.y+(O*w.y+C*y.y),m.z=x.z+(O*w.z+C*y.z),u.push(m.x,m.y,m.z),g.subVectors(m,x).normalize(),f.push(g.x,g.y,g.z),p.push(b/n),p.push(P/i)}}for(let b=1;b<=n;b++)for(let A=1;A<=i;A++){const P=(i+1)*(b-1)+(A-1),L=(i+1)*b+(A-1),O=(i+1)*b+A,C=(i+1)*(b-1)+A;c.push(P,L,C),c.push(L,O,C)}this.setIndex(c),this.setAttribute("position",new Ne(u,3)),this.setAttribute("normal",new Ne(f,3)),this.setAttribute("uv",new Ne(p,2));function E(b,A,P,L,O){const C=Math.cos(b),I=Math.sin(b),k=P/A*b,G=Math.cos(k);O.x=L*(2+G)*.5*C,O.y=L*(2+G)*I*.5,O.z=L*Math.sin(k)*.5}h(E,"calculatePositionOnCurve")}static fromJSON(e){return new Fo(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}h(Fo,"TorusKnotGeometry");class Oo extends it{constructor(e=new uu(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new N,u=new N,f=new fe;let p=new N;const m=[],g=[],x=[],M=[];y(),this.setIndex(M),this.setAttribute("position",new Ne(m,3)),this.setAttribute("normal",new Ne(g,3)),this.setAttribute("uv",new Ne(x,2));function y(){for(let b=0;b<t;b++)_(b);_(r===!1?t:0),E(),w()}h(y,"generateBufferData");function _(b){p=e.getPointAt(b/t,p);const A=a.normals[b],P=a.binormals[b];for(let L=0;L<=i;L++){const O=L/i*Math.PI*2,C=Math.sin(O),I=-Math.cos(O);u.x=I*A.x+C*P.x,u.y=I*A.y+C*P.y,u.z=I*A.z+C*P.z,u.normalize(),g.push(u.x,u.y,u.z),c.x=p.x+n*u.x,c.y=p.y+n*u.y,c.z=p.z+n*u.z,m.push(c.x,c.y,c.z)}}h(_,"generateSegment");function w(){for(let b=1;b<=t;b++)for(let A=1;A<=i;A++){const P=(i+1)*(b-1)+(A-1),L=(i+1)*b+(A-1),O=(i+1)*b+A,C=(i+1)*(b-1)+A;M.push(P,L,C),M.push(L,O,C)}}h(w,"generateIndices");function E(){for(let b=0;b<=t;b++)for(let A=0;A<=i;A++)f.x=b/t,f.y=A/i,x.push(f.x,f.y)}h(E,"generateUVs")}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Oo(new Ad[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}h(Oo,"TubeGeometry");class Ld extends it{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,r=new N;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=u.length;f<p;++f){const m=u[f],g=m.start,x=m.count;for(let M=g,y=g+x;M<y;M+=3)for(let _=0;_<3;_++){const w=c.getX(M+_),E=c.getX(M+(_+1)%3);i.fromBufferAttribute(a,w),r.fromBufferAttribute(a,E),kg(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(a,p),r.fromBufferAttribute(a,m),kg(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ne(t,3))}}}h(Ld,"WireframeGeometry");function kg(l,e,t){const n=`${l.x},${l.y},${l.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${l.x},${l.y},${l.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}h(kg,"isUniqueEdge");var Ug=Object.freeze({__proto__:null,BoxGeometry:nr,CapsuleGeometry:Eo,CircleGeometry:Ao,ConeGeometry:Co,CylinderGeometry:Ir,DodecahedronGeometry:Po,EdgesGeometry:Pd,ExtrudeGeometry:Lo,IcosahedronGeometry:Ro,LatheGeometry:ys,OctahedronGeometry:Ms,PlaneGeometry:_s,PolyhedronGeometry:Li,RingGeometry:Io,ShapeGeometry:Do,SphereGeometry:Ss,TetrahedronGeometry:No,TorusGeometry:zo,TorusKnotGeometry:Fo,TubeGeometry:Oo,WireframeGeometry:Ld});class Rd extends hn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}h(Rd,"ShadowMaterial");class Id extends xi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}h(Id,"RawShaderMaterial");class du extends hn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}h(du,"MeshStandardMaterial");class Dd extends du{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Xt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}h(Dd,"MeshPhysicalMaterial");class Nd extends hn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}h(Nd,"MeshPhongMaterial");class zd extends hn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}h(zd,"MeshToonMaterial");class Fd extends hn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}h(Fd,"MeshNormalMaterial");class Od extends hn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}h(Od,"MeshLambertMaterial");class kd extends hn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}h(kd,"MeshMatcapMaterial");class Ud extends Mn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}h(Ud,"LineDashedMaterial");function ri(l,e,t){return Bd(l)?new l.constructor(l.subarray(e,t!==void 0?t:l.length)):l.slice(e,t)}h(ri,"arraySlice");function ss(l,e,t){return!l||!t&&l.constructor===e?l:typeof e.BYTES_PER_ELEMENT=="number"?new e(l):Array.prototype.slice.call(l)}h(ss,"convertArray");function Bd(l){return ArrayBuffer.isView(l)&&!(l instanceof DataView)}h(Bd,"isTypedArray");function Hv(l){function e(i,r){return l[i]-l[r]}h(e,"compareTime");const t=l.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}h(Hv,"getKeyframeOrder");function Zf(l,e,t){const n=l.length,i=new l.constructor(n);for(let r=0,a=0;a!==n;++r){const c=t[r]*e;for(let u=0;u!==e;++u)i[a++]=l[c+u]}return i}h(Zf,"sortedArray");function Vd(l,e,t,n){let i=1,r=l[0];for(;r!==void 0&&r[n]===void 0;)r=l[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=l[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=l[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=l[i++];while(r!==void 0)}h(Vd,"flattenJSON");function g3(l,e,t,n,i=30){const r=l.clone();r.name=e;const a=[];for(let u=0;u<r.tracks.length;++u){const f=r.tracks[u],p=f.getValueSize(),m=[],g=[];for(let x=0;x<f.times.length;++x){const M=f.times[x]*i;if(!(M<t||M>=n)){m.push(f.times[x]);for(let y=0;y<p;++y)g.push(f.values[x*p+y])}}m.length!==0&&(f.times=ss(m,f.times.constructor),f.values=ss(g,f.values.constructor),a.push(f))}r.tracks=a;let c=1/0;for(let u=0;u<r.tracks.length;++u)c>r.tracks[u].times[0]&&(c=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*c);return r.resetDuration(),r}h(g3,"subclip");function v3(l,e=0,t=l,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const f=l.tracks.find(function(w){return w.name===c.name&&w.ValueTypeName===u});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const x=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=x/3);const M=c.times.length-1;let y;if(r<=c.times[0]){const w=p,E=m-p;y=ri(c.values,w,E)}else if(r>=c.times[M]){const w=M*m+p,E=w+m-p;y=ri(c.values,w,E)}else{const w=c.createInterpolant(),E=p,b=m-p;w.evaluate(r),y=ri(w.resultBuffer,E,b)}u==="quaternion"&&new An().fromArray(y).normalize().conjugate().toArray(y);const _=f.times.length;for(let w=0;w<_;++w){const E=w*x+g;if(u==="quaternion")An.multiplyQuaternionsFlat(f.values,E,y,0,f.values,E);else{const b=x-g*2;for(let A=0;A<b;++A)f.values[E+A]-=y[A]}}}return l.blendMode=ad,l}h(v3,"makeClipAdditive");var x3=Object.freeze({__proto__:null,arraySlice:ri,convertArray:ss,isTypedArray:Bd,getKeyframeOrder:Hv,sortedArray:Zf,flattenJSON:Vd,subclip:g3,makeClipAdditive:v3});class ko{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const c=t[1];e<c&&(n=2,r=c);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}h(ko,"Interpolant");class Hd extends ko{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ns,endingEnd:ns}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,c=i[r],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case is:r=e,c=2*t-n;break;case Aa:r=i.length-2,c=t+i[r]-i[r+1];break;default:r=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case is:a=e,u=2*n-t;break;case Aa:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const f=(n-t)*.5,p=this.valueSize;this._weightPrev=f/(t-c),this._weightNext=f/(u-n),this._offsetPrev=r*p,this._offsetNext=a*p}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,x=this._weightNext,M=(n-t)/(i-t),y=M*M,_=y*M,w=-g*_+2*g*y-g*M,E=(1+g)*_+(-1.5-2*g)*y+(-.5+g)*M+1,b=(-1-x)*_+(1.5+x)*y+.5*M,A=x*_-x*y;for(let P=0;P!==c;++P)r[P]=w*a[p+P]+E*a[f+P]+b*a[u+P]+A*a[m+P];return r}}h(Hd,"CubicInterpolant");class pu extends ko{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,p=(n-t)/(i-t),m=1-p;for(let g=0;g!==c;++g)r[g]=a[f+g]*m+a[u+g]*p;return r}}h(pu,"LinearInterpolant");class Wd extends ko{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}h(Wd,"DiscreteInterpolant");class oi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ss(t,this.TimeBufferType),this.values=ss(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ss(e.times,Array),values:ss(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Wd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pu(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Hd(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ta:t=this.InterpolantFactoryMethodDiscrete;break;case Ea:t=this.InterpolantFactoryMethodLinear;break;case zc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ta;case this.InterpolantFactoryMethodLinear:return Ea;case this.InterpolantFactoryMethodSmooth:return zc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const c=this.getValueSize();this.times=ri(n,r,a),this.values=ri(this.values,r*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==r;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&Bd(i))for(let c=0,u=i.length;c!==u;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),e=!1;break}}return e}optimize(){const e=ri(this.times),t=ri(this.values),n=this.getValueSize(),i=this.getInterpolation()===zc,r=e.length-1;let a=1;for(let c=1;c<r;++c){let u=!1;const f=e[c],p=e[c+1];if(f!==p&&(c!==1||f!==e[0]))if(i)u=!0;else{const m=c*n,g=m-n,x=m+n;for(let M=0;M!==n;++M){const y=t[m+M];if(y!==t[g+M]||y!==t[x+M]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const m=c*n,g=a*n;for(let x=0;x!==n;++x)t[g+x]=t[m+x]}++a}}if(r>0){e[a]=e[r];for(let c=r*n,u=a*n,f=0;f!==n;++f)t[u+f]=t[c+f];++a}return a!==e.length?(this.times=ri(e,0,a),this.values=ri(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=ri(this.times,0),t=ri(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}h(oi,"KeyframeTrack");oi.prototype.TimeBufferType=Float32Array;oi.prototype.ValueBufferType=Float32Array;oi.prototype.DefaultInterpolation=Ea;class Dr extends oi{}h(Dr,"BooleanKeyframeTrack");Dr.prototype.ValueTypeName="bool";Dr.prototype.ValueBufferType=Array;Dr.prototype.DefaultInterpolation=Ta;Dr.prototype.InterpolantFactoryMethodLinear=void 0;Dr.prototype.InterpolantFactoryMethodSmooth=void 0;class mu extends oi{}h(mu,"ColorKeyframeTrack");mu.prototype.ValueTypeName="color";class po extends oi{}h(po,"NumberKeyframeTrack");po.prototype.ValueTypeName="number";class Gd extends ko{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let f=e*c;for(let p=f+c;f!==p;f+=4)An.slerpFlat(r,0,a,f-c,a,f,u);return r}}h(Gd,"QuaternionLinearInterpolant");class ws extends oi{InterpolantFactoryMethodLinear(e){return new Gd(this.times,this.values,this.getValueSize(),e)}}h(ws,"QuaternionKeyframeTrack");ws.prototype.ValueTypeName="quaternion";ws.prototype.DefaultInterpolation=Ea;ws.prototype.InterpolantFactoryMethodSmooth=void 0;class Nr extends oi{}h(Nr,"StringKeyframeTrack");Nr.prototype.ValueTypeName="string";Nr.prototype.ValueBufferType=Array;Nr.prototype.DefaultInterpolation=Ta;Nr.prototype.InterpolantFactoryMethodLinear=void 0;Nr.prototype.InterpolantFactoryMethodSmooth=void 0;class mo extends oi{}h(mo,"VectorKeyframeTrack");mo.prototype.ValueTypeName="vector";class go{constructor(e,t=-1,n,i=jc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Wn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(y3(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(oi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let c=0;c<r;c++){let u=[],f=[];u.push((c+r-1)%r,c,(c+1)%r),f.push(0,1,0);const p=Hv(u);u=Zf(u,1,p),f=Zf(f,1,p),!i&&u[0]===0&&(u.push(r),f.push(f[0])),a.push(new po(".morphTargetInfluences["+t[c].name+"]",u,f).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const f=e[c],p=f.name.match(r);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=h(function(m,g,x,M,y){if(x.length!==0){const _=[],w=[];Vd(x,_,w,M),_.length!==0&&y.push(new m(g,_,w))}},"addNonemptyTrack"),i=[],r=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const f=e.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const x={};let M;for(M=0;M<g.length;M++)if(g[M].morphTargets)for(let y=0;y<g[M].morphTargets.length;y++)x[g[M].morphTargets[y]]=-1;for(const y in x){const _=[],w=[];for(let E=0;E!==g[M].morphTargets.length;++E){const b=g[M];_.push(b.time),w.push(b.morphTarget===y?1:0)}i.push(new po(".morphTargetInfluence["+y+"]",_,w))}u=x.length*a}else{const x=".bones["+t[m].name+"]";n(mo,x+".position",g,"pos",i),n(ws,x+".quaternion",g,"rot",i),n(mo,x+".scale",g,"scl",i)}}return i.length===0?null:new this(r,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}h(go,"AnimationClip");function _3(l){switch(l.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return po;case"vector":case"vector2":case"vector3":case"vector4":return mo;case"color":return mu;case"quaternion":return ws;case"bool":case"boolean":return Dr;case"string":return Nr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+l)}h(_3,"getTrackTypeForValueTypeName");function y3(l){if(l.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=_3(l.type);if(l.times===void 0){const t=[],n=[];Vd(l.keys,t,n,"value"),l.times=t,l.values=n}return e.parse!==void 0?e.parse(l):new e(l.name,l.times,l.values,l.interpolation)}h(y3,"parseKeyframeTrack");const gs={enabled:!1,files:{},add:function(l,e){this.enabled!==!1&&(this.files[l]=e)},get:function(l){if(this.enabled!==!1)return this.files[l]},remove:function(l){delete this.files[l]},clear:function(){this.files={}}};class gu{constructor(e,t,n){const i=this;let r=!1,a=0,c=0,u;const f=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(p){c++,r===!1&&i.onStart!==void 0&&i.onStart(p,a,c),r=!0},this.itemEnd=function(p){a++,i.onProgress!==void 0&&i.onProgress(p,a,c),a===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return u?u(p):p},this.setURLModifier=function(p){return u=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const x=f[m],M=f[m+1];if(x.global&&(x.lastIndex=0),x.test(p))return M}return null}}}h(gu,"LoadingManager");const Wv=new gu;class Dn{constructor(e){this.manager=e!==void 0?e:Wv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}h(Dn,"Loader");const qi={};class Gv extends Error{constructor(e,t){super(e),this.response=t}}h(Gv,"HttpError");class Ci extends Dn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=gs.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(qi[e]!==void 0){qi[e].push({onLoad:t,onProgress:n,onError:i});return}qi[e]=[],qi[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=qi[e],m=f.body.getReader(),g=f.headers.get("Content-Length")||f.headers.get("X-File-Size"),x=g?parseInt(g):0,M=x!==0;let y=0;const _=new ReadableStream({start(w){E();function E(){m.read().then(({done:b,value:A})=>{if(b)w.close();else{y+=A.byteLength;const P=new ProgressEvent("progress",{lengthComputable:M,loaded:y,total:x});for(let L=0,O=p.length;L<O;L++){const C=p[L];C.onProgress&&C.onProgress(P)}w.enqueue(A),E()}})}h(E,"readData")}});return new Response(_)}else throw new Gv(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(u){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c===void 0)return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,x=new TextDecoder(g);return f.arrayBuffer().then(M=>x.decode(M))}}}).then(f=>{gs.add(e,f);const p=qi[e];delete qi[e];for(let m=0,g=p.length;m<g;m++){const x=p[m];x.onLoad&&x.onLoad(f)}}).catch(f=>{const p=qi[e];if(p===void 0)throw this.manager.itemError(e),f;delete qi[e];for(let m=0,g=p.length;m<g;m++){const x=p[m];x.onError&&x.onError(f)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}h(Ci,"FileLoader");class Xv extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ci(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=go.parse(e[n]);t.push(i)}return t}}h(Xv,"AnimationLoader");class qv extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],c=new au,u=new Ci(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let f=0;function p(m){u.load(e[m],function(g){const x=r.parse(g,!0);a[m]={width:x.width,height:x.height,format:x.format,mipmaps:x.mipmaps},f+=1,f===6&&(x.mipmapCount===1&&(c.minFilter=Gt),c.image=a,c.format=x.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(h(p,"loadTexture"),Array.isArray(e))for(let m=0,g=e.length;m<g;++m)p(m);else u.load(e,function(m){const g=r.parse(m,!0);if(g.isCubemap){const x=g.mipmaps.length/g.mipmapCount;for(let M=0;M<x;M++){a[M]={mipmaps:[]};for(let y=0;y<g.mipmapCount;y++)a[M].mipmaps.push(g.mipmaps[M*g.mipmapCount+y]),a[M].format=g.format,a[M].width=g.width,a[M].height=g.height}c.image=a}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=Gt),c.format=g.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}h(qv,"CompressedTextureLoader");class vo extends Dn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=gs.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c=La("img");function u(){p(),gs.add(e,this),t&&t(this),r.manager.itemEnd(e)}h(u,"onImageLoad");function f(m){p(),i&&i(m),r.manager.itemError(e),r.manager.itemEnd(e)}h(f,"onImageError");function p(){c.removeEventListener("load",u,!1),c.removeEventListener("error",f,!1)}return h(p,"removeEventListeners"),c.addEventListener("load",u,!1),c.addEventListener("error",f,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),r.manager.itemStart(e),c.src=e,c}}h(vo,"ImageLoader");class Yv extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=new wo,a=new vo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(f){a.load(e[f],function(p){r.images[f]=p,c++,c===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}h(u,"loadTexture");for(let f=0;f<e.length;++f)u(f);return r}}h(Yv,"CubeTextureLoader");class Zv extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new hs,c=new Ci(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(e,function(u){const f=r.parse(u);!f||(f.image!==void 0?a.image=f.image:f.data!==void 0&&(a.image.width=f.width,a.image.height=f.height,a.image.data=f.data),a.wrapS=f.wrapS!==void 0?f.wrapS:_n,a.wrapT=f.wrapT!==void 0?f.wrapT:_n,a.magFilter=f.magFilter!==void 0?f.magFilter:Gt,a.minFilter=f.minFilter!==void 0?f.minFilter:Gt,a.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.encoding!==void 0&&(a.encoding=f.encoding),f.flipY!==void 0&&(a.flipY=f.flipY),f.format!==void 0&&(a.format=f.format),f.type!==void 0&&(a.type=f.type),f.mipmaps!==void 0&&(a.mipmaps=f.mipmaps,a.minFilter=vs),f.mipmapCount===1&&(a.minFilter=Gt),f.generateMipmaps!==void 0&&(a.generateMipmaps=f.generateMipmaps),a.needsUpdate=!0,t&&t(a,f))},n,i),a}}h(Zv,"DataTextureLoader");class Jv extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=new zt,a=new vo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){r.image=c,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}h(Jv,"TextureLoader");class ir extends vt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}h(ir,"Light");class Xd extends ir{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(vt.DefaultUp),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}h(Xd,"HemisphereLight");const sf=new tt,Bg=new N,Vg=new N;class vu{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fa,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Bg.setFromMatrixPosition(e.matrixWorld),t.position.copy(Bg),Vg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Vg),t.updateMatrixWorld(),sf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(sf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}h(vu,"LightShadow");class jv extends vu{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Pa*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}h(jv,"SpotLightShadow");class qd extends ir{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(vt.DefaultUp),this.updateMatrix(),this.target=new vt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new jv}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}h(qd,"SpotLight");const Hg=new tt,da=new N,of=new N;class Qv extends vu{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new bt(2,1,1,1),new bt(0,1,1,1),new bt(3,1,1,1),new bt(1,1,1,1),new bt(3,0,1,1),new bt(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),da.setFromMatrixPosition(e.matrixWorld),n.position.copy(da),of.copy(n.position),of.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(of),n.updateMatrixWorld(),i.makeTranslation(-da.x,-da.y,-da.z),Hg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Hg)}}h(Qv,"PointLightShadow");class Yd extends ir{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Qv}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}h(Yd,"PointLight");class Kv extends vu{constructor(){super(new bo(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}h(Kv,"DirectionalLightShadow");class Zd extends ir{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(vt.DefaultUp),this.updateMatrix(),this.target=new vt,this.shadow=new Kv}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}h(Zd,"DirectionalLight");class Jd extends ir{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}h(Jd,"AmbientLight");class jd extends ir{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}h(jd,"RectAreaLight");class Qd{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}h(Qd,"SphericalHarmonics3");class Wa extends ir{constructor(e=new Qd,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}h(Wa,"LightProbe");class Ga extends Dn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Ci(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}h(n,"getTexture");const i=Ga.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Le().setHex(a.value);break;case"v2":i.uniforms[r].value=new fe().fromArray(a.value);break;case"v3":i.uniforms[r].value=new N().fromArray(a.value);break;case"v4":i.uniforms[r].value=new bt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new yn().fromArray(a.value);break;case"m4":i.uniforms[r].value=new tt().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new fe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Rd,SpriteMaterial:ru,RawShaderMaterial:Id,ShaderMaterial:xi,PointsMaterial:ou,MeshPhysicalMaterial:Dd,MeshStandardMaterial:du,MeshPhongMaterial:Nd,MeshToonMaterial:zd,MeshNormalMaterial:Fd,MeshLambertMaterial:Od,MeshDepthMaterial:tu,MeshDistanceMaterial:nu,MeshBasicMaterial:tr,MeshMatcapMaterial:kd,LineDashedMaterial:Ud,LineBasicMaterial:Mn,Material:hn};return new t[e]}}h(Ga,"MaterialLoader");class Xc{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}h(Xc,"LoaderUtils");class Kd extends it{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}h(Kd,"InstancedBufferGeometry");class $d extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ci(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(x,M){if(t[M]!==void 0)return t[M];const _=x.interleavedBuffers[M],w=r(x,_.buffer),E=oo(_.type,w),b=new Ua(E,_.stride);return b.uuid=_.uuid,t[M]=b,b}h(i,"getInterleavedBuffer");function r(x,M){if(n[M]!==void 0)return n[M];const _=x.arrayBuffers[M],w=new Uint32Array(_).buffer;return n[M]=w,w}h(r,"getArrayBuffer");const a=e.isInstancedBufferGeometry?new Kd:new it,c=e.data.index;if(c!==void 0){const x=oo(c.type,c.array);a.setIndex(new Tt(x,1))}const u=e.data.attributes;for(const x in u){const M=u[x];let y;if(M.isInterleavedBufferAttribute){const _=i(e.data,M.data);y=new Cr(_,M.itemSize,M.offset,M.normalized)}else{const _=oo(M.type,M.array),w=M.isInstancedBufferAttribute?ps:Tt;y=new w(_,M.itemSize,M.normalized)}M.name!==void 0&&(y.name=M.name),M.usage!==void 0&&y.setUsage(M.usage),M.updateRange!==void 0&&(y.updateRange.offset=M.updateRange.offset,y.updateRange.count=M.updateRange.count),a.setAttribute(x,y)}const f=e.data.morphAttributes;if(f)for(const x in f){const M=f[x],y=[];for(let _=0,w=M.length;_<w;_++){const E=M[_];let b;if(E.isInterleavedBufferAttribute){const A=i(e.data,E.data);b=new Cr(A,E.itemSize,E.offset,E.normalized)}else{const A=oo(E.type,E.array);b=new Tt(A,E.itemSize,E.normalized)}E.name!==void 0&&(b.name=E.name),y.push(b)}a.morphAttributes[x]=y}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const m=e.data.groups||e.data.drawcalls||e.data.offsets;if(m!==void 0)for(let x=0,M=m.length;x!==M;++x){const y=m[x];a.addGroup(y.start,y.count,y.materialIndex)}const g=e.data.boundingSphere;if(g!==void 0){const x=new N;g.center!==void 0&&x.fromArray(g.center),a.boundingSphere=new Rr(x,g.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}h($d,"BufferGeometryLoader");class $v extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?Xc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Ci(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let f=null;try{f=JSON.parse(u)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+e+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(f,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Xc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Ci(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(f)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),f=this.parseObject(e.object,r,u,c,n),p=this.parseSkeletons(e.skeletons,f);if(this.bindSkeletons(f,p),t!==void 0){let m=!1;for(const g in a)if(a[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&t(f)}return f}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),f=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,f),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new br().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=new Ba().fromJSON(e[r],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new $d;for(let r=0,a=e.length;r<a;r++){let c;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in Ug?c=Ug[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),c.isBufferGeometry===!0&&u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Ga;r.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=go.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}h(a,"loadImage");function c(u){if(typeof u=="string"){const f=u,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return a(p)}else return u.data?{data:oo(u.type,u.data),width:u.width,height:u.height}:null}if(h(c,"deserializeImage"),e!==void 0&&e.length>0){const u=new gu(t);r=new vo(u),r.setCrossOrigin(this.crossOrigin);for(let f=0,p=e.length;f<p;f++){const m=e[f],g=m.url;if(Array.isArray(g)){const x=[];for(let M=0,y=g.length;M<y;M++){const _=g[M],w=c(_);w!==null&&(w instanceof HTMLImageElement?x.push(w):x.push(new hs(w.data,w.width,w.height)))}i[m.uuid]=new Mr(x)}else{const x=c(m.url);i[m.uuid]=new Mr(x)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:oo(a.type,a.data),width:a.width,height:a.height}:null}if(h(r,"deserializeImage"),e!==void 0&&e.length>0){i=new vo(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],f=u.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const x=f[m],M=await r(x);M!==null&&(M instanceof HTMLImageElement?p.push(M):p.push(new hs(M.data,M.width,M.height)))}n[u.uuid]=new Mr(p)}else{const p=await r(u.url);n[u.uuid]=new Mr(p)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}h(n,"parseConstant");const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=e[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],f=u.data;let p;Array.isArray(f)?(p=new wo,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new hs:p=new zt,f&&(p.needsUpdate=!0)),p.source=u,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,M3)),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],Wg),p.wrapT=n(c.wrap[1],Wg)),c.format!==void 0&&(p.format=c.format),c.type!==void 0&&(p.type=c.type),c.encoding!==void 0&&(p.encoding=c.encoding),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,Gg)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,Gg)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(e,t,n,i,r){let a;function c(g){return t[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),t[g]}h(c,"getGeometry");function u(g){if(g!==void 0){if(Array.isArray(g)){const x=[];for(let M=0,y=g.length;M<y;M++){const _=g[M];n[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),x.push(n[_])}return x}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}h(u,"getMaterial");function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}h(f,"getTexture");let p,m;switch(e.type){case"Scene":a=new iu,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Le(e.background):a.background=f(e.background)),e.environment!==void 0&&(a.environment=f(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new ka(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Oa(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":a=new en(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new bo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Jd(e.color,e.intensity);break;case"DirectionalLight":a=new Zd(e.color,e.intensity);break;case"PointLight":a=new Yd(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new jd(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new qd(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new Xd(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Wa().fromJSON(e);break;case"SkinnedMesh":p=c(e.geometry),m=u(e.material),a=new xd(p,m),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":p=c(e.geometry),m=u(e.material),a=new un(p,m);break;case"InstancedMesh":p=c(e.geometry),m=u(e.material);const g=e.count,x=e.instanceMatrix,M=e.instanceColor;a=new _d(p,m,g),a.instanceMatrix=new ps(new Float32Array(x.array),16),M!==void 0&&(a.instanceColor=new ps(new Float32Array(M.array),M.itemSize));break;case"LOD":a=new vd;break;case"Line":a=new er(c(e.geometry),u(e.material));break;case"LineLoop":a=new yd(c(e.geometry),u(e.material));break;case"LineSegments":a=new _i(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new Md(c(e.geometry),u(e.material));break;case"Sprite":a=new gd(u(e.material));break;case"Group":a=new rs;break;case"Bone":a=new su;break;default:a=new vt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const g=e.children;for(let x=0;x<g.length;x++)a.add(this.parseObject(g[x],t,n,i,r))}if(e.animations!==void 0){const g=e.animations;for(let x=0;x<g.length;x++){const M=g[x];a.animations.push(r[M])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const g=e.levels;for(let x=0;x<g.length;x++){const M=g[x],y=a.getObjectByProperty("uuid",M.object);y!==void 0&&a.addLevel(y,M.distance,M.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}h($v,"ObjectLoader");const M3={UVMapping:Jc,CubeReflectionMapping:Tr,CubeRefractionMapping:Er,EquirectangularReflectionMapping:Ma,EquirectangularRefractionMapping:Sa,CubeUVReflectionMapping:_o},Wg={RepeatWrapping:wa,ClampToEdgeWrapping:_n,MirroredRepeatWrapping:ba},Gg={NearestFilter:Qt,NearestMipmapNearestFilter:Bc,NearestMipmapLinearFilter:Vc,LinearFilter:Gt,LinearMipmapNearestFilter:sd,LinearMipmapLinearFilter:vs};class ex extends Dn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=gs.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){gs.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}h(ex,"ImageBitmapLoader");let Mc;class xu{static getContext(){return Mc===void 0&&(Mc=new(window.AudioContext||window.webkitAudioContext)),Mc}static setContext(e){Mc=e}}h(xu,"AudioContext");class tx extends Dn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ci(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const u=c.slice(0);xu.getContext().decodeAudioData(u,function(p){t(p)})}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}}h(tx,"AudioLoader");class nx extends Wa{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Le().set(e),r=new Le().set(t),a=new N(i.r,i.g,i.b),c=new N(r.r,r.g,r.b),u=Math.sqrt(Math.PI),f=u*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(a).sub(c).multiplyScalar(f)}}h(nx,"HemisphereLightProbe");class ix extends Wa{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}h(ix,"AmbientLightProbe");const Xg=new tt,qg=new tt,Zr=new tt;class rx{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Zr.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(cs*t.fov*.5)/t.zoom;let c,u;qg.elements[12]=-i,Xg.elements[12]=i,c=-a*t.aspect+r,u=a*t.aspect+r,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Zr),c=-a*t.aspect-r,u=a*t.aspect-r,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Zr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(qg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Xg)}}h(rx,"StereoCamera");class _u{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Yg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Yg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}h(_u,"Clock");function Yg(){return(typeof performance>"u"?Date:performance).now()}h(Yg,"now");const Jr=new N,Zg=new An,S3=new N,jr=new N;class sx extends vt{constructor(){super(),this.type="AudioListener",this.context=xu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new _u}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Jr,Zg,S3),jr.set(0,0,-1).applyQuaternion(Zg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Jr.x,i),t.positionY.linearRampToValueAtTime(Jr.y,i),t.positionZ.linearRampToValueAtTime(Jr.z,i),t.forwardX.linearRampToValueAtTime(jr.x,i),t.forwardY.linearRampToValueAtTime(jr.y,i),t.forwardZ.linearRampToValueAtTime(jr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Jr.x,Jr.y,Jr.z),t.setOrientation(jr.x,jr.y,jr.z,n.x,n.y,n.z)}}h(sx,"AudioListener");class ep extends vt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}h(ep,"Audio");const Qr=new N,Jg=new An,w3=new N,Kr=new N;class ox extends ep{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Qr,Jg,w3),Kr.set(0,0,1).applyQuaternion(Jg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Qr.x,n),t.positionY.linearRampToValueAtTime(Qr.y,n),t.positionZ.linearRampToValueAtTime(Qr.z,n),t.orientationX.linearRampToValueAtTime(Kr.x,n),t.orientationY.linearRampToValueAtTime(Kr.y,n),t.orientationZ.linearRampToValueAtTime(Kr.z,n)}else t.setPosition(Qr.x,Qr.y,Qr.z),t.setOrientation(Kr.x,Kr.y,Kr.z)}}h(ox,"PositionalAudio");class ax{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}h(ax,"AudioAnalyser");class tp{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[r+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,f=t+t;u!==f;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){An.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;An.multiplyQuaternionsFlat(e,a,e,t,e,n),An.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let c=0;c!==r;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}h(tp,"PropertyMixer");const np="\\[\\]\\.:\\/",b3=new RegExp("["+np+"]","g"),ip="[^"+np+"]",T3="[^"+np.replace("\\.","")+"]",E3=/((?:WC+[\/:])*)/.source.replace("WC",ip),A3=/(WCOD+)?/.source.replace("WCOD",T3),C3=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ip),P3=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ip),L3=new RegExp("^"+E3+A3+C3+P3+"$"),R3=["material","materials","bones","map"];class lx{constructor(e,t,n){const i=n||mt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}h(lx,"Composite");class mt{constructor(e,t,n){this.path=t,this.parsedPath=n||mt.parseTrackName(t),this.node=mt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new mt.Composite(e,t,n):new mt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(b3,"")}static parseTrackName(e){const t=L3.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);R3.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=h(function(r){for(let a=0;a<r.length;a++){const c=r[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},"searchNodeSubtree"),i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=mt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let f=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let p=0;p<e.length;p++)if(e[p].name===f){f=p;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(f!==void 0){if(e[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[f]}}const a=e[i];if(a===void 0){const f=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}h(mt,"PropertyBinding");mt.Composite=lx;mt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};mt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};mt.prototype.GetterByBindingType=[mt.prototype._getValue_direct,mt.prototype._getValue_array,mt.prototype._getValue_arrayElement,mt.prototype._getValue_toArray];mt.prototype.SetterByBindingTypeAndVersioning=[[mt.prototype._setValue_direct,mt.prototype._setValue_direct_setNeedsUpdate,mt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_array,mt.prototype._setValue_array_setNeedsUpdate,mt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_arrayElement,mt.prototype._setValue_arrayElement_setNeedsUpdate,mt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_fromArray,mt.prototype._setValue_fromArray_setNeedsUpdate,mt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cx{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Wn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let c,u=e.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],x=g.uuid;let M=t[x];if(M===void 0){M=u++,t[x]=M,e.push(g);for(let y=0,_=a;y!==_;++y)r[y].push(new mt(g,n[y],i[y]))}else if(M<f){c=e[M];const y=--f,_=e[y];t[_.uuid]=M,e[M]=_,t[x]=y,e[y]=g;for(let w=0,E=a;w!==E;++w){const b=r[w],A=b[y];let P=b[M];b[M]=A,P===void 0&&(P=new mt(g,n[w],i[w])),b[y]=P}}else e[M]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],f=u.uuid,p=t[f];if(p!==void 0&&p>=r){const m=r++,g=e[m];t[g.uuid]=p,e[p]=g,t[f]=m,e[m]=u;for(let x=0,M=i;x!==M;++x){const y=n[x],_=y[m],w=y[p];y[p]=_,y[m]=w}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const f=arguments[c],p=f.uuid,m=t[p];if(m!==void 0)if(delete t[p],m<r){const g=--r,x=e[g],M=--a,y=e[M];t[x.uuid]=m,e[m]=x,t[y.uuid]=g,e[g]=y,e.pop();for(let _=0,w=i;_!==w;++_){const E=n[_],b=E[g],A=E[M];E[m]=b,E[g]=A,E.pop()}}else{const g=--a,x=e[g];g>0&&(t[x.uuid]=m),e[m]=x,e.pop();for(let M=0,y=i;M!==y;++M){const _=n[M];_[m]=_[g],_.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,c=this._parsedPaths,u=this._objects,f=u.length,p=this.nCachedObjects_,m=new Array(f);i=r.length,n[e]=i,a.push(e),c.push(t),r.push(m);for(let g=p,x=u.length;g!==x;++g){const M=u[g];m[g]=new mt(M,e,t)}return m}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],f=e[c];t[f]=n,a[n]=u,a.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}h(cx,"AnimationObjectGroup");class ux{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,c=new Array(a),u={endingStart:ns,endingEnd:ns};for(let f=0;f!==a;++f){const p=r[f].createInterpolant(null);c[f]=p,p.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=tv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,c=i/r;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,f=c.sampleValues;return u[0]=r,u[1]=r+n,f[0]=e/a,f[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case ad:for(let p=0,m=u.length;p!==m;++p)u[p].evaluate(a),f[p].accumulateAdditive(c);break;case jc:default:for(let p=0,m=u.length;p!==m;++p)u[p].evaluate(a),f[p].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===nv;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===ev){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,r+=Math.abs(c);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const f=e<0;this._setEndings(f,!f,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=is,i.endingEnd=is):(e?i.endingStart=this.zeroSlopeAtStart?is:ns:i.endingStart=Aa,t?i.endingEnd=this.zeroSlopeAtEnd?is:ns:i.endingEnd=Aa)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=r,u[0]=t,c[1]=r+e,u[1]=n,this}}h(ux,"AnimationAction");const I3=new Float32Array(1);class hx extends Pi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,f=this._bindingsByRootAndName;let p=f[u];p===void 0&&(p={},f[u]=p);for(let m=0;m!==r;++m){const g=i[m],x=g.name;let M=p[x];if(M!==void 0)++M.referenceCount,a[m]=M;else{if(M=a[m],M!==void 0){M._cacheIndex===null&&(++M.referenceCount,this._addInactiveBinding(M,u,x));continue}const y=t&&t._propertyBindings[m].binding.parsedPath;M=new tp(mt.create(n,x,y),g.ValueTypeName,g.getValueSize()),++M.referenceCount,this._addInactiveBinding(M,u,x),a[m]=M}c[m].resultBuffer=M.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,c=a[r],u=c.knownActions,f=u[u.length-1],p=e._byClipCacheIndex;f._byClipCacheIndex=p,u[p]=f,u.pop(),e._byClipCacheIndex=null;const m=c.actionByRoot,g=(e._localRoot||this._root).uuid;delete m[g],u.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],f=e._cacheIndex;u._cacheIndex=f,t[f]=u,t.pop(),delete c[r],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new pu(new Float32Array(2),new Float32Array(2),1,I3),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?go.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let f=null;if(n===void 0&&(a!==null?n=a.blendMode:n=jc),u!==void 0){const m=u.actionByRoot[r];if(m!==void 0&&m.blendMode===n)return m;f=u.knownActions[0],a===null&&(a=f._clip)}if(a===null)return null;const p=new ux(this,a,t,n);return this._bindAction(p,f),this._addInactiveAction(p,c,r),p}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?go.findByName(n,e):e,a=r?r.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let f=0;f!==n;++f)t[f]._update(i,e,r,a);const c=this._bindings,u=this._nActiveBindings;for(let f=0;f!==u;++f)c[f].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let c=0,u=a.length;c!==u;++c){const f=a[c];this._deactivateAction(f);const p=f._cacheIndex,m=t[t.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,t[p]=m,t.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const c=r[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}h(hx,"AnimationMixer");class yu{constructor(e){this.value=e}clone(){return new yu(this.value.clone===void 0?this.value:this.value.clone())}}h(yu,"Uniform");let D3=0;class fx extends Pi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:D3++}),this.name="",this.usage=Ca,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}h(fx,"UniformsGroup");class dx extends Ua{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}h(dx,"InstancedInterleavedBuffer");class px{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}h(px,"GLBufferAttribute");class rp{constructor(e,t,n=0,i=1/0){this.ray=new Mo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new wr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Jf(e,this,n,t),n.sort(jg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Jf(e[i],this,n,t);return n.sort(jg),n}}h(rp,"Raycaster");function jg(l,e){return l.distance-e.distance}h(jg,"ascSort");function Jf(l,e,t,n){if(l.layers.test(e.layers)&&l.raycast(e,t),n===!0){const i=l.children;for(let r=0,a=i.length;r<a;r++)Jf(i[r],e,t,!0)}}h(Jf,"intersectObject");class mx{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Xt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}h(mx,"Spherical");class gx{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}h(gx,"Cylindrical");const Qg=new fe;class vx{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Qg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Qg.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}h(vx,"Box2");const Kg=new N,Sc=new N;class xx{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Kg.subVectors(e,this.start),Sc.subVectors(this.end,this.start);const n=Sc.dot(Sc);let r=Sc.dot(Kg)/n;return t&&(r=Xt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}h(xx,"Line3");const $g=new N;class _x extends vt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new it,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const f=a/u*Math.PI*2,p=c/u*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new Ne(i,3));const r=new Mn({fog:!1,toneMapped:!1});this.cone=new _i(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),$g.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt($g),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}h(_x,"SpotLightHelper");const _r=new N,wc=new tt,af=new tt;class yx extends _i{constructor(e){const t=Mx(e),n=new it,i=[],r=[],a=new Le(0,0,1),c=new Le(0,1,0);for(let f=0;f<t.length;f++){const p=t[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(c.r,c.g,c.b))}n.setAttribute("position",new Ne(i,3)),n.setAttribute("color",new Ne(r,3));const u=new Mn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");af.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const c=t[r];c.parent&&c.parent.isBone&&(wc.multiplyMatrices(af,c.matrixWorld),_r.setFromMatrixPosition(wc),i.setXYZ(a,_r.x,_r.y,_r.z),wc.multiplyMatrices(af,c.parent.matrixWorld),_r.setFromMatrixPosition(wc),i.setXYZ(a+1,_r.x,_r.y,_r.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}h(yx,"SkeletonHelper");function Mx(l){const e=[];l.isBone===!0&&e.push(l);for(let t=0;t<l.children.length;t++)e.push.apply(e,Mx(l.children[t]));return e}h(Mx,"getBoneList");class Sx extends un{constructor(e,t,n){const i=new Ss(t,4,2),r=new tr({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}h(Sx,"PointLightHelper");const N3=new N,e0=new Le,t0=new Le;class wx extends vt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ms(t);i.rotateY(Math.PI*.5),this.material=new tr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Tt(a,3)),this.add(new un(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");e0.copy(this.light.color),t0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?e0:t0;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(N3.setFromMatrixPosition(this.light.matrixWorld).negate())}}h(wx,"HemisphereLightHelper");class bx extends _i{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const r=t/2,a=e/t,c=e/2,u=[],f=[];for(let g=0,x=0,M=-c;g<=t;g++,M+=a){u.push(-c,0,M,c,0,M),u.push(M,0,-c,M,0,c);const y=g===r?n:i;y.toArray(f,x),x+=3,y.toArray(f,x),x+=3,y.toArray(f,x),x+=3,y.toArray(f,x),x+=3}const p=new it;p.setAttribute("position",new Ne(u,3)),p.setAttribute("color",new Ne(f,3));const m=new Mn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}h(bx,"GridHelper");class Tx extends _i{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new Le(r),a=new Le(a);const c=[],u=[];if(t>1)for(let m=0;m<t;m++){const g=m/t*(Math.PI*2),x=Math.sin(g)*e,M=Math.cos(g)*e;c.push(0,0,0),c.push(x,0,M);const y=m&1?r:a;u.push(y.r,y.g,y.b),u.push(y.r,y.g,y.b)}for(let m=0;m<n;m++){const g=m&1?r:a,x=e-e/n*m;for(let M=0;M<i;M++){let y=M/i*(Math.PI*2),_=Math.sin(y)*x,w=Math.cos(y)*x;c.push(_,0,w),u.push(g.r,g.g,g.b),y=(M+1)/i*(Math.PI*2),_=Math.sin(y)*x,w=Math.cos(y)*x,c.push(_,0,w),u.push(g.r,g.g,g.b)}}const f=new it;f.setAttribute("position",new Ne(c,3)),f.setAttribute("color",new Ne(u,3));const p=new Mn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}h(Tx,"PolarGridHelper");const n0=new N,bc=new N,i0=new N;class Ex extends vt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new it;i.setAttribute("position",new Ne([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Mn({fog:!1,toneMapped:!1});this.lightPlane=new er(i,r),this.add(this.lightPlane),i=new it,i.setAttribute("position",new Ne([0,0,0,0,0,1],3)),this.targetLine=new er(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),n0.setFromMatrixPosition(this.light.matrixWorld),bc.setFromMatrixPosition(this.light.target.matrixWorld),i0.subVectors(bc,n0),this.lightPlane.lookAt(bc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(bc),this.targetLine.scale.z=i0.length()}}h(Ex,"DirectionalLightHelper");const Tc=new N,Ut=new So;class Ax extends _i{constructor(e){const t=new it,n=new Mn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(M,y){u(M),u(y)}h(c,"addLine");function u(M){i.push(0,0,0),r.push(0,0,0),a[M]===void 0&&(a[M]=[]),a[M].push(i.length/3-1)}h(u,"addPoint"),t.setAttribute("position",new Ne(i,3)),t.setAttribute("color",new Ne(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const f=new Le(16755200),p=new Le(16711680),m=new Le(43775),g=new Le(16777215),x=new Le(3355443);this.setColors(f,p,m,g,x)}setColors(e,t,n,i,r){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Ut.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ht("c",t,e,Ut,0,0,-1),Ht("t",t,e,Ut,0,0,1),Ht("n1",t,e,Ut,-n,-i,-1),Ht("n2",t,e,Ut,n,-i,-1),Ht("n3",t,e,Ut,-n,i,-1),Ht("n4",t,e,Ut,n,i,-1),Ht("f1",t,e,Ut,-n,-i,1),Ht("f2",t,e,Ut,n,-i,1),Ht("f3",t,e,Ut,-n,i,1),Ht("f4",t,e,Ut,n,i,1),Ht("u1",t,e,Ut,n*.7,i*1.1,-1),Ht("u2",t,e,Ut,-n*.7,i*1.1,-1),Ht("u3",t,e,Ut,0,i*2,-1),Ht("cf1",t,e,Ut,-n,0,1),Ht("cf2",t,e,Ut,n,0,1),Ht("cf3",t,e,Ut,0,-i,1),Ht("cf4",t,e,Ut,0,i,1),Ht("cn1",t,e,Ut,-n,0,-1),Ht("cn2",t,e,Ut,n,0,-1),Ht("cn3",t,e,Ut,0,-i,-1),Ht("cn4",t,e,Ut,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}h(Ax,"CameraHelper");function Ht(l,e,t,n,i,r,a){Tc.set(i,r,a).unproject(n);const c=e[l];if(c!==void 0){const u=t.getAttribute("position");for(let f=0,p=c.length;f<p;f++)u.setXYZ(c[f],Tc.x,Tc.y,Tc.z)}}h(Ht,"setPoint");const Ec=new Lr;class Cx extends _i{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new it;r.setIndex(new Tt(n,1)),r.setAttribute("position",new Tt(i,3)),super(r,new Mn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ec.setFromObject(this.object),Ec.isEmpty())return;const t=Ec.min,n=Ec.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}h(Cx,"BoxHelper");class Px extends _i{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new it;r.setIndex(new Tt(n,1)),r.setAttribute("position",new Ne(i,3)),super(r,new Mn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}h(Px,"Box3Helper");class Lx extends er{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new it;a.setAttribute("position",new Ne(r,3)),a.computeBoundingSphere(),super(a,new Mn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new it;u.setAttribute("position",new Ne(c,3)),u.computeBoundingSphere(),this.add(new un(u,new tr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}h(Lx,"PlaneHelper");const r0=new N;let Ac,lf;class Rx extends vt{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",Ac===void 0&&(Ac=new it,Ac.setAttribute("position",new Ne([0,0,0,0,1,0],3)),lf=new Ir(0,.5,1,5,1),lf.translate(0,-.5,0)),this.position.copy(t),this.line=new er(Ac,new Mn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new un(lf,new tr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{r0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(r0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}h(Rx,"ArrowHelper");class Ix extends _i{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new it;i.setAttribute("position",new Ne(t,3)),i.setAttribute("color",new Ne(n,3));const r=new Mn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}h(Ix,"AxesHelper");class Dx{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new fo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(w){const E=[];for(let b=0,A=w.length;b<A;b++){const P=w[b],L=new br;L.curves=P.curves,E.push(L)}return E}h(t,"toShapesNoHoles");function n(w,E){const b=E.length;let A=!1;for(let P=b-1,L=0;L<b;P=L++){let O=E[P],C=E[L],I=C.x-O.x,k=C.y-O.y;if(Math.abs(k)>Number.EPSILON){if(k<0&&(O=E[L],I=-I,C=E[P],k=-k),w.y<O.y||w.y>C.y)continue;if(w.y===O.y){if(w.x===O.x)return!0}else{const G=k*(w.x-O.x)-I*(w.y-O.y);if(G===0)return!0;if(G<0)continue;A=!A}}else{if(w.y!==O.y)continue;if(C.x<=w.x&&w.x<=O.x||O.x<=w.x&&w.x<=C.x)return!0}}return A}h(n,"isPointInsidePolygon");const i=vi.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,c,u;const f=[];if(r.length===1)return c=r[0],u=new br,u.curves=c.curves,f.push(u),f;let p=!i(r[0].getPoints());p=e?!p:p;const m=[],g=[];let x=[],M=0,y;g[M]=void 0,x[M]=[];for(let w=0,E=r.length;w<E;w++)c=r[w],y=c.getPoints(),a=i(y),a=e?!a:a,a?(!p&&g[M]&&M++,g[M]={s:new br,p:y},g[M].s.curves=c.curves,p&&M++,x[M]=[]):x[M].push({h:c,p:y[0]});if(!g[0])return t(r);if(g.length>1){let w=!1,E=0;for(let b=0,A=g.length;b<A;b++)m[b]=[];for(let b=0,A=g.length;b<A;b++){const P=x[b];for(let L=0;L<P.length;L++){const O=P[L];let C=!0;for(let I=0;I<g.length;I++)n(O.p,g[I].p)&&(b!==I&&E++,C?(C=!1,m[I].push(O)):w=!0);C&&m[b].push(O)}}E>0&&w===!1&&(x=m)}let _;for(let w=0,E=g.length;w<E;w++){u=g[w].s,f.push(u),_=x[w];for(let b=0,A=_.length;b<A;b++)u.holes.push(_[b].h)}return f}}h(Dx,"ShapePath");const Zi=z3();function z3(){const l=new ArrayBuffer(4),e=new Float32Array(l),t=new Uint32Array(l),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const f=u-127;f<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):f<-14?(n[u]=1024>>-f-14,n[u|256]=1024>>-f-14|32768,i[u]=-f-1,i[u|256]=-f-1):f<=15?(n[u]=f+15<<10,n[u|256]=f+15<<10|32768,i[u]=13,i[u|256]=13):f<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let f=u<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,r[u]=f|p}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:c}}h(z3,"_generateTables");function F3(l){Math.abs(l)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),l=Xt(l,-65504,65504),Zi.floatView[0]=l;const e=Zi.uint32View[0],t=e>>23&511;return Zi.baseTable[t]+((e&8388607)>>Zi.shiftTable[t])}h(F3,"toHalfFloat");function O3(l){const e=l>>10;return Zi.uint32View[0]=Zi.mantissaTable[Zi.offsetTable[e]+(l&1023)]+Zi.exponentTable[e],Zi.floatView[0]}h(O3,"fromHalfFloat");var k3=Object.freeze({__proto__:null,toHalfFloat:F3,fromHalfFloat:O3});function U3(){console.error("THREE.ImmediateRenderObject has been removed.")}h(U3,"ImmediateRenderObject");class Nx extends Gn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}h(Nx,"WebGLMultisampleRenderTarget");class zx extends yo{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}h(zx,"DataTexture2DArray");class Fx extends za{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}h(Fx,"DataTexture3D");class Ox extends nr{constructor(e,t,n,i,r,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,a)}}h(Ox,"BoxBufferGeometry");class kx extends Eo{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}h(kx,"CapsuleBufferGeometry");class Ux extends Ao{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}h(Ux,"CircleBufferGeometry");class Bx extends Co{constructor(e,t,n,i,r,a,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,a,c)}}h(Bx,"ConeBufferGeometry");class Vx extends Ir{constructor(e,t,n,i,r,a,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,a,c,u)}}h(Vx,"CylinderBufferGeometry");class Hx extends Po{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}h(Hx,"DodecahedronBufferGeometry");class Wx extends Lo{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}h(Wx,"ExtrudeBufferGeometry");class Gx extends Ro{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}h(Gx,"IcosahedronBufferGeometry");class Xx extends ys{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}h(Xx,"LatheBufferGeometry");class qx extends Ms{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}h(qx,"OctahedronBufferGeometry");class Yx extends _s{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}h(Yx,"PlaneBufferGeometry");class Zx extends Li{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}h(Zx,"PolyhedronBufferGeometry");class Jx extends Io{constructor(e,t,n,i,r,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,a)}}h(Jx,"RingBufferGeometry");class jx extends Do{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}h(jx,"ShapeBufferGeometry");class Qx extends Ss{constructor(e,t,n,i,r,a,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,a,c)}}h(Qx,"SphereBufferGeometry");class Kx extends No{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}h(Kx,"TetrahedronBufferGeometry");class $x extends zo{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}}h($x,"TorusBufferGeometry");class e_ extends Fo{constructor(e,t,n,i,r,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,a)}}h(e_,"TorusKnotBufferGeometry");class t_ extends Oo{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}}h(t_,"TubeBufferGeometry");typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Zc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Zc);const jf=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:rd,AddEquation:es,AddOperation:N0,AdditiveAnimationBlendMode:ad,AdditiveBlending:gf,AlphaFormat:G0,AlwaysDepth:A0,AlwaysStencilFunc:ov,AmbientLight:Jd,AmbientLightProbe:ix,AnimationClip:go,AnimationLoader:Xv,AnimationMixer:hx,AnimationObjectGroup:cx,AnimationUtils:x3,ArcCurve:Sd,ArrayCamera:fd,ArrowHelper:Rx,Audio:ep,AudioAnalyser:ax,AudioContext:xu,AudioListener:sx,AudioLoader:tx,AxesHelper:Ix,BackSide:Hn,BasicDepthPacking:iv,BasicShadowMap:uy,Bone:su,BooleanKeyframeTrack:Dr,Box2:vx,Box3:Lr,Box3Helper:Px,BoxBufferGeometry:Ox,BoxGeometry:nr,BoxHelper:Cx,BufferAttribute:Tt,BufferGeometry:it,BufferGeometryLoader:$d,ByteType:U0,Cache:gs,Camera:So,CameraHelper:Ax,CanvasTexture:kv,CapsuleBufferGeometry:kx,CapsuleGeometry:Eo,CatmullRomCurve3:bd,CineonToneMapping:O0,CircleBufferGeometry:Ux,CircleGeometry:Ao,ClampToEdgeWrapping:_n,Clock:_u,Color:Le,ColorKeyframeTrack:mu,ColorManagement:xn,CompressedArrayTexture:Ov,CompressedTexture:au,CompressedTextureLoader:qv,ConeBufferGeometry:Bx,ConeGeometry:Co,CubeCamera:cd,CubeReflectionMapping:Tr,CubeRefractionMapping:Er,CubeTexture:wo,CubeTextureLoader:Yv,CubeUVReflectionMapping:_o,CubicBezierCurve:lu,CubicBezierCurve3:Td,CubicInterpolant:Hd,CullFaceBack:mf,CullFaceFront:d0,CullFaceFrontBack:cy,CullFaceNone:f0,Curve:si,CurvePath:Cd,CustomBlending:p0,CustomToneMapping:k0,CylinderBufferGeometry:Vx,CylinderGeometry:Ir,Cylindrical:gx,Data3DTexture:za,DataArrayTexture:yo,DataTexture:hs,DataTexture2DArray:zx,DataTexture3D:Fx,DataTextureLoader:Zv,DataUtils:k3,DecrementStencilOp:Sy,DecrementWrapStencilOp:by,DefaultLoadingManager:Wv,DepthFormat:Sr,DepthStencilFormat:ds,DepthTexture:dd,DirectionalLight:Zd,DirectionalLightHelper:Ex,DiscreteInterpolant:Wd,DodecahedronBufferGeometry:Hx,DodecahedronGeometry:Po,DoubleSide:Ji,DstAlphaFactor:M0,DstColorFactor:w0,DynamicCopyUsage:Uy,DynamicDrawUsage:Dy,DynamicReadUsage:Fy,EdgesGeometry:Pd,EllipseCurve:Va,EqualDepth:P0,EqualStencilFunc:Cy,EquirectangularReflectionMapping:Ma,EquirectangularRefractionMapping:Sa,Euler:xs,EventDispatcher:Pi,ExtrudeBufferGeometry:Wx,ExtrudeGeometry:Lo,FileLoader:Ci,Float16BufferAttribute:xv,Float32BufferAttribute:Ne,Float64BufferAttribute:_v,FloatType:ji,Fog:ka,FogExp2:Oa,FramebufferTexture:Fv,FrontSide:fs,Frustum:Fa,GLBufferAttribute:px,GLSL1:Vy,GLSL3:Hf,GreaterDepth:R0,GreaterEqualDepth:L0,GreaterEqualStencilFunc:Iy,GreaterStencilFunc:Ly,GridHelper:bx,Group:rs,HalfFloatType:co,HemisphereLight:Xd,HemisphereLightHelper:wx,HemisphereLightProbe:nx,IcosahedronBufferGeometry:Gx,IcosahedronGeometry:Ro,ImageBitmapLoader:ex,ImageLoader:vo,ImageUtils:Qc,ImmediateRenderObject:U3,IncrementStencilOp:My,IncrementWrapStencilOp:wy,InstancedBufferAttribute:ps,InstancedBufferGeometry:Kd,InstancedInterleavedBuffer:dx,InstancedMesh:_d,Int16BufferAttribute:gv,Int32BufferAttribute:vv,Int8BufferAttribute:dv,IntType:V0,InterleavedBuffer:Ua,InterleavedBufferAttribute:Cr,Interpolant:ko,InterpolateDiscrete:Ta,InterpolateLinear:Ea,InterpolateSmooth:zc,InvertStencilOp:Ty,KeepStencilOp:Fc,KeyframeTrack:oi,LOD:vd,LatheBufferGeometry:Xx,LatheGeometry:ys,Layers:wr,LessDepth:C0,LessEqualDepth:Uc,LessEqualStencilFunc:Py,LessStencilFunc:Ay,Light:ir,LightProbe:Wa,Line:er,Line3:xx,LineBasicMaterial:Mn,LineCurve:Ha,LineCurve3:Ed,LineDashedMaterial:Ud,LineLoop:yd,LineSegments:_i,LinearEncoding:$i,LinearFilter:Gt,LinearInterpolant:pu,LinearMipMapLinearFilter:py,LinearMipMapNearestFilter:dy,LinearMipmapLinearFilter:vs,LinearMipmapNearestFilter:sd,LinearSRGBColorSpace:uo,LinearToneMapping:z0,Loader:Dn,LoaderUtils:Xc,LoadingManager:gu,LoopOnce:ev,LoopPingPong:nv,LoopRepeat:tv,LuminanceAlphaFormat:Y0,LuminanceFormat:q0,MOUSE:ay,Material:hn,MaterialLoader:Ga,MathUtils:t1,Matrix3:yn,Matrix4:tt,MaxEquation:yf,Mesh:un,MeshBasicMaterial:tr,MeshDepthMaterial:tu,MeshDistanceMaterial:nu,MeshLambertMaterial:Od,MeshMatcapMaterial:kd,MeshNormalMaterial:Fd,MeshPhongMaterial:Nd,MeshPhysicalMaterial:Dd,MeshStandardMaterial:du,MeshToonMaterial:zd,MinEquation:_f,MirroredRepeatWrapping:ba,MixOperation:D0,MultiplyBlending:xf,MultiplyOperation:Na,NearestFilter:Qt,NearestMipMapLinearFilter:fy,NearestMipMapNearestFilter:hy,NearestMipmapLinearFilter:Vc,NearestMipmapNearestFilter:Bc,NeverDepth:E0,NeverStencilFunc:Ey,NoBlending:Ki,NoColorSpace:xy,NoToneMapping:gi,NormalAnimationBlendMode:jc,NormalBlending:as,NotEqualDepth:I0,NotEqualStencilFunc:Ry,NumberKeyframeTrack:po,Object3D:vt,ObjectLoader:$v,ObjectSpaceNormalMap:sv,OctahedronBufferGeometry:qx,OctahedronGeometry:Ms,OneFactor:x0,OneMinusDstAlphaFactor:S0,OneMinusDstColorFactor:b0,OneMinusSrcAlphaFactor:id,OneMinusSrcColorFactor:y0,OrthographicCamera:bo,PCFShadowMap:ed,PCFSoftShadowMap:td,PMREMGenerator:Gc,Path:fo,PerspectiveCamera:en,Plane:Yi,PlaneBufferGeometry:Yx,PlaneGeometry:_s,PlaneHelper:Lx,PointLight:Yd,PointLightHelper:Sx,Points:Md,PointsMaterial:ou,PolarGridHelper:Tx,PolyhedronBufferGeometry:Zx,PolyhedronGeometry:Li,PositionalAudio:ox,PropertyBinding:mt,PropertyMixer:tp,QuadraticBezierCurve:cu,QuadraticBezierCurve3:uu,Quaternion:An,QuaternionKeyframeTrack:ws,QuaternionLinearInterpolant:Gd,REVISION:Zc,RGBADepthPacking:rv,RGBAFormat:Bn,RGBAIntegerFormat:K0,RGBA_ASTC_10x10_Format:kf,RGBA_ASTC_10x5_Format:zf,RGBA_ASTC_10x6_Format:Ff,RGBA_ASTC_10x8_Format:Of,RGBA_ASTC_12x10_Format:Uf,RGBA_ASTC_12x12_Format:Bf,RGBA_ASTC_4x4_Format:Af,RGBA_ASTC_5x4_Format:Cf,RGBA_ASTC_5x5_Format:Pf,RGBA_ASTC_6x5_Format:Lf,RGBA_ASTC_6x6_Format:Rf,RGBA_ASTC_8x5_Format:If,RGBA_ASTC_8x6_Format:Df,RGBA_ASTC_8x8_Format:Nf,RGBA_BPTC_Format:Vf,RGBA_ETC2_EAC_Format:Ef,RGBA_PVRTC_2BPPV1_Format:bf,RGBA_PVRTC_4BPPV1_Format:wf,RGBA_S3TC_DXT1_Format:Ic,RGBA_S3TC_DXT3_Format:Dc,RGBA_S3TC_DXT5_Format:Nc,RGBFormat:X0,RGB_ETC1_Format:$0,RGB_ETC2_Format:Tf,RGB_PVRTC_2BPPV1_Format:Sf,RGB_PVRTC_4BPPV1_Format:Mf,RGB_S3TC_DXT1_Format:Rc,RGFormat:j0,RGIntegerFormat:Q0,RawShaderMaterial:Id,Ray:Mo,Raycaster:rp,RectAreaLight:jd,RedFormat:Z0,RedIntegerFormat:J0,ReinhardToneMapping:F0,RepeatWrapping:wa,ReplaceStencilOp:yy,ReverseSubtractEquation:g0,RingBufferGeometry:Jx,RingGeometry:Io,SRGBColorSpace:pi,Scene:iu,ShaderChunk:at,ShaderLib:mi,ShaderMaterial:xi,ShadowMaterial:Rd,Shape:br,ShapeBufferGeometry:jx,ShapeGeometry:Do,ShapePath:Dx,ShapeUtils:vi,ShortType:B0,Skeleton:Ba,SkeletonHelper:yx,SkinnedMesh:xd,Source:Mr,Sphere:Rr,SphereBufferGeometry:Qx,SphereGeometry:Ss,Spherical:mx,SphericalHarmonics3:Qd,SplineCurve:hu,SpotLight:qd,SpotLightHelper:_x,Sprite:gd,SpriteMaterial:ru,SrcAlphaFactor:nd,SrcAlphaSaturateFactor:T0,SrcColorFactor:_0,StaticCopyUsage:ky,StaticDrawUsage:Ca,StaticReadUsage:zy,StereoCamera:rx,StreamCopyUsage:By,StreamDrawUsage:Ny,StreamReadUsage:Oy,StringKeyframeTrack:Nr,SubtractEquation:m0,SubtractiveBlending:vf,TOUCH:ly,TangentSpaceNormalMap:Pr,TetrahedronBufferGeometry:Kx,TetrahedronGeometry:No,Texture:zt,TextureLoader:Jv,TorusBufferGeometry:$x,TorusGeometry:zo,TorusKnotBufferGeometry:e_,TorusKnotGeometry:Fo,Triangle:Vn,TriangleFanDrawMode:vy,TriangleStripDrawMode:gy,TrianglesDrawMode:my,TubeBufferGeometry:t_,TubeGeometry:Oo,UVMapping:Jc,Uint16BufferAttribute:Kc,Uint32BufferAttribute:$c,Uint8BufferAttribute:pv,Uint8ClampedBufferAttribute:mv,Uniform:yu,UniformsGroup:fx,UniformsLib:Se,UniformsUtils:Mv,UnsignedByteType:Ar,UnsignedInt248Type:ls,UnsignedIntType:yr,UnsignedShort4444Type:H0,UnsignedShort5551Type:W0,UnsignedShortType:od,VSMShadowMap:so,Vector2:fe,Vector3:N,Vector4:bt,VectorKeyframeTrack:mo,VideoTexture:zv,WebGL1Renderer:md,WebGL3DRenderTarget:hv,WebGLArrayRenderTarget:uv,WebGLCubeRenderTarget:ud,WebGLMultipleRenderTargets:fv,WebGLMultisampleRenderTarget:Nx,WebGLRenderTarget:Gn,WebGLRenderer:pd,WebGLUtils:Iv,WireframeGeometry:Ld,WrapAroundEnding:Aa,ZeroCurvatureEnding:ns,ZeroFactor:v0,ZeroSlopeEnding:is,ZeroStencilOp:_y,_SRGBAFormat:Hc,sRGBEncoding:Lt},Symbol.toStringTag,{value:"Module"}));var os={exports:{}},bs={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */bs.ConcurrentRoot=1;bs.ContinuousEventPriority=4;bs.DefaultEventPriority=16;bs.DiscreteEventPriority=1;bs.IdleEventPriority=536870912;bs.LegacyRoot=0;(function(l){l.exports=bs})(os);function B3(l){let e;const t=new Set,n=h((f,p)=>{const m=typeof f=="function"?f(e):f;if(m!==e){const g=e;e=p?m:Object.assign({},e,m),t.forEach(x=>x(e,g))}},"setState"),i=h(()=>e,"getState"),r=h((f,p=i,m=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let g=p(e);function x(){const M=p(e);if(!m(g,M)){const y=g;f(g=M,y)}}return h(x,"listenerToAdd"),t.add(x),()=>t.delete(x)},"subscribeWithSelector"),u={setState:n,getState:i,subscribe:h((f,p,m)=>p||m?r(f,p,m):(t.add(f),()=>t.delete(f)),"subscribe"),destroy:h(()=>t.clear(),"destroy")};return e=l(n,i,u),u}h(B3,"createStore$1");const V3=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),s0=V3?jt.exports.useEffect:jt.exports.useLayoutEffect;function H3(l){const e=typeof l=="function"?B3(l):l,t=h((n=e.getState,i=Object.is)=>{const[,r]=jt.exports.useReducer(_=>_+1,0),a=e.getState(),c=jt.exports.useRef(a),u=jt.exports.useRef(n),f=jt.exports.useRef(i),p=jt.exports.useRef(!1),m=jt.exports.useRef();m.current===void 0&&(m.current=n(a));let g,x=!1;(c.current!==a||u.current!==n||f.current!==i||p.current)&&(g=n(a),x=!i(m.current,g)),s0(()=>{x&&(m.current=g),c.current=a,u.current=n,f.current=i,p.current=!1});const M=jt.exports.useRef(a);s0(()=>{const _=h(()=>{try{const E=e.getState(),b=u.current(E);f.current(m.current,b)||(c.current=E,m.current=b,r())}catch{p.current=!0,r()}},"listener"),w=e.subscribe(_);return e.getState()!==M.current&&_(),w},[]);const y=x?g:m.current;return jt.exports.useDebugValue(y),y},"useStore");return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}h(H3,"create");var n_={exports:{}},qc={exports:{}},i_={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(l){function e(U,ee){var q=U.length;U.push(ee);e:for(;0<q;){var j=q-1>>>1,Z=U[j];if(0<i(Z,ee))U[j]=ee,U[q]=Z,q=j;else break e}}h(e,"f");function t(U){return U.length===0?null:U[0]}h(t,"h");function n(U){if(U.length===0)return null;var ee=U[0],q=U.pop();if(q!==ee){U[0]=q;e:for(var j=0,Z=U.length,xe=Z>>>1;j<xe;){var pe=2*(j+1)-1,Me=U[pe],ie=pe+1,Ge=U[ie];if(0>i(Me,q))ie<Z&&0>i(Ge,Me)?(U[j]=Ge,U[ie]=q,j=ie):(U[j]=Me,U[pe]=q,j=pe);else if(ie<Z&&0>i(Ge,q))U[j]=Ge,U[ie]=q,j=ie;else break e}}return ee}h(n,"k");function i(U,ee){var q=U.sortIndex-ee.sortIndex;return q!==0?q:U.id-ee.id}if(h(i,"g"),typeof performance=="object"&&typeof performance.now=="function"){var r=performance;l.unstable_now=function(){return r.now()}}else{var a=Date,c=a.now();l.unstable_now=function(){return a.now()-c}}var u=[],f=[],p=1,m=null,g=3,x=!1,M=!1,y=!1,_=typeof setTimeout=="function"?setTimeout:null,w=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function b(U){for(var ee=t(f);ee!==null;){if(ee.callback===null)n(f);else if(ee.startTime<=U)n(f),ee.sortIndex=ee.expirationTime,e(u,ee);else break;ee=t(f)}}h(b,"G");function A(U){if(y=!1,b(U),!M)if(t(u)!==null)M=!0,ae(P);else{var ee=t(f);ee!==null&&de(A,ee.startTime-U)}}h(A,"H");function P(U,ee){M=!1,y&&(y=!1,w(C),C=-1),x=!0;var q=g;try{for(b(ee),m=t(u);m!==null&&(!(m.expirationTime>ee)||U&&!G());){var j=m.callback;if(typeof j=="function"){m.callback=null,g=m.priorityLevel;var Z=j(m.expirationTime<=ee);ee=l.unstable_now(),typeof Z=="function"?m.callback=Z:m===t(u)&&n(u),b(ee)}else n(u);m=t(u)}if(m!==null)var xe=!0;else{var pe=t(f);pe!==null&&de(A,pe.startTime-ee),xe=!1}return xe}finally{m=null,g=q,x=!1}}h(P,"J");var L=!1,O=null,C=-1,I=5,k=-1;function G(){return!(l.unstable_now()-k<I)}h(G,"M");function ce(){if(O!==null){var U=l.unstable_now();k=U;var ee=!0;try{ee=O(!0,U)}finally{ee?Q():(L=!1,O=null)}}else L=!1}h(ce,"R");var Q;if(typeof E=="function")Q=h(function(){E(ce)},"S");else if(typeof MessageChannel<"u"){var W=new MessageChannel,te=W.port2;W.port1.onmessage=ce,Q=h(function(){te.postMessage(null)},"S")}else Q=h(function(){_(ce,0)},"S");function ae(U){O=U,L||(L=!0,Q())}h(ae,"I");function de(U,ee){C=_(function(){U(l.unstable_now())},ee)}h(de,"K"),l.unstable_IdlePriority=5,l.unstable_ImmediatePriority=1,l.unstable_LowPriority=4,l.unstable_NormalPriority=3,l.unstable_Profiling=null,l.unstable_UserBlockingPriority=2,l.unstable_cancelCallback=function(U){U.callback=null},l.unstable_continueExecution=function(){M||x||(M=!0,ae(P))},l.unstable_forceFrameRate=function(U){0>U||125<U?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<U?Math.floor(1e3/U):5},l.unstable_getCurrentPriorityLevel=function(){return g},l.unstable_getFirstCallbackNode=function(){return t(u)},l.unstable_next=function(U){switch(g){case 1:case 2:case 3:var ee=3;break;default:ee=g}var q=g;g=ee;try{return U()}finally{g=q}},l.unstable_pauseExecution=function(){},l.unstable_requestPaint=function(){},l.unstable_runWithPriority=function(U,ee){switch(U){case 1:case 2:case 3:case 4:case 5:break;default:U=3}var q=g;g=U;try{return ee()}finally{g=q}},l.unstable_scheduleCallback=function(U,ee,q){var j=l.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?j+q:j):q=j,U){case 1:var Z=-1;break;case 2:Z=250;break;case 5:Z=1073741823;break;case 4:Z=1e4;break;default:Z=5e3}return Z=q+Z,U={id:p++,callback:ee,priorityLevel:U,startTime:q,expirationTime:Z,sortIndex:-1},q>j?(U.sortIndex=q,e(f,U),t(u)===null&&U===t(f)&&(y?(w(C),C=-1):y=!0,de(A,q-j))):(U.sortIndex=Z,e(u,U),M||x||(M=!0,ae(P))),U},l.unstable_shouldYield=G,l.unstable_wrapCallback=function(U){var ee=g;return function(){var q=g;g=ee;try{return U.apply(this,arguments)}finally{g=q}}}})(i_);(function(l){l.exports=i_})(qc);/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var W3=h(function(e){var t={},n=jt.exports,i=qc.exports,r=Object.assign;function a(s){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+s,d=1;d<arguments.length;d++)o+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+s+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}h(a,"n");var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),f=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),m=Symbol.for("react.strict_mode"),g=Symbol.for("react.profiler"),x=Symbol.for("react.provider"),M=Symbol.for("react.context"),y=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),w=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),b=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),P=Symbol.iterator;function L(s){return s===null||typeof s!="object"?null:(s=P&&s[P]||s["@@iterator"],typeof s=="function"?s:null)}h(L,"ua");function O(s){if(s==null)return null;if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s;switch(s){case p:return"Fragment";case f:return"Portal";case g:return"Profiler";case m:return"StrictMode";case _:return"Suspense";case w:return"SuspenseList"}if(typeof s=="object")switch(s.$$typeof){case M:return(s.displayName||"Context")+".Consumer";case x:return(s._context.displayName||"Context")+".Provider";case y:var o=s.render;return s=s.displayName,s||(s=o.displayName||o.name||"",s=s!==""?"ForwardRef("+s+")":"ForwardRef"),s;case E:return o=s.displayName||null,o!==null?o:O(s.type)||"Memo";case b:o=s._payload,s=s._init;try{return O(s(o))}catch{}}return null}h(O,"va");function C(s){var o=s.type;switch(s.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return s=o.render,s=s.displayName||s.name||"",o.displayName||(s!==""?"ForwardRef("+s+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return O(o);case 8:return o===m?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}h(C,"xa");function I(s){var o=s,d=s;if(s.alternate)for(;o.return;)o=o.return;else{s=o;do o=s,(o.flags&4098)!==0&&(d=o.return),s=o.return;while(s)}return o.tag===3?d:null}h(I,"ya");function k(s){if(I(s)!==s)throw Error(a(188))}h(k,"za");function G(s){var o=s.alternate;if(!o){if(o=I(s),o===null)throw Error(a(188));return o!==s?null:s}for(var d=s,v=o;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(v=S.return,v!==null){d=v;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return k(S),s;if(T===v)return k(S),o;T=T.sibling}throw Error(a(188))}if(d.return!==v.return)d=S,v=T;else{for(var z=!1,B=S.child;B;){if(B===d){z=!0,d=S,v=T;break}if(B===v){z=!0,v=S,d=T;break}B=B.sibling}if(!z){for(B=T.child;B;){if(B===d){z=!0,d=T,v=S;break}if(B===v){z=!0,v=T,d=S;break}B=B.sibling}if(!z)throw Error(a(189))}}if(d.alternate!==v)throw Error(a(190))}if(d.tag!==3)throw Error(a(188));return d.stateNode.current===d?s:o}h(G,"Aa");function ce(s){return s=G(s),s!==null?Q(s):null}h(ce,"Ba");function Q(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){var o=Q(s);if(o!==null)return o;s=s.sibling}return null}h(Q,"Ca");function W(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){if(s.tag!==4){var o=W(s);if(o!==null)return o}s=s.sibling}return null}h(W,"Da");var te=Array.isArray,ae=e.getPublicInstance,de=e.getRootHostContext,U=e.getChildHostContext,ee=e.prepareForCommit,q=e.resetAfterCommit,j=e.createInstance,Z=e.appendInitialChild,xe=e.finalizeInitialChildren,pe=e.prepareUpdate,Me=e.shouldSetTextContent,ie=e.createTextInstance,Ge=e.scheduleTimeout,Ie=e.cancelTimeout,Ye=e.noTimeout,we=e.isPrimaryRenderer,Ze=e.supportsMutation,he=e.supportsPersistence,re=e.supportsHydration,ye=e.getInstanceFromNode,De=e.preparePortalMount,be=e.getCurrentEventPriority,Qe=e.detachDeletedInstance,Xe=e.supportsMicrotasks,He=e.scheduleMicrotask,Mt=e.supportsTestSelectors,St=e.findFiberRoot,F=e.getBoundingRect,R=e.getTextContent,$=e.isHiddenSubtree,ge=e.matchAccessibilityRole,_e=e.setFocusIfFocusable,Ee=e.setupIntersectionObserver,je=e.appendChild,Ce=e.appendChildToContainer,ue=e.commitTextUpdate,Ue=e.commitMount,Je=e.commitUpdate,ze=e.insertBefore,qe=e.insertInContainerBefore,Be=e.removeChild,dt=e.removeChildFromContainer,Et=e.resetTextContent,qt=e.hideInstance,V=e.hideTextInstance,oe=e.unhideInstance,me=e.unhideTextInstance,Pe=e.clearContainer,Oe=e.cloneInstance,gt=e.createContainerChildSet,Bt=e.appendChildToContainerChildSet,rn=e.finalizeContainerChildren,yi=e.replaceContainerChildren,At=e.cloneHiddenInstance,Xn=e.cloneHiddenTextInstance,Cn=e.canHydrateInstance,Xa=e.canHydrateTextInstance,Su=e.canHydrateSuspenseInstance,qa=e.isSuspenseInstancePending,Uo=e.isSuspenseInstanceFallback,D=e.registerSuspenseInstanceRetry,Y=e.getNextHydratableSibling,se=e.getFirstHydratableChild,X=e.getFirstHydratableChildWithinContainer,le=e.getFirstHydratableChildWithinSuspenseInstance,Ve=e.hydrateInstance,Ke=e.hydrateTextInstance,rt=e.hydrateSuspenseInstance,lt=e.getNextHydratableInstanceAfterSuspenseInstance,ft=e.commitHydratedContainer,ut=e.commitHydratedSuspenseInstance,ht=e.clearSuspenseBoundary,Ft=e.clearSuspenseBoundaryFromContainer,Sn=e.shouldDeleteUnhydratedTailInstances,ai=e.didNotMatchHydratedContainerTextInstance,Ri=e.didNotMatchHydratedTextInstance,Rt;function st(s){if(Rt===void 0)try{throw Error()}catch(d){var o=d.stack.trim().match(/\n( *(at )?)/);Rt=o&&o[1]||""}return`
`+Rt+s}h(st,"ac");var zr=!1;function Ot(s,o){if(!s||zr)return"";zr=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=h(function(){throw Error()},"b"),Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(ve){var v=ve}Reflect.construct(s,[],o)}else{try{o.call()}catch(ve){v=ve}s.call(o.prototype)}else{try{throw Error()}catch(ve){v=ve}s()}}catch(ve){if(ve&&v&&typeof ve.stack=="string"){for(var S=ve.stack.split(`
`),T=v.stack.split(`
`),z=S.length-1,B=T.length-1;1<=z&&0<=B&&S[z]!==T[B];)B--;for(;1<=z&&0<=B;z--,B--)if(S[z]!==T[B]){if(z!==1||B!==1)do if(z--,B--,0>B||S[z]!==T[B]){var ne=`
`+S[z].replace(" at new "," at ");return s.displayName&&ne.includes("<anonymous>")&&(ne=ne.replace("<anonymous>",s.displayName)),ne}while(1<=z&&0<=B);break}}}finally{zr=!1,Error.prepareStackTrace=d}return(s=s?s.displayName||s.name:"")?st(s):""}h(Ot,"cc");var Ii=Object.prototype.hasOwnProperty,Ts=[],qn=-1;function Yn(s){return{current:s}}h(Yn,"gc");function nt(s){0>qn||(s.current=Ts[qn],Ts[qn]=null,qn--)}h(nt,"x");function pt(s,o){qn++,Ts[qn]=s.current,s.current=o}h(pt,"y");var Zn={},wt=Yn(Zn),sn=Yn(!1),Di=Zn;function Ni(s,o){var d=s.type.contextTypes;if(!d)return Zn;var v=s.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===o)return v.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=o[T];return v&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=o,s.__reactInternalMemoizedMaskedChildContext=S),S}h(Ni,"jc");function Pn(s){return s=s.childContextTypes,s!=null}h(Pn,"C");function Ya(){nt(sn),nt(wt)}h(Ya,"kc");function sp(s,o,d){if(wt.current!==Zn)throw Error(a(168));pt(wt,o),pt(sn,d)}h(sp,"lc");function op(s,o,d){var v=s.stateNode;if(o=o.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var S in v)if(!(S in o))throw Error(a(108,C(s)||"Unknown",S));return r({},d,v)}h(op,"mc");function Za(s){return s=(s=s.stateNode)&&s.__reactInternalMemoizedMergedChildContext||Zn,Di=wt.current,pt(wt,s),pt(sn,sn.current),!0}h(Za,"nc");function ap(s,o,d){var v=s.stateNode;if(!v)throw Error(a(169));d?(s=op(s,o,Di),v.__reactInternalMemoizedMergedChildContext=s,nt(sn),nt(wt),pt(wt,s)):nt(sn),pt(sn,d)}h(ap,"oc");var li=Math.clz32?Math.clz32:m_,d_=Math.log,p_=Math.LN2;function m_(s){return s>>>=0,s===0?32:31-(d_(s)/p_|0)|0}h(m_,"pc");var Ja=64,ja=4194304;function Bo(s){switch(s&-s){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return s&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return s}}h(Bo,"vc");function Qa(s,o){var d=s.pendingLanes;if(d===0)return 0;var v=0,S=s.suspendedLanes,T=s.pingedLanes,z=d&268435455;if(z!==0){var B=z&~S;B!==0?v=Bo(B):(T&=z,T!==0&&(v=Bo(T)))}else z=d&~S,z!==0?v=Bo(z):T!==0&&(v=Bo(T));if(v===0)return 0;if(o!==0&&o!==v&&(o&S)===0&&(S=v&-v,T=o&-o,S>=T||S===16&&(T&4194240)!==0))return o;if((v&4)!==0&&(v|=d&16),o=s.entangledLanes,o!==0)for(s=s.entanglements,o&=v;0<o;)d=31-li(o),S=1<<d,v|=s[d],o&=~S;return v}h(Qa,"wc");function g_(s,o){switch(s){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}h(g_,"xc");function v_(s,o){for(var d=s.suspendedLanes,v=s.pingedLanes,S=s.expirationTimes,T=s.pendingLanes;0<T;){var z=31-li(T),B=1<<z,ne=S[z];ne===-1?((B&d)===0||(B&v)!==0)&&(S[z]=g_(B,o)):ne<=o&&(s.expiredLanes|=B),T&=~B}}h(v_,"yc");function wu(s){return s=s.pendingLanes&-1073741825,s!==0?s:s&1073741824?1073741824:0}h(wu,"zc");function bu(s){for(var o=[],d=0;31>d;d++)o.push(s);return o}h(bu,"Ac");function Vo(s,o,d){s.pendingLanes|=o,o!==536870912&&(s.suspendedLanes=0,s.pingedLanes=0),s=s.eventTimes,o=31-li(o),s[o]=d}h(Vo,"Bc");function x_(s,o){var d=s.pendingLanes&~o;s.pendingLanes=o,s.suspendedLanes=0,s.pingedLanes=0,s.expiredLanes&=o,s.mutableReadLanes&=o,s.entangledLanes&=o,o=s.entanglements;var v=s.eventTimes;for(s=s.expirationTimes;0<d;){var S=31-li(d),T=1<<S;o[S]=0,v[S]=-1,s[S]=-1,d&=~T}}h(x_,"Cc");function Tu(s,o){var d=s.entangledLanes|=o;for(s=s.entanglements;d;){var v=31-li(d),S=1<<v;S&o|s[v]&o&&(s[v]|=o),d&=~S}}h(Tu,"Dc");var xt=0;function lp(s){return s&=-s,1<s?4<s?(s&268435455)!==0?16:536870912:4:1}h(lp,"Ec");var Eu=i.unstable_scheduleCallback,cp=i.unstable_cancelCallback,__=i.unstable_shouldYield,y_=i.unstable_requestPaint,on=i.unstable_now,Au=i.unstable_ImmediatePriority,M_=i.unstable_UserBlockingPriority,Cu=i.unstable_NormalPriority,S_=i.unstable_IdlePriority,Ka=null,Mi=null;function w_(s){if(Mi&&typeof Mi.onCommitFiberRoot=="function")try{Mi.onCommitFiberRoot(Ka,s,void 0,(s.current.flags&128)===128)}catch{}}h(w_,"Pc");function b_(s,o){return s===o&&(s!==0||1/s===1/o)||s!==s&&o!==o}h(b_,"Qc");var Si=typeof Object.is=="function"?Object.is:b_,zi=null,$a=!1,Pu=!1;function up(s){zi===null?zi=[s]:zi.push(s)}h(up,"Vc");function T_(s){$a=!0,up(s)}h(T_,"Wc");function wi(){if(!Pu&&zi!==null){Pu=!0;var s=0,o=xt;try{var d=zi;for(xt=1;s<d.length;s++){var v=d[s];do v=v(!0);while(v!==null)}zi=null,$a=!1}catch(S){throw zi!==null&&(zi=zi.slice(s+1)),Eu(Au,wi),S}finally{xt=o,Pu=!1}}return null}h(wi,"Xc");var E_=c.ReactCurrentBatchConfig;function el(s,o){if(Si(s,o))return!0;if(typeof s!="object"||s===null||typeof o!="object"||o===null)return!1;var d=Object.keys(s),v=Object.keys(o);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var S=d[v];if(!Ii.call(o,S)||!Si(s[S],o[S]))return!1}return!0}h(el,"Zc");function A_(s){switch(s.tag){case 5:return st(s.type);case 16:return st("Lazy");case 13:return st("Suspense");case 19:return st("SuspenseList");case 0:case 2:case 15:return s=Ot(s.type,!1),s;case 11:return s=Ot(s.type.render,!1),s;case 1:return s=Ot(s.type,!0),s;default:return""}}h(A_,"$c");function ci(s,o){if(s&&s.defaultProps){o=r({},o),s=s.defaultProps;for(var d in s)o[d]===void 0&&(o[d]=s[d]);return o}return o}h(ci,"ad");var tl=Yn(null),nl=null,Es=null,Lu=null;function Ru(){Lu=Es=nl=null}h(Ru,"fd");function hp(s,o,d){we?(pt(tl,o._currentValue),o._currentValue=d):(pt(tl,o._currentValue2),o._currentValue2=d)}h(hp,"gd");function Iu(s){var o=tl.current;nt(tl),we?s._currentValue=o:s._currentValue2=o}h(Iu,"hd");function Du(s,o,d){for(;s!==null;){var v=s.alternate;if((s.childLanes&o)!==o?(s.childLanes|=o,v!==null&&(v.childLanes|=o)):v!==null&&(v.childLanes&o)!==o&&(v.childLanes|=o),s===d)break;s=s.return}}h(Du,"id");function As(s,o){nl=s,Lu=Es=null,s=s.dependencies,s!==null&&s.firstContext!==null&&((s.lanes&o)!==0&&(Fn=!0),s.firstContext=null)}h(As,"jd");function Jn(s){var o=we?s._currentValue:s._currentValue2;if(Lu!==s)if(s={context:s,memoizedValue:o,next:null},Es===null){if(nl===null)throw Error(a(308));Es=s,nl.dependencies={lanes:0,firstContext:s}}else Es=Es.next=s;return o}h(Jn,"ld");var bi=null,rr=!1;function Nu(s){s.updateQueue={baseState:s.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}h(Nu,"od");function fp(s,o){s=s.updateQueue,o.updateQueue===s&&(o.updateQueue={baseState:s.baseState,firstBaseUpdate:s.firstBaseUpdate,lastBaseUpdate:s.lastBaseUpdate,shared:s.shared,effects:s.effects})}h(fp,"pd");function Fi(s,o){return{eventTime:s,lane:o,tag:0,payload:null,callback:null,next:null}}h(Fi,"qd");function sr(s,o){var d=s.updateQueue;d!==null&&(d=d.shared,Yt!==null&&(s.mode&1)!==0&&(ct&2)===0?(s=d.interleaved,s===null?(o.next=o,bi===null?bi=[d]:bi.push(d)):(o.next=s.next,s.next=o),d.interleaved=o):(s=d.pending,s===null?o.next=o:(o.next=s.next,s.next=o),d.pending=o))}h(sr,"rd");function il(s,o,d){if(o=o.updateQueue,o!==null&&(o=o.shared,(d&4194240)!==0)){var v=o.lanes;v&=s.pendingLanes,d|=v,o.lanes=d,Tu(s,d)}}h(il,"sd");function dp(s,o){var d=s.updateQueue,v=s.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var z={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=z:T=T.next=z,d=d.next}while(d!==null);T===null?S=T=o:T=T.next=o}else S=T=o;d={baseState:v.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:v.shared,effects:v.effects},s.updateQueue=d;return}s=d.lastBaseUpdate,s===null?d.firstBaseUpdate=o:s.next=o,d.lastBaseUpdate=o}h(dp,"td");function rl(s,o,d,v){var S=s.updateQueue;rr=!1;var T=S.firstBaseUpdate,z=S.lastBaseUpdate,B=S.shared.pending;if(B!==null){S.shared.pending=null;var ne=B,ve=ne.next;ne.next=null,z===null?T=ve:z.next=ve,z=ne;var Re=s.alternate;Re!==null&&(Re=Re.updateQueue,B=Re.lastBaseUpdate,B!==z&&(B===null?Re.firstBaseUpdate=ve:B.next=ve,Re.lastBaseUpdate=ne))}if(T!==null){var $e=S.baseState;z=0,Re=ve=ne=null,B=T;do{var We=B.lane,Ct=B.eventTime;if((v&We)===We){Re!==null&&(Re=Re.next={eventTime:Ct,lane:0,tag:B.tag,payload:B.payload,callback:B.callback,next:null});e:{var ke=s,gn=B;switch(We=o,Ct=d,gn.tag){case 1:if(ke=gn.payload,typeof ke=="function"){$e=ke.call(Ct,$e,We);break e}$e=ke;break e;case 3:ke.flags=ke.flags&-65537|128;case 0:if(ke=gn.payload,We=typeof ke=="function"?ke.call(Ct,$e,We):ke,We==null)break e;$e=r({},$e,We);break e;case 2:rr=!0}}B.callback!==null&&B.lane!==0&&(s.flags|=64,We=S.effects,We===null?S.effects=[B]:We.push(B))}else Ct={eventTime:Ct,lane:We,tag:B.tag,payload:B.payload,callback:B.callback,next:null},Re===null?(ve=Re=Ct,ne=$e):Re=Re.next=Ct,z|=We;if(B=B.next,B===null){if(B=S.shared.pending,B===null)break;We=B,B=We.next,We.next=null,S.lastBaseUpdate=We,S.shared.pending=null}}while(1);if(Re===null&&(ne=$e),S.baseState=ne,S.firstBaseUpdate=ve,S.lastBaseUpdate=Re,o=S.shared.interleaved,o!==null){S=o;do z|=S.lane,S=S.next;while(S!==o)}else T===null&&(S.shared.lanes=0);Fs|=z,s.lanes=z,s.memoizedState=$e}}h(rl,"ud");function pp(s,o,d){if(s=o.effects,o.effects=null,s!==null)for(o=0;o<s.length;o++){var v=s[o],S=v.callback;if(S!==null){if(v.callback=null,v=d,typeof S!="function")throw Error(a(191,S));S.call(v)}}}h(pp,"wd");var mp=new n.Component().refs;function zu(s,o,d,v){o=s.memoizedState,d=d(v,o),d=d==null?o:r({},o,d),s.memoizedState=d,s.lanes===0&&(s.updateQueue.baseState=d)}h(zu,"yd");var sl={isMounted:function(s){return(s=s._reactInternals)?I(s)===s:!1},enqueueSetState:function(s,o,d){s=s._reactInternals;var v=bn(),S=lr(s),T=Fi(v,S);T.payload=o,d!=null&&(T.callback=d),sr(s,T),o=ei(s,S,v),o!==null&&il(o,s,S)},enqueueReplaceState:function(s,o,d){s=s._reactInternals;var v=bn(),S=lr(s),T=Fi(v,S);T.tag=1,T.payload=o,d!=null&&(T.callback=d),sr(s,T),o=ei(s,S,v),o!==null&&il(o,s,S)},enqueueForceUpdate:function(s,o){s=s._reactInternals;var d=bn(),v=lr(s),S=Fi(d,v);S.tag=2,o!=null&&(S.callback=o),sr(s,S),o=ei(s,v,d),o!==null&&il(o,s,v)}};function gp(s,o,d,v,S,T,z){return s=s.stateNode,typeof s.shouldComponentUpdate=="function"?s.shouldComponentUpdate(v,T,z):o.prototype&&o.prototype.isPureReactComponent?!el(d,v)||!el(S,T):!0}h(gp,"Cd");function vp(s,o,d){var v=!1,S=Zn,T=o.contextType;return typeof T=="object"&&T!==null?T=Jn(T):(S=Pn(o)?Di:wt.current,v=o.contextTypes,T=(v=v!=null)?Ni(s,S):Zn),o=new o(d,T),s.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=sl,s.stateNode=o,o._reactInternals=s,v&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=S,s.__reactInternalMemoizedMaskedChildContext=T),o}h(vp,"Dd");function xp(s,o,d,v){s=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(d,v),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(d,v),o.state!==s&&sl.enqueueReplaceState(o,o.state,null)}h(xp,"Ed");function Fu(s,o,d,v){var S=s.stateNode;S.props=d,S.state=s.memoizedState,S.refs=mp,Nu(s);var T=o.contextType;typeof T=="object"&&T!==null?S.context=Jn(T):(T=Pn(o)?Di:wt.current,S.context=Ni(s,T)),S.state=s.memoizedState,T=o.getDerivedStateFromProps,typeof T=="function"&&(zu(s,o,T,d),S.state=s.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(o=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),o!==S.state&&sl.enqueueReplaceState(S,S.state,null),rl(s,d,S,v),S.state=s.memoizedState),typeof S.componentDidMount=="function"&&(s.flags|=4194308)}h(Fu,"Fd");var Cs=[],Ps=0,ol=null,al=0,jn=[],Qn=0,Fr=null,Oi=1,ki="";function Or(s,o){Cs[Ps++]=al,Cs[Ps++]=ol,ol=s,al=o}h(Or,"Pd");function _p(s,o,d){jn[Qn++]=Oi,jn[Qn++]=ki,jn[Qn++]=Fr,Fr=s;var v=Oi;s=ki;var S=32-li(v)-1;v&=~(1<<S),d+=1;var T=32-li(o)+S;if(30<T){var z=S-S%5;T=(v&(1<<z)-1).toString(32),v>>=z,S-=z,Oi=1<<32-li(o)+S|d<<S|v,ki=T+s}else Oi=1<<T|d<<S|v,ki=s}h(_p,"Qd");function Ou(s){s.return!==null&&(Or(s,1),_p(s,1,0))}h(Ou,"Rd");function ku(s){for(;s===ol;)ol=Cs[--Ps],Cs[Ps]=null,al=Cs[--Ps],Cs[Ps]=null;for(;s===Fr;)Fr=jn[--Qn],jn[Qn]=null,ki=jn[--Qn],jn[Qn]=null,Oi=jn[--Qn],jn[Qn]=null}h(ku,"Sd");var Nn=null,zn=null,It=!1,Ho=!1,ui=null;function yp(s,o){var d=ti(5,null,null,0);d.elementType="DELETED",d.stateNode=o,d.return=s,o=s.deletions,o===null?(s.deletions=[d],s.flags|=16):o.push(d)}h(yp,"Xd");function Mp(s,o){switch(s.tag){case 5:return o=Cn(o,s.type,s.pendingProps),o!==null?(s.stateNode=o,Nn=s,zn=se(o),!0):!1;case 6:return o=Xa(o,s.pendingProps),o!==null?(s.stateNode=o,Nn=s,zn=null,!0):!1;case 13:if(o=Su(o),o!==null){var d=Fr!==null?{id:Oi,overflow:ki}:null;return s.memoizedState={dehydrated:o,treeContext:d,retryLane:1073741824},d=ti(18,null,null,0),d.stateNode=o,d.return=s,s.child=d,Nn=s,zn=null,!0}return!1;default:return!1}}h(Mp,"Zd");function Uu(s){return(s.mode&1)!==0&&(s.flags&128)===0}h(Uu,"$d");function Bu(s){if(It){var o=zn;if(o){var d=o;if(!Mp(s,o)){if(Uu(s))throw Error(a(418));o=Y(d);var v=Nn;o&&Mp(s,o)?yp(v,d):(s.flags=s.flags&-4097|2,It=!1,Nn=s)}}else{if(Uu(s))throw Error(a(418));s.flags=s.flags&-4097|2,It=!1,Nn=s}}}h(Bu,"ae");function Sp(s){for(s=s.return;s!==null&&s.tag!==5&&s.tag!==3&&s.tag!==13;)s=s.return;Nn=s}h(Sp,"be");function Wo(s){if(!re||s!==Nn)return!1;if(!It)return Sp(s),It=!0,!1;if(s.tag!==3&&(s.tag!==5||Sn(s.type)&&!Me(s.type,s.memoizedProps))){var o=zn;if(o){if(Uu(s)){for(s=zn;s;)s=Y(s);throw Error(a(418))}for(;o;)yp(s,o),o=Y(o)}}if(Sp(s),s.tag===13){if(!re)throw Error(a(316));if(s=s.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));zn=lt(s)}else zn=Nn?Y(s.stateNode):null;return!0}h(Wo,"ce");function Ls(){re&&(zn=Nn=null,Ho=It=!1)}h(Ls,"de");function Vu(s){ui===null?ui=[s]:ui.push(s)}h(Vu,"ee");function Go(s,o,d){if(s=d.ref,s!==null&&typeof s!="function"&&typeof s!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(a(309));var v=d.stateNode}if(!v)throw Error(a(147,s));var S=v,T=""+s;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===T?o.ref:(o=h(function(z){var B=S.refs;B===mp&&(B=S.refs={}),z===null?delete B[T]:B[T]=z},"b"),o._stringRef=T,o)}if(typeof s!="string")throw Error(a(284));if(!d._owner)throw Error(a(290,s))}return s}h(Go,"fe");function ll(s,o){throw s=Object.prototype.toString.call(o),Error(a(31,s==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":s))}h(ll,"ge");function wp(s){var o=s._init;return o(s._payload)}h(wp,"he");function bp(s){function o(J,H){if(s){var K=J.deletions;K===null?(J.deletions=[H],J.flags|=16):K.push(H)}}h(o,"b");function d(J,H){if(!s)return null;for(;H!==null;)o(J,H),H=H.sibling;return null}h(d,"c");function v(J,H){for(J=new Map;H!==null;)H.key!==null?J.set(H.key,H):J.set(H.index,H),H=H.sibling;return J}h(v,"d");function S(J,H){return J=ur(J,H),J.index=0,J.sibling=null,J}h(S,"e");function T(J,H,K){return J.index=K,s?(K=J.alternate,K!==null?(K=K.index,K<H?(J.flags|=2,H):K):(J.flags|=2,H)):(J.flags|=1048576,H)}h(T,"f");function z(J){return s&&J.alternate===null&&(J.flags|=2),J}h(z,"g");function B(J,H,K,Ae){return H===null||H.tag!==6?(H=bh(K,J.mode,Ae),H.return=J,H):(H=S(H,K),H.return=J,H)}h(B,"h");function ne(J,H,K,Ae){var Fe=K.type;return Fe===p?Re(J,H,K.props.children,Ae,K.key):H!==null&&(H.elementType===Fe||typeof Fe=="object"&&Fe!==null&&Fe.$$typeof===b&&wp(Fe)===H.type)?(Ae=S(H,K.props),Ae.ref=Go(J,H,K),Ae.return=J,Ae):(Ae=Ul(K.type,K.key,K.props,null,J.mode,Ae),Ae.ref=Go(J,H,K),Ae.return=J,Ae)}h(ne,"k");function ve(J,H,K,Ae){return H===null||H.tag!==4||H.stateNode.containerInfo!==K.containerInfo||H.stateNode.implementation!==K.implementation?(H=Th(K,J.mode,Ae),H.return=J,H):(H=S(H,K.children||[]),H.return=J,H)}h(ve,"l");function Re(J,H,K,Ae,Fe){return H===null||H.tag!==7?(H=Gr(K,J.mode,Ae,Fe),H.return=J,H):(H=S(H,K),H.return=J,H)}h(Re,"m");function $e(J,H,K){if(typeof H=="string"&&H!==""||typeof H=="number")return H=bh(""+H,J.mode,K),H.return=J,H;if(typeof H=="object"&&H!==null){switch(H.$$typeof){case u:return K=Ul(H.type,H.key,H.props,null,J.mode,K),K.ref=Go(J,null,H),K.return=J,K;case f:return H=Th(H,J.mode,K),H.return=J,H;case b:var Ae=H._init;return $e(J,Ae(H._payload),K)}if(te(H)||L(H))return H=Gr(H,J.mode,K,null),H.return=J,H;ll(J,H)}return null}h($e,"v");function We(J,H,K,Ae){var Fe=H!==null?H.key:null;if(typeof K=="string"&&K!==""||typeof K=="number")return Fe!==null?null:B(J,H,""+K,Ae);if(typeof K=="object"&&K!==null){switch(K.$$typeof){case u:return K.key===Fe?ne(J,H,K,Ae):null;case f:return K.key===Fe?ve(J,H,K,Ae):null;case b:return Fe=K._init,We(J,H,Fe(K._payload),Ae)}if(te(K)||L(K))return Fe!==null?null:Re(J,H,K,Ae,null);ll(J,K)}return null}h(We,"r");function Ct(J,H,K,Ae,Fe){if(typeof Ae=="string"&&Ae!==""||typeof Ae=="number")return J=J.get(K)||null,B(H,J,""+Ae,Fe);if(typeof Ae=="object"&&Ae!==null){switch(Ae.$$typeof){case u:return J=J.get(Ae.key===null?K:Ae.key)||null,ne(H,J,Ae,Fe);case f:return J=J.get(Ae.key===null?K:Ae.key)||null,ve(H,J,Ae,Fe);case b:var ot=Ae._init;return Ct(J,H,K,ot(Ae._payload),Fe)}if(te(Ae)||L(Ae))return J=J.get(K)||null,Re(H,J,Ae,Fe,null);ll(H,Ae)}return null}h(Ct,"z");function ke(J,H,K,Ae){for(var Fe=null,ot=null,et=H,_t=H=0,ln=null;et!==null&&_t<K.length;_t++){et.index>_t?(ln=et,et=null):ln=et.sibling;var yt=We(J,et,K[_t],Ae);if(yt===null){et===null&&(et=ln);break}s&&et&&yt.alternate===null&&o(J,et),H=T(yt,H,_t),ot===null?Fe=yt:ot.sibling=yt,ot=yt,et=ln}if(_t===K.length)return d(J,et),It&&Or(J,_t),Fe;if(et===null){for(;_t<K.length;_t++)et=$e(J,K[_t],Ae),et!==null&&(H=T(et,H,_t),ot===null?Fe=et:ot.sibling=et,ot=et);return It&&Or(J,_t),Fe}for(et=v(J,et);_t<K.length;_t++)ln=Ct(et,J,_t,K[_t],Ae),ln!==null&&(s&&ln.alternate!==null&&et.delete(ln.key===null?_t:ln.key),H=T(ln,H,_t),ot===null?Fe=ln:ot.sibling=ln,ot=ln);return s&&et.forEach(function(hr){return o(J,hr)}),It&&Or(J,_t),Fe}h(ke,"q");function gn(J,H,K,Ae){var Fe=L(K);if(typeof Fe!="function")throw Error(a(150));if(K=Fe.call(K),K==null)throw Error(a(151));for(var ot=Fe=null,et=H,_t=H=0,ln=null,yt=K.next();et!==null&&!yt.done;_t++,yt=K.next()){et.index>_t?(ln=et,et=null):ln=et.sibling;var hr=We(J,et,yt.value,Ae);if(hr===null){et===null&&(et=ln);break}s&&et&&hr.alternate===null&&o(J,et),H=T(hr,H,_t),ot===null?Fe=hr:ot.sibling=hr,ot=hr,et=ln}if(yt.done)return d(J,et),It&&Or(J,_t),Fe;if(et===null){for(;!yt.done;_t++,yt=K.next())yt=$e(J,yt.value,Ae),yt!==null&&(H=T(yt,H,_t),ot===null?Fe=yt:ot.sibling=yt,ot=yt);return It&&Or(J,_t),Fe}for(et=v(J,et);!yt.done;_t++,yt=K.next())yt=Ct(et,J,_t,yt.value,Ae),yt!==null&&(s&&yt.alternate!==null&&et.delete(yt.key===null?_t:yt.key),H=T(yt,H,_t),ot===null?Fe=yt:ot.sibling=yt,ot=yt);return s&&et.forEach(function(iy){return o(J,iy)}),It&&Or(J,_t),Fe}h(gn,"N");function ni(J,H,K,Ae){if(typeof K=="object"&&K!==null&&K.type===p&&K.key===null&&(K=K.props.children),typeof K=="object"&&K!==null){switch(K.$$typeof){case u:e:{for(var Fe=K.key,ot=H;ot!==null;){if(ot.key===Fe){if(Fe=K.type,Fe===p){if(ot.tag===7){d(J,ot.sibling),H=S(ot,K.props.children),H.return=J,J=H;break e}}else if(ot.elementType===Fe||typeof Fe=="object"&&Fe!==null&&Fe.$$typeof===b&&wp(Fe)===ot.type){d(J,ot.sibling),H=S(ot,K.props),H.ref=Go(J,ot,K),H.return=J,J=H;break e}d(J,ot);break}else o(J,ot);ot=ot.sibling}K.type===p?(H=Gr(K.props.children,J.mode,Ae,K.key),H.return=J,J=H):(Ae=Ul(K.type,K.key,K.props,null,J.mode,Ae),Ae.ref=Go(J,H,K),Ae.return=J,J=Ae)}return z(J);case f:e:{for(ot=K.key;H!==null;){if(H.key===ot)if(H.tag===4&&H.stateNode.containerInfo===K.containerInfo&&H.stateNode.implementation===K.implementation){d(J,H.sibling),H=S(H,K.children||[]),H.return=J,J=H;break e}else{d(J,H);break}else o(J,H);H=H.sibling}H=Th(K,J.mode,Ae),H.return=J,J=H}return z(J);case b:return ot=K._init,ni(J,H,ot(K._payload),Ae)}if(te(K))return ke(J,H,K,Ae);if(L(K))return gn(J,H,K,Ae);ll(J,K)}return typeof K=="string"&&K!==""||typeof K=="number"?(K=""+K,H!==null&&H.tag===6?(d(J,H.sibling),H=S(H,K),H.return=J,J=H):(d(J,H),H=bh(K,J.mode,Ae),H.return=J,J=H),z(J)):d(J,H)}return h(ni,"da"),ni}h(bp,"ie");var Rs=bp(!0),Tp=bp(!1),Xo={},Kn=Yn(Xo),qo=Yn(Xo),Is=Yn(Xo);function Ti(s){if(s===Xo)throw Error(a(174));return s}h(Ti,"ue");function Hu(s,o){pt(Is,o),pt(qo,s),pt(Kn,Xo),s=de(o),nt(Kn),pt(Kn,s)}h(Hu,"ve");function Ds(){nt(Kn),nt(qo),nt(Is)}h(Ds,"we");function Ep(s){var o=Ti(Is.current),d=Ti(Kn.current);o=U(d,s.type,o),d!==o&&(pt(qo,s),pt(Kn,o))}h(Ep,"xe");function Wu(s){qo.current===s&&(nt(Kn),nt(qo))}h(Wu,"ye");var Dt=Yn(0);function cl(s){for(var o=s;o!==null;){if(o.tag===13){var d=o.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||qa(d)||Uo(d)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}h(cl,"ze");var Gu=[];function Xu(){for(var s=0;s<Gu.length;s++){var o=Gu[s];we?o._workInProgressVersionPrimary=null:o._workInProgressVersionSecondary=null}Gu.length=0}h(Xu,"Be");var ul=c.ReactCurrentDispatcher,$n=c.ReactCurrentBatchConfig,Ns=0,kt=null,dn=null,an=null,hl=!1,Yo=!1,Zo=0,C_=0;function pn(){throw Error(a(321))}h(pn,"O");function qu(s,o){if(o===null)return!1;for(var d=0;d<o.length&&d<s.length;d++)if(!Si(s[d],o[d]))return!1;return!0}h(qu,"Je");function Yu(s,o,d,v,S,T){if(Ns=T,kt=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,ul.current=s===null||s.memoizedState===null?I_:D_,s=d(v,S),Yo){T=0;do{if(Yo=!1,Zo=0,25<=T)throw Error(a(301));T+=1,an=dn=null,o.updateQueue=null,ul.current=N_,s=d(v,S)}while(Yo)}if(ul.current=gl,o=dn!==null&&dn.next!==null,Ns=0,an=dn=kt=null,hl=!1,o)throw Error(a(300));return s}h(Yu,"Ke");function Zu(){var s=Zo!==0;return Zo=0,s}h(Zu,"Pe");function Ui(){var s={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return an===null?kt.memoizedState=an=s:an=an.next=s,an}h(Ui,"Qe");function Ei(){if(dn===null){var s=kt.alternate;s=s!==null?s.memoizedState:null}else s=dn.next;var o=an===null?kt.memoizedState:an.next;if(o!==null)an=o,dn=s;else{if(s===null)throw Error(a(310));dn=s,s={memoizedState:dn.memoizedState,baseState:dn.baseState,baseQueue:dn.baseQueue,queue:dn.queue,next:null},an===null?kt.memoizedState=an=s:an=an.next=s}return an}h(Ei,"Re");function kr(s,o){return typeof o=="function"?o(s):o}h(kr,"Se");function fl(s){var o=Ei(),d=o.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=s;var v=dn,S=v.baseQueue,T=d.pending;if(T!==null){if(S!==null){var z=S.next;S.next=T.next,T.next=z}v.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,v=v.baseState;var B=z=null,ne=null,ve=T;do{var Re=ve.lane;if((Ns&Re)===Re)ne!==null&&(ne=ne.next={lane:0,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null}),v=ve.hasEagerState?ve.eagerState:s(v,ve.action);else{var $e={lane:Re,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null};ne===null?(B=ne=$e,z=v):ne=ne.next=$e,kt.lanes|=Re,Fs|=Re}ve=ve.next}while(ve!==null&&ve!==T);ne===null?z=v:ne.next=B,Si(v,o.memoizedState)||(Fn=!0),o.memoizedState=v,o.baseState=z,o.baseQueue=ne,d.lastRenderedState=v}if(s=d.interleaved,s!==null){S=s;do T=S.lane,kt.lanes|=T,Fs|=T,S=S.next;while(S!==s)}else S===null&&(d.lanes=0);return[o.memoizedState,d.dispatch]}h(fl,"Te");function dl(s){var o=Ei(),d=o.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=s;var v=d.dispatch,S=d.pending,T=o.memoizedState;if(S!==null){d.pending=null;var z=S=S.next;do T=s(T,z.action),z=z.next;while(z!==S);Si(T,o.memoizedState)||(Fn=!0),o.memoizedState=T,o.baseQueue===null&&(o.baseState=T),d.lastRenderedState=T}return[T,v]}h(dl,"Ue");function Ap(){}h(Ap,"Ve");function Cp(s,o){var d=kt,v=Ei(),S=o(),T=!Si(v.memoizedState,S);if(T&&(v.memoizedState=S,Fn=!0),v=v.queue,jo(Rp.bind(null,d,v,s),[s]),v.getSnapshot!==o||T||an!==null&&an.memoizedState.tag&1){if(d.flags|=2048,Jo(9,Lp.bind(null,d,v,S,o),void 0,null),Yt===null)throw Error(a(349));(Ns&30)!==0||Pp(d,o,S)}return S}h(Cp,"We");function Pp(s,o,d){s.flags|=16384,s={getSnapshot:o,value:d},o=kt.updateQueue,o===null?(o={lastEffect:null,stores:null},kt.updateQueue=o,o.stores=[s]):(d=o.stores,d===null?o.stores=[s]:d.push(s))}h(Pp,"af");function Lp(s,o,d,v){o.value=d,o.getSnapshot=v,Ip(o)&&ei(s,1,-1)}h(Lp,"$e");function Rp(s,o,d){return d(function(){Ip(o)&&ei(s,1,-1)})}h(Rp,"Ye");function Ip(s){var o=s.getSnapshot;s=s.value;try{var d=o();return!Si(s,d)}catch{return!0}}h(Ip,"bf");function Ju(s){var o=Ui();return typeof s=="function"&&(s=s()),o.memoizedState=o.baseState=s,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:kr,lastRenderedState:s},o.queue=s,s=s.dispatch=R_.bind(null,kt,s),[o.memoizedState,s]}h(Ju,"cf");function Jo(s,o,d,v){return s={tag:s,create:o,destroy:d,deps:v,next:null},o=kt.updateQueue,o===null?(o={lastEffect:null,stores:null},kt.updateQueue=o,o.lastEffect=s.next=s):(d=o.lastEffect,d===null?o.lastEffect=s.next=s:(v=d.next,d.next=s,s.next=v,o.lastEffect=s)),s}h(Jo,"Ze");function Dp(){return Ei().memoizedState}h(Dp,"ef");function pl(s,o,d,v){var S=Ui();kt.flags|=s,S.memoizedState=Jo(1|o,d,void 0,v===void 0?null:v)}h(pl,"ff");function ml(s,o,d,v){var S=Ei();v=v===void 0?null:v;var T=void 0;if(dn!==null){var z=dn.memoizedState;if(T=z.destroy,v!==null&&qu(v,z.deps)){S.memoizedState=Jo(o,d,T,v);return}}kt.flags|=s,S.memoizedState=Jo(1|o,d,T,v)}h(ml,"gf");function ju(s,o){return pl(8390656,8,s,o)}h(ju,"hf");function jo(s,o){return ml(2048,8,s,o)}h(jo,"Xe");function Np(s,o){return ml(4,2,s,o)}h(Np,"jf");function zp(s,o){return ml(4,4,s,o)}h(zp,"kf");function Fp(s,o){if(typeof o=="function")return s=s(),o(s),function(){o(null)};if(o!=null)return s=s(),o.current=s,function(){o.current=null}}h(Fp,"lf");function Op(s,o,d){return d=d!=null?d.concat([s]):null,ml(4,4,Fp.bind(null,o,s),d)}h(Op,"mf");function Qu(){}h(Qu,"nf");function kp(s,o){var d=Ei();o=o===void 0?null:o;var v=d.memoizedState;return v!==null&&o!==null&&qu(o,v[1])?v[0]:(d.memoizedState=[s,o],s)}h(kp,"of");function Up(s,o){var d=Ei();o=o===void 0?null:o;var v=d.memoizedState;return v!==null&&o!==null&&qu(o,v[1])?v[0]:(s=s(),d.memoizedState=[s,o],s)}h(Up,"pf");function P_(s,o){var d=xt;xt=d!==0&&4>d?d:4,s(!0);var v=$n.transition;$n.transition={};try{s(!1),o()}finally{xt=d,$n.transition=v}}h(P_,"qf");function Bp(){return Ei().memoizedState}h(Bp,"rf");function L_(s,o,d){var v=lr(s);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},Vp(s)?Hp(o,d):(Wp(s,o,d),d=bn(),s=ei(s,v,d),s!==null&&Gp(s,o,v))}h(L_,"sf");function R_(s,o,d){var v=lr(s),S={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(Vp(s))Hp(o,S);else{Wp(s,o,S);var T=s.alternate;if(s.lanes===0&&(T===null||T.lanes===0)&&(T=o.lastRenderedReducer,T!==null))try{var z=o.lastRenderedState,B=T(z,d);if(S.hasEagerState=!0,S.eagerState=B,Si(B,z))return}catch{}finally{}d=bn(),s=ei(s,v,d),s!==null&&Gp(s,o,v)}}h(R_,"df");function Vp(s){var o=s.alternate;return s===kt||o!==null&&o===kt}h(Vp,"tf");function Hp(s,o){Yo=hl=!0;var d=s.pending;d===null?o.next=o:(o.next=d.next,d.next=o),s.pending=o}h(Hp,"uf");function Wp(s,o,d){Yt!==null&&(s.mode&1)!==0&&(ct&2)===0?(s=o.interleaved,s===null?(d.next=d,bi===null?bi=[o]:bi.push(o)):(d.next=s.next,s.next=d),o.interleaved=d):(s=o.pending,s===null?d.next=d:(d.next=s.next,s.next=d),o.pending=d)}h(Wp,"vf");function Gp(s,o,d){if((d&4194240)!==0){var v=o.lanes;v&=s.pendingLanes,d|=v,o.lanes=d,Tu(s,d)}}h(Gp,"wf");var gl={readContext:Jn,useCallback:pn,useContext:pn,useEffect:pn,useImperativeHandle:pn,useInsertionEffect:pn,useLayoutEffect:pn,useMemo:pn,useReducer:pn,useRef:pn,useState:pn,useDebugValue:pn,useDeferredValue:pn,useTransition:pn,useMutableSource:pn,useSyncExternalStore:pn,useId:pn,unstable_isNewReconciler:!1},I_={readContext:Jn,useCallback:function(s,o){return Ui().memoizedState=[s,o===void 0?null:o],s},useContext:Jn,useEffect:ju,useImperativeHandle:function(s,o,d){return d=d!=null?d.concat([s]):null,pl(4194308,4,Fp.bind(null,o,s),d)},useLayoutEffect:function(s,o){return pl(4194308,4,s,o)},useInsertionEffect:function(s,o){return pl(4,2,s,o)},useMemo:function(s,o){var d=Ui();return o=o===void 0?null:o,s=s(),d.memoizedState=[s,o],s},useReducer:function(s,o,d){var v=Ui();return o=d!==void 0?d(o):o,v.memoizedState=v.baseState=o,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:s,lastRenderedState:o},v.queue=s,s=s.dispatch=L_.bind(null,kt,s),[v.memoizedState,s]},useRef:function(s){var o=Ui();return s={current:s},o.memoizedState=s},useState:Ju,useDebugValue:Qu,useDeferredValue:function(s){var o=Ju(s),d=o[0],v=o[1];return ju(function(){var S=$n.transition;$n.transition={};try{v(s)}finally{$n.transition=S}},[s]),d},useTransition:function(){var s=Ju(!1),o=s[0];return s=P_.bind(null,s[1]),Ui().memoizedState=s,[o,s]},useMutableSource:function(){},useSyncExternalStore:function(s,o,d){var v=kt,S=Ui();if(It){if(d===void 0)throw Error(a(407));d=d()}else{if(d=o(),Yt===null)throw Error(a(349));(Ns&30)!==0||Pp(v,o,d)}S.memoizedState=d;var T={value:d,getSnapshot:o};return S.queue=T,ju(Rp.bind(null,v,T,s),[s]),v.flags|=2048,Jo(9,Lp.bind(null,v,T,d,o),void 0,null),d},useId:function(){var s=Ui(),o=Yt.identifierPrefix;if(It){var d=ki,v=Oi;d=(v&~(1<<32-li(v)-1)).toString(32)+d,o=":"+o+"R"+d,d=Zo++,0<d&&(o+="H"+d.toString(32)),o+=":"}else d=C_++,o=":"+o+"r"+d.toString(32)+":";return s.memoizedState=o},unstable_isNewReconciler:!1},D_={readContext:Jn,useCallback:kp,useContext:Jn,useEffect:jo,useImperativeHandle:Op,useInsertionEffect:Np,useLayoutEffect:zp,useMemo:Up,useReducer:fl,useRef:Dp,useState:function(){return fl(kr)},useDebugValue:Qu,useDeferredValue:function(s){var o=fl(kr),d=o[0],v=o[1];return jo(function(){var S=$n.transition;$n.transition={};try{v(s)}finally{$n.transition=S}},[s]),d},useTransition:function(){var s=fl(kr)[0],o=Ei().memoizedState;return[s,o]},useMutableSource:Ap,useSyncExternalStore:Cp,useId:Bp,unstable_isNewReconciler:!1},N_={readContext:Jn,useCallback:kp,useContext:Jn,useEffect:jo,useImperativeHandle:Op,useInsertionEffect:Np,useLayoutEffect:zp,useMemo:Up,useReducer:dl,useRef:Dp,useState:function(){return dl(kr)},useDebugValue:Qu,useDeferredValue:function(s){var o=dl(kr),d=o[0],v=o[1];return jo(function(){var S=$n.transition;$n.transition={};try{v(s)}finally{$n.transition=S}},[s]),d},useTransition:function(){var s=dl(kr)[0],o=Ei().memoizedState;return[s,o]},useMutableSource:Ap,useSyncExternalStore:Cp,useId:Bp,unstable_isNewReconciler:!1};function Ku(s,o){try{var d="",v=o;do d+=A_(v),v=v.return;while(v);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:s,source:o,stack:S}}h(Ku,"xf");function $u(s,o){try{console.error(o.value)}catch(d){setTimeout(function(){throw d})}}h($u,"yf");var z_=typeof WeakMap=="function"?WeakMap:Map;function Xp(s,o,d){d=Fi(-1,d),d.tag=3,d.payload={element:null};var v=o.value;return d.callback=function(){Il||(Il=!0,vh=v),$u(s,o)},d}h(Xp,"Af");function qp(s,o,d){d=Fi(-1,d),d.tag=3;var v=s.type.getDerivedStateFromError;if(typeof v=="function"){var S=o.value;d.payload=function(){return v(S)},d.callback=function(){$u(s,o)}}var T=s.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){$u(s,o),typeof v!="function"&&(or===null?or=new Set([this]):or.add(this));var z=o.stack;this.componentDidCatch(o.value,{componentStack:z!==null?z:""})}),d}h(qp,"Df");function Yp(s,o,d){var v=s.pingCache;if(v===null){v=s.pingCache=new z_;var S=new Set;v.set(o,S)}else S=v.get(o),S===void 0&&(S=new Set,v.set(o,S));S.has(d)||(S.add(d),s=J_.bind(null,s,o,d),o.then(s,s))}h(Yp,"Ff");function Zp(s){do{var o;if((o=s.tag===13)&&(o=s.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return s;s=s.return}while(s!==null);return null}h(Zp,"Hf");function Jp(s,o,d,v,S){return(s.mode&1)===0?(s===o?s.flags|=65536:(s.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(o=Fi(-1,1),o.tag=2,sr(d,o))),d.lanes|=1),s):(s.flags|=65536,s.lanes=S,s)}h(Jp,"If");function Ai(s){s.flags|=4}h(Ai,"Jf");function jp(s,o){if(s!==null&&s.child===o.child)return!0;if((o.flags&16)!==0)return!1;for(s=o.child;s!==null;){if((s.flags&12854)!==0||(s.subtreeFlags&12854)!==0)return!1;s=s.sibling}return!0}h(jp,"Kf");var Qo,Ko,vl,xl;if(Ze)Qo=h(function(s,o){for(var d=o.child;d!==null;){if(d.tag===5||d.tag===6)Z(s,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===o)break;for(;d.sibling===null;){if(d.return===null||d.return===o)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},"Lf"),Ko=h(function(){},"Mf"),vl=h(function(s,o,d,v,S){if(s=s.memoizedProps,s!==v){var T=o.stateNode,z=Ti(Kn.current);d=pe(T,d,s,v,S,z),(o.updateQueue=d)&&Ai(o)}},"Nf"),xl=h(function(s,o,d,v){d!==v&&Ai(o)},"Of");else if(he){Qo=h(function(s,o,d,v){for(var S=o.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&v&&(T=At(T,S.type,S.memoizedProps,S)),Z(s,T)}else if(S.tag===6)T=S.stateNode,d&&v&&(T=Xn(T,S.memoizedProps,S)),Z(s,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Qo(s,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===o)break;for(;S.sibling===null;){if(S.return===null||S.return===o)return;S=S.return}S.sibling.return=S.return,S=S.sibling}},"Lf");var Qp=h(function(s,o,d,v){for(var S=o.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&v&&(T=At(T,S.type,S.memoizedProps,S)),Bt(s,T)}else if(S.tag===6)T=S.stateNode,d&&v&&(T=Xn(T,S.memoizedProps,S)),Bt(s,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Qp(s,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===o)break;for(;S.sibling===null;){if(S.return===null||S.return===o)return;S=S.return}S.sibling.return=S.return,S=S.sibling}},"Pf");Ko=h(function(s,o){var d=o.stateNode;if(!jp(s,o)){s=d.containerInfo;var v=gt(s);Qp(v,o,!1,!1),d.pendingChildren=v,Ai(o),rn(s,v)}},"Mf"),vl=h(function(s,o,d,v,S){var T=s.stateNode,z=s.memoizedProps;if((s=jp(s,o))&&z===v)o.stateNode=T;else{var B=o.stateNode,ne=Ti(Kn.current),ve=null;z!==v&&(ve=pe(B,d,z,v,S,ne)),s&&ve===null?o.stateNode=T:(T=Oe(T,ve,d,z,v,o,s,B),xe(T,d,v,S,ne)&&Ai(o),o.stateNode=T,s?Ai(o):Qo(T,o,!1,!1))}},"Nf"),xl=h(function(s,o,d,v){d!==v?(s=Ti(Is.current),d=Ti(Kn.current),o.stateNode=ie(v,s,d,o),Ai(o)):o.stateNode=s.stateNode},"Of")}else Ko=h(function(){},"Mf"),vl=h(function(){},"Nf"),xl=h(function(){},"Of");function $o(s,o){if(!It)switch(s.tailMode){case"hidden":o=s.tail;for(var d=null;o!==null;)o.alternate!==null&&(d=o),o=o.sibling;d===null?s.tail=null:d.sibling=null;break;case"collapsed":d=s.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?o||s.tail===null?s.tail=null:s.tail.sibling=null:v.sibling=null}}h($o,"Qf");function mn(s){var o=s.alternate!==null&&s.alternate.child===s.child,d=0,v=0;if(o)for(var S=s.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags&14680064,v|=S.flags&14680064,S.return=s,S=S.sibling;else for(S=s.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags,v|=S.flags,S.return=s,S=S.sibling;return s.subtreeFlags|=v,s.childLanes=d,o}h(mn,"P");function F_(s,o,d){var v=o.pendingProps;switch(ku(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return mn(o),null;case 1:return Pn(o.type)&&Ya(),mn(o),null;case 3:return v=o.stateNode,Ds(),nt(sn),nt(wt),Xu(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(s===null||s.child===null)&&(Wo(o)?Ai(o):s===null||s.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,ui!==null&&(yh(ui),ui=null))),Ko(s,o),mn(o),null;case 5:Wu(o),d=Ti(Is.current);var S=o.type;if(s!==null&&o.stateNode!=null)vl(s,o,S,v,d),s.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!v){if(o.stateNode===null)throw Error(a(166));return mn(o),null}if(s=Ti(Kn.current),Wo(o)){if(!re)throw Error(a(175));s=Ve(o.stateNode,o.type,o.memoizedProps,d,s,o,!Ho),o.updateQueue=s,s!==null&&Ai(o)}else{var T=j(S,v,d,s,o);Qo(T,o,!1,!1),o.stateNode=T,xe(T,S,v,d,s)&&Ai(o)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return mn(o),null;case 6:if(s&&o.stateNode!=null)xl(s,o,s.memoizedProps,v);else{if(typeof v!="string"&&o.stateNode===null)throw Error(a(166));if(s=Ti(Is.current),d=Ti(Kn.current),Wo(o)){if(!re)throw Error(a(176));if(s=o.stateNode,v=o.memoizedProps,(d=Ke(s,v,o,!Ho))&&(S=Nn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:ai(S.stateNode.containerInfo,s,v,T);break;case 5:Ri(S.type,S.memoizedProps,S.stateNode,s,v,T)}d&&Ai(o)}else o.stateNode=ie(v,s,d,o)}return mn(o),null;case 13:if(nt(Dt),v=o.memoizedState,It&&zn!==null&&(o.mode&1)!==0&&(o.flags&128)===0){for(s=zn;s;)s=Y(s);return Ls(),o.flags|=98560,o}if(v!==null&&v.dehydrated!==null){if(v=Wo(o),s===null){if(!v)throw Error(a(318));if(!re)throw Error(a(344));if(s=o.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));rt(s,o)}else Ls(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;return mn(o),null}return ui!==null&&(yh(ui),ui=null),(o.flags&128)!==0?(o.lanes=d,o):(v=v!==null,d=!1,s===null?Wo(o):d=s.memoizedState!==null,v&&!d&&(o.child.flags|=8192,(o.mode&1)!==0&&(s===null||(Dt.current&1)!==0?Kt===0&&(Kt=3):Sh())),o.updateQueue!==null&&(o.flags|=4),mn(o),null);case 4:return Ds(),Ko(s,o),s===null&&De(o.stateNode.containerInfo),mn(o),null;case 10:return Iu(o.type._context),mn(o),null;case 17:return Pn(o.type)&&Ya(),mn(o),null;case 19:if(nt(Dt),S=o.memoizedState,S===null)return mn(o),null;if(v=(o.flags&128)!==0,T=S.rendering,T===null)if(v)$o(S,!1);else{if(Kt!==0||s!==null&&(s.flags&128)!==0)for(s=o.child;s!==null;){if(T=cl(s),T!==null){for(o.flags|=128,$o(S,!1),s=T.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),o.subtreeFlags=0,s=d,v=o.child;v!==null;)d=v,S=s,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),v=v.sibling;return pt(Dt,Dt.current&1|2),o.child}s=s.sibling}S.tail!==null&&on()>gh&&(o.flags|=128,v=!0,$o(S,!1),o.lanes=4194304)}else{if(!v)if(s=cl(T),s!==null){if(o.flags|=128,v=!0,s=s.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),$o(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!It)return mn(o),null}else 2*on()-S.renderingStartTime>gh&&d!==1073741824&&(o.flags|=128,v=!0,$o(S,!1),o.lanes=4194304);S.isBackwards?(T.sibling=o.child,o.child=T):(s=S.last,s!==null?s.sibling=T:o.child=T,S.last=T)}return S.tail!==null?(o=S.tail,S.rendering=o,S.tail=o.sibling,S.renderingStartTime=on(),o.sibling=null,s=Dt.current,pt(Dt,v?s&1|2:s&1),o):(mn(o),null);case 22:case 23:return Mh(),v=o.memoizedState!==null,s!==null&&s.memoizedState!==null!==v&&(o.flags|=8192),v&&(o.mode&1)!==0?(On&1073741824)!==0&&(mn(o),Ze&&o.subtreeFlags&6&&(o.flags|=8192)):mn(o),null;case 24:return null;case 25:return null}throw Error(a(156,o.tag))}h(F_,"Rf");var O_=c.ReactCurrentOwner,Fn=!1;function wn(s,o,d,v){o.child=s===null?Tp(o,null,d,v):Rs(o,s.child,d,v)}h(wn,"R");function Kp(s,o,d,v,S){d=d.render;var T=o.ref;return As(o,S),v=Yu(s,o,d,v,T,S),d=Zu(),s!==null&&!Fn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~S,Bi(s,o,S)):(It&&d&&Ou(o),o.flags|=1,wn(s,o,v,S),o.child)}h(Kp,"Yf");function $p(s,o,d,v,S){if(s===null){var T=d.type;return typeof T=="function"&&!wh(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(o.tag=15,o.type=T,em(s,o,T,v,S)):(s=Ul(d.type,null,v,o,o.mode,S),s.ref=o.ref,s.return=o,o.child=s)}if(T=s.child,(s.lanes&S)===0){var z=T.memoizedProps;if(d=d.compare,d=d!==null?d:el,d(z,v)&&s.ref===o.ref)return Bi(s,o,S)}return o.flags|=1,s=ur(T,v),s.ref=o.ref,s.return=o,o.child=s}h($p,"$f");function em(s,o,d,v,S){if(s!==null&&el(s.memoizedProps,v)&&s.ref===o.ref)if(Fn=!1,(s.lanes&S)!==0)(s.flags&131072)!==0&&(Fn=!0);else return o.lanes=s.lanes,Bi(s,o,S);return eh(s,o,d,v,S)}h(em,"bg");function tm(s,o,d){var v=o.pendingProps,S=v.children,T=s!==null?s.memoizedState:null;if(v.mode==="hidden")if((o.mode&1)===0)o.memoizedState={baseLanes:0,cachePool:null},pt(zs,On),On|=d;else if((d&1073741824)!==0)o.memoizedState={baseLanes:0,cachePool:null},v=T!==null?T.baseLanes:d,pt(zs,On),On|=v;else return s=T!==null?T.baseLanes|d:d,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:s,cachePool:null},o.updateQueue=null,pt(zs,On),On|=s,null;else T!==null?(v=T.baseLanes|d,o.memoizedState=null):v=d,pt(zs,On),On|=v;return wn(s,o,S,d),o.child}h(tm,"dg");function nm(s,o){var d=o.ref;(s===null&&d!==null||s!==null&&s.ref!==d)&&(o.flags|=512,o.flags|=2097152)}h(nm,"fg");function eh(s,o,d,v,S){var T=Pn(d)?Di:wt.current;return T=Ni(o,T),As(o,S),d=Yu(s,o,d,v,T,S),v=Zu(),s!==null&&!Fn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~S,Bi(s,o,S)):(It&&v&&Ou(o),o.flags|=1,wn(s,o,d,S),o.child)}h(eh,"cg");function im(s,o,d,v,S){if(Pn(d)){var T=!0;Za(o)}else T=!1;if(As(o,S),o.stateNode===null)s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),vp(o,d,v),Fu(o,d,v,S),v=!0;else if(s===null){var z=o.stateNode,B=o.memoizedProps;z.props=B;var ne=z.context,ve=d.contextType;typeof ve=="object"&&ve!==null?ve=Jn(ve):(ve=Pn(d)?Di:wt.current,ve=Ni(o,ve));var Re=d.getDerivedStateFromProps,$e=typeof Re=="function"||typeof z.getSnapshotBeforeUpdate=="function";$e||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(B!==v||ne!==ve)&&xp(o,z,v,ve),rr=!1;var We=o.memoizedState;z.state=We,rl(o,v,z,S),ne=o.memoizedState,B!==v||We!==ne||sn.current||rr?(typeof Re=="function"&&(zu(o,d,Re,v),ne=o.memoizedState),(B=rr||gp(o,d,B,v,We,ne,ve))?($e||typeof z.UNSAFE_componentWillMount!="function"&&typeof z.componentWillMount!="function"||(typeof z.componentWillMount=="function"&&z.componentWillMount(),typeof z.UNSAFE_componentWillMount=="function"&&z.UNSAFE_componentWillMount()),typeof z.componentDidMount=="function"&&(o.flags|=4194308)):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=v,o.memoizedState=ne),z.props=v,z.state=ne,z.context=ve,v=B):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),v=!1)}else{z=o.stateNode,fp(s,o),B=o.memoizedProps,ve=o.type===o.elementType?B:ci(o.type,B),z.props=ve,$e=o.pendingProps,We=z.context,ne=d.contextType,typeof ne=="object"&&ne!==null?ne=Jn(ne):(ne=Pn(d)?Di:wt.current,ne=Ni(o,ne));var Ct=d.getDerivedStateFromProps;(Re=typeof Ct=="function"||typeof z.getSnapshotBeforeUpdate=="function")||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(B!==$e||We!==ne)&&xp(o,z,v,ne),rr=!1,We=o.memoizedState,z.state=We,rl(o,v,z,S);var ke=o.memoizedState;B!==$e||We!==ke||sn.current||rr?(typeof Ct=="function"&&(zu(o,d,Ct,v),ke=o.memoizedState),(ve=rr||gp(o,d,ve,v,We,ke,ne)||!1)?(Re||typeof z.UNSAFE_componentWillUpdate!="function"&&typeof z.componentWillUpdate!="function"||(typeof z.componentWillUpdate=="function"&&z.componentWillUpdate(v,ke,ne),typeof z.UNSAFE_componentWillUpdate=="function"&&z.UNSAFE_componentWillUpdate(v,ke,ne)),typeof z.componentDidUpdate=="function"&&(o.flags|=4),typeof z.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof z.componentDidUpdate!="function"||B===s.memoizedProps&&We===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||B===s.memoizedProps&&We===s.memoizedState||(o.flags|=1024),o.memoizedProps=v,o.memoizedState=ke),z.props=v,z.state=ke,z.context=ne,v=ve):(typeof z.componentDidUpdate!="function"||B===s.memoizedProps&&We===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||B===s.memoizedProps&&We===s.memoizedState||(o.flags|=1024),v=!1)}return th(s,o,d,v,T,S)}h(im,"gg");function th(s,o,d,v,S,T){nm(s,o);var z=(o.flags&128)!==0;if(!v&&!z)return S&&ap(o,d,!1),Bi(s,o,T);v=o.stateNode,O_.current=o;var B=z&&typeof d.getDerivedStateFromError!="function"?null:v.render();return o.flags|=1,s!==null&&z?(o.child=Rs(o,s.child,null,T),o.child=Rs(o,null,B,T)):wn(s,o,B,T),o.memoizedState=v.state,S&&ap(o,d,!0),o.child}h(th,"hg");function rm(s){var o=s.stateNode;o.pendingContext?sp(s,o.pendingContext,o.pendingContext!==o.context):o.context&&sp(s,o.context,!1),Hu(s,o.containerInfo)}h(rm,"ig");function sm(s,o,d,v,S){return Ls(),Vu(S),o.flags|=256,wn(s,o,d,v),o.child}h(sm,"jg");var _l={dehydrated:null,treeContext:null,retryLane:0};function yl(s){return{baseLanes:s,cachePool:null}}h(yl,"lg");function om(s,o,d){var v=o.pendingProps,S=Dt.current,T=!1,z=(o.flags&128)!==0,B;if((B=z)||(B=s!==null&&s.memoizedState===null?!1:(S&2)!==0),B?(T=!0,o.flags&=-129):(s===null||s.memoizedState!==null)&&(S|=1),pt(Dt,S&1),s===null)return Bu(o),s=o.memoizedState,s!==null&&(s=s.dehydrated,s!==null)?((o.mode&1)===0?o.lanes=1:Uo(s)?o.lanes=8:o.lanes=1073741824,null):(S=v.children,s=v.fallback,T?(v=o.mode,T=o.child,S={mode:"hidden",children:S},(v&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Bl(S,v,0,null),s=Gr(s,v,d,null),T.return=o,s.return=o,T.sibling=s,o.child=T,o.child.memoizedState=yl(d),o.memoizedState=_l,s):nh(o,S));if(S=s.memoizedState,S!==null){if(B=S.dehydrated,B!==null){if(z)return o.flags&256?(o.flags&=-257,Ml(s,o,d,Error(a(422)))):o.memoizedState!==null?(o.child=s.child,o.flags|=128,null):(T=v.fallback,S=o.mode,v=Bl({mode:"visible",children:v.children},S,0,null),T=Gr(T,S,d,null),T.flags|=2,v.return=o,T.return=o,v.sibling=T,o.child=v,(o.mode&1)!==0&&Rs(o,s.child,null,d),o.child.memoizedState=yl(d),o.memoizedState=_l,T);if((o.mode&1)===0)o=Ml(s,o,d,null);else if(Uo(B))o=Ml(s,o,d,Error(a(419)));else if(v=(d&s.childLanes)!==0,Fn||v){if(v=Yt,v!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}v=(T&(v.suspendedLanes|d))!==0?0:T,v!==0&&v!==S.retryLane&&(S.retryLane=v,ei(s,v,-1))}Sh(),o=Ml(s,o,d,Error(a(421)))}else qa(B)?(o.flags|=128,o.child=s.child,o=j_.bind(null,s),D(B,o),o=null):(d=S.treeContext,re&&(zn=le(B),Nn=o,It=!0,ui=null,Ho=!1,d!==null&&(jn[Qn++]=Oi,jn[Qn++]=ki,jn[Qn++]=Fr,Oi=d.id,ki=d.overflow,Fr=o)),o=nh(o,o.pendingProps.children),o.flags|=4096);return o}return T?(v=lm(s,o,v.children,v.fallback,d),T=o.child,S=s.child.memoizedState,T.memoizedState=S===null?yl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=s.childLanes&~d,o.memoizedState=_l,v):(d=am(s,o,v.children,d),o.memoizedState=null,d)}return T?(v=lm(s,o,v.children,v.fallback,d),T=o.child,S=s.child.memoizedState,T.memoizedState=S===null?yl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=s.childLanes&~d,o.memoizedState=_l,v):(d=am(s,o,v.children,d),o.memoizedState=null,d)}h(om,"mg");function nh(s,o){return o=Bl({mode:"visible",children:o},s.mode,0,null),o.return=s,s.child=o}h(nh,"og");function am(s,o,d,v){var S=s.child;return s=S.sibling,d=ur(S,{mode:"visible",children:d}),(o.mode&1)===0&&(d.lanes=v),d.return=o,d.sibling=null,s!==null&&(v=o.deletions,v===null?(o.deletions=[s],o.flags|=16):v.push(s)),o.child=d}h(am,"sg");function lm(s,o,d,v,S){var T=o.mode;s=s.child;var z=s.sibling,B={mode:"hidden",children:d};return(T&1)===0&&o.child!==s?(d=o.child,d.childLanes=0,d.pendingProps=B,o.deletions=null):(d=ur(s,B),d.subtreeFlags=s.subtreeFlags&14680064),z!==null?v=ur(z,v):(v=Gr(v,T,S,null),v.flags|=2),v.return=o,d.return=o,d.sibling=v,o.child=d,v}h(lm,"rg");function Ml(s,o,d,v){return v!==null&&Vu(v),Rs(o,s.child,null,d),s=nh(o,o.pendingProps.children),s.flags|=2,o.memoizedState=null,s}h(Ml,"pg");function cm(s,o,d){s.lanes|=o;var v=s.alternate;v!==null&&(v.lanes|=o),Du(s.return,o,d)}h(cm,"tg");function ih(s,o,d,v,S){var T=s.memoizedState;T===null?s.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:S}:(T.isBackwards=o,T.rendering=null,T.renderingStartTime=0,T.last=v,T.tail=d,T.tailMode=S)}h(ih,"ug");function um(s,o,d){var v=o.pendingProps,S=v.revealOrder,T=v.tail;if(wn(s,o,v.children,d),v=Dt.current,(v&2)!==0)v=v&1|2,o.flags|=128;else{if(s!==null&&(s.flags&128)!==0)e:for(s=o.child;s!==null;){if(s.tag===13)s.memoizedState!==null&&cm(s,d,o);else if(s.tag===19)cm(s,d,o);else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===o)break e;for(;s.sibling===null;){if(s.return===null||s.return===o)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}v&=1}if(pt(Dt,v),(o.mode&1)===0)o.memoizedState=null;else switch(S){case"forwards":for(d=o.child,S=null;d!==null;)s=d.alternate,s!==null&&cl(s)===null&&(S=d),d=d.sibling;d=S,d===null?(S=o.child,o.child=null):(S=d.sibling,d.sibling=null),ih(o,!1,S,d,T);break;case"backwards":for(d=null,S=o.child,o.child=null;S!==null;){if(s=S.alternate,s!==null&&cl(s)===null){o.child=S;break}s=S.sibling,S.sibling=d,d=S,S=s}ih(o,!0,d,null,T);break;case"together":ih(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}h(um,"vg");function Bi(s,o,d){if(s!==null&&(o.dependencies=s.dependencies),Fs|=o.lanes,(d&o.childLanes)===0)return null;if(s!==null&&o.child!==s.child)throw Error(a(153));if(o.child!==null){for(s=o.child,d=ur(s,s.pendingProps),o.child=d,d.return=o;s.sibling!==null;)s=s.sibling,d=d.sibling=ur(s,s.pendingProps),d.return=o;d.sibling=null}return o.child}h(Bi,"Zf");function k_(s,o,d){switch(o.tag){case 3:rm(o),Ls();break;case 5:Ep(o);break;case 1:Pn(o.type)&&Za(o);break;case 4:Hu(o,o.stateNode.containerInfo);break;case 10:hp(o,o.type._context,o.memoizedProps.value);break;case 13:var v=o.memoizedState;if(v!==null)return v.dehydrated!==null?(pt(Dt,Dt.current&1),o.flags|=128,null):(d&o.child.childLanes)!==0?om(s,o,d):(pt(Dt,Dt.current&1),s=Bi(s,o,d),s!==null?s.sibling:null);pt(Dt,Dt.current&1);break;case 19:if(v=(d&o.childLanes)!==0,(s.flags&128)!==0){if(v)return um(s,o,d);o.flags|=128}var S=o.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),pt(Dt,Dt.current),v)break;return null;case 22:case 23:return o.lanes=0,tm(s,o,d)}return Bi(s,o,d)}h(k_,"wg");function U_(s,o){switch(ku(o),o.tag){case 1:return Pn(o.type)&&Ya(),s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 3:return Ds(),nt(sn),nt(wt),Xu(),s=o.flags,(s&65536)!==0&&(s&128)===0?(o.flags=s&-65537|128,o):null;case 5:return Wu(o),null;case 13:if(nt(Dt),s=o.memoizedState,s!==null&&s.dehydrated!==null){if(o.alternate===null)throw Error(a(340));Ls()}return s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 19:return nt(Dt),null;case 4:return Ds(),null;case 10:return Iu(o.type._context),null;case 22:case 23:return Mh(),null;case 24:return null;default:return null}}h(U_,"xg");var Sl=!1,Ur=!1,B_=typeof WeakSet=="function"?WeakSet:Set,Te=null;function wl(s,o){var d=s.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){In(s,o,v)}else d.current=null}h(wl,"Bg");function rh(s,o,d){try{d()}catch(v){In(s,o,v)}}h(rh,"Cg");var hm=!1;function V_(s,o){for(ee(s.containerInfo),Te=o;Te!==null;)if(s=Te,o=s.child,(s.subtreeFlags&1028)!==0&&o!==null)o.return=s,Te=o;else for(;Te!==null;){s=Te;try{var d=s.alternate;if((s.flags&1024)!==0)switch(s.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,S=d.memoizedState,T=s.stateNode,z=T.getSnapshotBeforeUpdate(s.elementType===s.type?v:ci(s.type,v),S);T.__reactInternalSnapshotBeforeUpdate=z}break;case 3:Ze&&Pe(s.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(B){In(s,s.return,B)}if(o=s.sibling,o!==null){o.return=s.return,Te=o;break}Te=s.return}return d=hm,hm=!1,d}h(V_,"Eg");function Br(s,o,d){var v=o.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var S=v=v.next;do{if((S.tag&s)===s){var T=S.destroy;S.destroy=void 0,T!==void 0&&rh(o,d,T)}S=S.next}while(S!==v)}}h(Br,"Fg");function ea(s,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var d=o=o.next;do{if((d.tag&s)===s){var v=d.create;d.destroy=v()}d=d.next}while(d!==o)}}h(ea,"Gg");function sh(s){var o=s.ref;if(o!==null){var d=s.stateNode;switch(s.tag){case 5:s=ae(d);break;default:s=d}typeof o=="function"?o(s):o.current=s}}h(sh,"Hg");function fm(s,o,d){if(Mi&&typeof Mi.onCommitFiberUnmount=="function")try{Mi.onCommitFiberUnmount(Ka,o)}catch{}switch(o.tag){case 0:case 11:case 14:case 15:if(s=o.updateQueue,s!==null&&(s=s.lastEffect,s!==null)){var v=s=s.next;do{var S=v,T=S.destroy;S=S.tag,T!==void 0&&((S&2)!==0||(S&4)!==0)&&rh(o,d,T),v=v.next}while(v!==s)}break;case 1:if(wl(o,d),s=o.stateNode,typeof s.componentWillUnmount=="function")try{s.props=o.memoizedProps,s.state=o.memoizedState,s.componentWillUnmount()}catch(z){In(o,d,z)}break;case 5:wl(o,d);break;case 4:Ze?xm(s,o,d):he&&he&&(o=o.stateNode.containerInfo,d=gt(o),yi(o,d))}}h(fm,"Ig");function dm(s,o,d){for(var v=o;;)if(fm(s,v,d),v.child===null||Ze&&v.tag===4){if(v===o)break;for(;v.sibling===null;){if(v.return===null||v.return===o)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}h(dm,"Kg");function pm(s){var o=s.alternate;o!==null&&(s.alternate=null,pm(o)),s.child=null,s.deletions=null,s.sibling=null,s.tag===5&&(o=s.stateNode,o!==null&&Qe(o)),s.stateNode=null,s.return=null,s.dependencies=null,s.memoizedProps=null,s.memoizedState=null,s.pendingProps=null,s.stateNode=null,s.updateQueue=null}h(pm,"Lg");function mm(s){return s.tag===5||s.tag===3||s.tag===4}h(mm,"Mg");function gm(s){e:for(;;){for(;s.sibling===null;){if(s.return===null||mm(s.return))return null;s=s.return}for(s.sibling.return=s.return,s=s.sibling;s.tag!==5&&s.tag!==6&&s.tag!==18;){if(s.flags&2||s.child===null||s.tag===4)continue e;s.child.return=s,s=s.child}if(!(s.flags&2))return s.stateNode}}h(gm,"Ng");function vm(s){if(Ze){e:{for(var o=s.return;o!==null;){if(mm(o))break e;o=o.return}throw Error(a(160))}var d=o;switch(d.tag){case 5:o=d.stateNode,d.flags&32&&(Et(o),d.flags&=-33),d=gm(s),ah(s,d,o);break;case 3:case 4:o=d.stateNode.containerInfo,d=gm(s),oh(s,d,o);break;default:throw Error(a(161))}}}h(vm,"Og");function oh(s,o,d){var v=s.tag;if(v===5||v===6)s=s.stateNode,o?qe(d,s,o):Ce(d,s);else if(v!==4&&(s=s.child,s!==null))for(oh(s,o,d),s=s.sibling;s!==null;)oh(s,o,d),s=s.sibling}h(oh,"Qg");function ah(s,o,d){var v=s.tag;if(v===5||v===6)s=s.stateNode,o?ze(d,s,o):je(d,s);else if(v!==4&&(s=s.child,s!==null))for(ah(s,o,d),s=s.sibling;s!==null;)ah(s,o,d),s=s.sibling}h(ah,"Pg");function xm(s,o,d){for(var v=o,S=!1,T,z;;){if(!S){S=v.return;e:for(;;){if(S===null)throw Error(a(160));switch(T=S.stateNode,S.tag){case 5:z=!1;break e;case 3:T=T.containerInfo,z=!0;break e;case 4:T=T.containerInfo,z=!0;break e}S=S.return}S=!0}if(v.tag===5||v.tag===6)dm(s,v,d),z?dt(T,v.stateNode):Be(T,v.stateNode);else if(v.tag===18)z?Ft(T,v.stateNode):ht(T,v.stateNode);else if(v.tag===4){if(v.child!==null){T=v.stateNode.containerInfo,z=!0,v.child.return=v,v=v.child;continue}}else if(fm(s,v,d),v.child!==null){v.child.return=v,v=v.child;continue}if(v===o)break;for(;v.sibling===null;){if(v.return===null||v.return===o)return;v=v.return,v.tag===4&&(S=!1)}v.sibling.return=v.return,v=v.sibling}}h(xm,"Jg");function lh(s,o){if(Ze){switch(o.tag){case 0:case 11:case 14:case 15:Br(3,o,o.return),ea(3,o),Br(5,o,o.return);return;case 1:return;case 5:var d=o.stateNode;if(d!=null){var v=o.memoizedProps;s=s!==null?s.memoizedProps:v;var S=o.type,T=o.updateQueue;o.updateQueue=null,T!==null&&Je(d,T,S,s,v,o)}return;case 6:if(o.stateNode===null)throw Error(a(162));d=o.memoizedProps,ue(o.stateNode,s!==null?s.memoizedProps:d,d);return;case 3:re&&s!==null&&s.memoizedState.isDehydrated&&ft(o.stateNode.containerInfo);return;case 12:return;case 13:bl(o);return;case 19:bl(o);return;case 17:return}throw Error(a(163))}switch(o.tag){case 0:case 11:case 14:case 15:Br(3,o,o.return),ea(3,o),Br(5,o,o.return);return;case 12:return;case 13:bl(o);return;case 19:bl(o);return;case 3:re&&s!==null&&s.memoizedState.isDehydrated&&ft(o.stateNode.containerInfo);break;case 22:case 23:return}e:if(he){switch(o.tag){case 1:case 5:case 6:break e;case 3:case 4:o=o.stateNode,yi(o.containerInfo,o.pendingChildren);break e}throw Error(a(163))}}h(lh,"Rg");function bl(s){var o=s.updateQueue;if(o!==null){s.updateQueue=null;var d=s.stateNode;d===null&&(d=s.stateNode=new B_),o.forEach(function(v){var S=Q_.bind(null,s,v);d.has(v)||(d.add(v),v.then(S,S))})}}h(bl,"Sg");function H_(s,o){for(Te=o;Te!==null;){o=Te;var d=o.deletions;if(d!==null)for(var v=0;v<d.length;v++){var S=d[v];try{var T=s;Ze?xm(T,S,o):dm(T,S,o);var z=S.alternate;z!==null&&(z.return=null),S.return=null}catch(Fe){In(S,o,Fe)}}if(d=o.child,(o.subtreeFlags&12854)!==0&&d!==null)d.return=o,Te=d;else for(;Te!==null;){o=Te;try{var B=o.flags;if(B&32&&Ze&&Et(o.stateNode),B&512){var ne=o.alternate;if(ne!==null){var ve=ne.ref;ve!==null&&(typeof ve=="function"?ve(null):ve.current=null)}}if(B&8192)switch(o.tag){case 13:if(o.memoizedState!==null){var Re=o.alternate;(Re===null||Re.memoizedState===null)&&(mh=on())}break;case 22:var $e=o.memoizedState!==null,We=o.alternate,Ct=We!==null&&We.memoizedState!==null;if(d=o,Ze){e:if(v=d,S=$e,T=null,Ze)for(var ke=v;;){if(ke.tag===5){if(T===null){T=ke;var gn=ke.stateNode;S?qt(gn):oe(ke.stateNode,ke.memoizedProps)}}else if(ke.tag===6){if(T===null){var ni=ke.stateNode;S?V(ni):me(ni,ke.memoizedProps)}}else if((ke.tag!==22&&ke.tag!==23||ke.memoizedState===null||ke===v)&&ke.child!==null){ke.child.return=ke,ke=ke.child;continue}if(ke===v)break;for(;ke.sibling===null;){if(ke.return===null||ke.return===v)break e;T===ke&&(T=null),ke=ke.return}T===ke&&(T=null),ke.sibling.return=ke.return,ke=ke.sibling}}if($e&&!Ct&&(d.mode&1)!==0){Te=d;for(var J=d.child;J!==null;){for(d=Te=J;Te!==null;){v=Te;var H=v.child;switch(v.tag){case 0:case 11:case 14:case 15:Br(4,v,v.return);break;case 1:wl(v,v.return);var K=v.stateNode;if(typeof K.componentWillUnmount=="function"){var Ae=v.return;try{K.props=v.memoizedProps,K.state=v.memoizedState,K.componentWillUnmount()}catch(Fe){In(v,Ae,Fe)}}break;case 5:wl(v,v.return);break;case 22:if(v.memoizedState!==null){Mm(d);continue}}H!==null?(H.return=v,Te=H):Mm(d)}J=J.sibling}}}switch(B&4102){case 2:vm(o),o.flags&=-3;break;case 6:vm(o),o.flags&=-3,lh(o.alternate,o);break;case 4096:o.flags&=-4097;break;case 4100:o.flags&=-4097,lh(o.alternate,o);break;case 4:lh(o.alternate,o)}}catch(Fe){In(o,o.return,Fe)}if(d=o.sibling,d!==null){d.return=o.return,Te=d;break}Te=o.return}}}h(H_,"Ug");function W_(s,o,d){Te=s,_m(s)}h(W_,"Xg");function _m(s,o,d){for(var v=(s.mode&1)!==0;Te!==null;){var S=Te,T=S.child;if(S.tag===22&&v){var z=S.memoizedState!==null||Sl;if(!z){var B=S.alternate,ne=B!==null&&B.memoizedState!==null||Ur;B=Sl;var ve=Ur;if(Sl=z,(Ur=ne)&&!ve)for(Te=S;Te!==null;)z=Te,ne=z.child,z.tag===22&&z.memoizedState!==null?Sm(S):ne!==null?(ne.return=z,Te=ne):Sm(S);for(;T!==null;)Te=T,_m(T),T=T.sibling;Te=S,Sl=B,Ur=ve}ym(s)}else(S.subtreeFlags&8772)!==0&&T!==null?(T.return=S,Te=T):ym(s)}}h(_m,"Yg");function ym(s){for(;Te!==null;){var o=Te;if((o.flags&8772)!==0){var d=o.alternate;try{if((o.flags&8772)!==0)switch(o.tag){case 0:case 11:case 15:Ur||ea(5,o);break;case 1:var v=o.stateNode;if(o.flags&4&&!Ur)if(d===null)v.componentDidMount();else{var S=o.elementType===o.type?d.memoizedProps:ci(o.type,d.memoizedProps);v.componentDidUpdate(S,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var T=o.updateQueue;T!==null&&pp(o,T,v);break;case 3:var z=o.updateQueue;if(z!==null){if(d=null,o.child!==null)switch(o.child.tag){case 5:d=ae(o.child.stateNode);break;case 1:d=o.child.stateNode}pp(o,z,d)}break;case 5:var B=o.stateNode;d===null&&o.flags&4&&Ue(B,o.type,o.memoizedProps,o);break;case 6:break;case 4:break;case 12:break;case 13:if(re&&o.memoizedState===null){var ne=o.alternate;if(ne!==null){var ve=ne.memoizedState;if(ve!==null){var Re=ve.dehydrated;Re!==null&&ut(Re)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}Ur||o.flags&512&&sh(o)}catch($e){In(o,o.return,$e)}}if(o===s){Te=null;break}if(d=o.sibling,d!==null){d.return=o.return,Te=d;break}Te=o.return}}h(ym,"$g");function Mm(s){for(;Te!==null;){var o=Te;if(o===s){Te=null;break}var d=o.sibling;if(d!==null){d.return=o.return,Te=d;break}Te=o.return}}h(Mm,"Wg");function Sm(s){for(;Te!==null;){var o=Te;try{switch(o.tag){case 0:case 11:case 15:var d=o.return;try{ea(4,o)}catch(ne){In(o,d,ne)}break;case 1:var v=o.stateNode;if(typeof v.componentDidMount=="function"){var S=o.return;try{v.componentDidMount()}catch(ne){In(o,S,ne)}}var T=o.return;try{sh(o)}catch(ne){In(o,T,ne)}break;case 5:var z=o.return;try{sh(o)}catch(ne){In(o,z,ne)}}}catch(ne){In(o,o.return,ne)}if(o===s){Te=null;break}var B=o.sibling;if(B!==null){B.return=o.return,Te=B;break}Te=o.return}}h(Sm,"Zg");var Tl=0,El=1,Al=2,Cl=3,Pl=4;if(typeof Symbol=="function"&&Symbol.for){var ta=Symbol.for;Tl=ta("selector.component"),El=ta("selector.has_pseudo_class"),Al=ta("selector.role"),Cl=ta("selector.test_id"),Pl=ta("selector.text")}function ch(s){var o=ye(s);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(a(364));return o}if(s=St(s),s===null)throw Error(a(362));return s.stateNode.current}h(ch,"gh");function uh(s,o){switch(o.$$typeof){case Tl:if(s.type===o.value)return!0;break;case El:e:{o=o.value,s=[s,0];for(var d=0;d<s.length;){var v=s[d++],S=s[d++],T=o[S];if(v.tag!==5||!$(v)){for(;T!=null&&uh(v,T);)S++,T=o[S];if(S===o.length){o=!0;break e}else for(v=v.child;v!==null;)s.push(v,S),v=v.sibling}}o=!1}return o;case Al:if(s.tag===5&&ge(s.stateNode,o.value))return!0;break;case Pl:if((s.tag===5||s.tag===6)&&(s=R(s),s!==null&&0<=s.indexOf(o.value)))return!0;break;case Cl:if(s.tag===5&&(s=s.memoizedProps["data-testname"],typeof s=="string"&&s.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}h(uh,"hh");function hh(s){switch(s.$$typeof){case Tl:return"<"+(O(s.value)||"Unknown")+">";case El:return":has("+(hh(s)||"")+")";case Al:return'[role="'+s.value+'"]';case Pl:return'"'+s.value+'"';case Cl:return'[data-testname="'+s.value+'"]';default:throw Error(a(365))}}h(hh,"ih");function wm(s,o){var d=[];s=[s,0];for(var v=0;v<s.length;){var S=s[v++],T=s[v++],z=o[T];if(S.tag!==5||!$(S)){for(;z!=null&&uh(S,z);)T++,z=o[T];if(T===o.length)d.push(S);else for(S=S.child;S!==null;)s.push(S,T),S=S.sibling}}return d}h(wm,"jh");function fh(s,o){if(!Mt)throw Error(a(363));s=ch(s),s=wm(s,o),o=[],s=Array.from(s);for(var d=0;d<s.length;){var v=s[d++];if(v.tag===5)$(v)||o.push(v.stateNode);else for(v=v.child;v!==null;)s.push(v),v=v.sibling}return o}h(fh,"kh");var G_=Math.ceil,Ll=c.ReactCurrentDispatcher,dh=c.ReactCurrentOwner,Vt=c.ReactCurrentBatchConfig,ct=0,Yt=null,Zt=null,fn=0,On=0,zs=Yn(0),Kt=0,na=null,Fs=0,Rl=0,ph=0,ia=null,Ln=null,mh=0,gh=1/0;function Os(){gh=on()+500}h(Os,"sh");var Il=!1,vh=null,or=null,Dl=!1,ar=null,Nl=0,ra=0,xh=null,zl=-1,Fl=0;function bn(){return(ct&6)!==0?on():zl!==-1?zl:zl=on()}h(bn,"H");function lr(s){return(s.mode&1)===0?1:(ct&2)!==0&&fn!==0?fn&-fn:E_.transition!==null?(Fl===0&&(s=Ja,Ja<<=1,(Ja&4194240)===0&&(Ja=64),Fl=s),Fl):(s=xt,s!==0?s:be())}h(lr,"zd");function ei(s,o,d){if(50<ra)throw ra=0,xh=null,Error(a(185));var v=Ol(s,o);return v===null?null:(Vo(v,o,d),((ct&2)===0||v!==Yt)&&(v===Yt&&((ct&2)===0&&(Rl|=o),Kt===4&&cr(v,fn)),Rn(v,d),o===1&&ct===0&&(s.mode&1)===0&&(Os(),$a&&wi())),v)}h(ei,"Ad");function Ol(s,o){s.lanes|=o;var d=s.alternate;for(d!==null&&(d.lanes|=o),d=s,s=s.return;s!==null;)s.childLanes|=o,d=s.alternate,d!==null&&(d.childLanes|=o),d=s,s=s.return;return d.tag===3?d.stateNode:null}h(Ol,"Ah");function Rn(s,o){var d=s.callbackNode;v_(s,o);var v=Qa(s,s===Yt?fn:0);if(v===0)d!==null&&cp(d),s.callbackNode=null,s.callbackPriority=0;else if(o=v&-v,s.callbackPriority!==o){if(d!=null&&cp(d),o===1)s.tag===0?T_(Tm.bind(null,s)):up(Tm.bind(null,s)),Xe?He(function(){ct===0&&wi()}):Eu(Au,wi),d=null;else{switch(lp(v)){case 1:d=Au;break;case 4:d=M_;break;case 16:d=Cu;break;case 536870912:d=S_;break;default:d=Cu}d=Nm(d,bm.bind(null,s))}s.callbackPriority=o,s.callbackNode=d}}h(Rn,"Z");function bm(s,o){if(zl=-1,Fl=0,(ct&6)!==0)throw Error(a(327));var d=s.callbackNode;if(Wr()&&s.callbackNode!==d)return null;var v=Qa(s,s===Yt?fn:0);if(v===0)return null;if((v&30)!==0||(v&s.expiredLanes)!==0||o)o=kl(s,v);else{o=v;var S=ct;ct|=2;var T=Cm();(Yt!==s||fn!==o)&&(Os(),Vr(s,o));do try{Y_();break}catch(B){Am(s,B)}while(1);Ru(),Ll.current=T,ct=S,Zt!==null?o=0:(Yt=null,fn=0,o=Kt)}if(o!==0){if(o===2&&(S=wu(s),S!==0&&(v=S,o=_h(s,S))),o===1)throw d=na,Vr(s,0),cr(s,v),Rn(s,on()),d;if(o===6)cr(s,v);else{if(S=s.current.alternate,(v&30)===0&&!X_(S)&&(o=kl(s,v),o===2&&(T=wu(s),T!==0&&(v=T,o=_h(s,T))),o===1))throw d=na,Vr(s,0),cr(s,v),Rn(s,on()),d;switch(s.finishedWork=S,s.finishedLanes=v,o){case 0:case 1:throw Error(a(345));case 2:Hr(s,Ln);break;case 3:if(cr(s,v),(v&130023424)===v&&(o=mh+500-on(),10<o)){if(Qa(s,0)!==0)break;if(S=s.suspendedLanes,(S&v)!==v){bn(),s.pingedLanes|=s.suspendedLanes&S;break}s.timeoutHandle=Ge(Hr.bind(null,s,Ln),o);break}Hr(s,Ln);break;case 4:if(cr(s,v),(v&4194240)===v)break;for(o=s.eventTimes,S=-1;0<v;){var z=31-li(v);T=1<<z,z=o[z],z>S&&(S=z),v&=~T}if(v=S,v=on()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*G_(v/1960))-v,10<v){s.timeoutHandle=Ge(Hr.bind(null,s,Ln),v);break}Hr(s,Ln);break;case 5:Hr(s,Ln);break;default:throw Error(a(329))}}}return Rn(s,on()),s.callbackNode===d?bm.bind(null,s):null}h(bm,"Eh");function _h(s,o){var d=ia;return s.current.memoizedState.isDehydrated&&(Vr(s,o).flags|=256),s=kl(s,o),s!==2&&(o=Ln,Ln=d,o!==null&&yh(o)),s}h(_h,"Lh");function yh(s){Ln===null?Ln=s:Ln.push.apply(Ln,s)}h(yh,"Sf");function X_(s){for(var o=s;;){if(o.flags&16384){var d=o.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var S=d[v],T=S.getSnapshot;S=S.value;try{if(!Si(T(),S))return!1}catch{return!1}}}if(d=o.child,o.subtreeFlags&16384&&d!==null)d.return=o,o=d;else{if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}h(X_,"Mh");function cr(s,o){for(o&=~ph,o&=~Rl,s.suspendedLanes|=o,s.pingedLanes&=~o,s=s.expirationTimes;0<o;){var d=31-li(o),v=1<<d;s[d]=-1,o&=~v}}h(cr,"Bh");function Tm(s){if((ct&6)!==0)throw Error(a(327));Wr();var o=Qa(s,0);if((o&1)===0)return Rn(s,on()),null;var d=kl(s,o);if(s.tag!==0&&d===2){var v=wu(s);v!==0&&(o=v,d=_h(s,v))}if(d===1)throw d=na,Vr(s,0),cr(s,o),Rn(s,on()),d;if(d===6)throw Error(a(345));return s.finishedWork=s.current.alternate,s.finishedLanes=o,Hr(s,Ln),Rn(s,on()),null}h(Tm,"Ch");function Em(s){ar!==null&&ar.tag===0&&(ct&6)===0&&Wr();var o=ct;ct|=1;var d=Vt.transition,v=xt;try{if(Vt.transition=null,xt=1,s)return s()}finally{xt=v,Vt.transition=d,ct=o,(ct&6)===0&&wi()}}h(Em,"Oh");function Mh(){On=zs.current,nt(zs)}h(Mh,"Vf");function Vr(s,o){s.finishedWork=null,s.finishedLanes=0;var d=s.timeoutHandle;if(d!==Ye&&(s.timeoutHandle=Ye,Ie(d)),Zt!==null)for(d=Zt.return;d!==null;){var v=d;switch(ku(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&Ya();break;case 3:Ds(),nt(sn),nt(wt),Xu();break;case 5:Wu(v);break;case 4:Ds();break;case 13:nt(Dt);break;case 19:nt(Dt);break;case 10:Iu(v.type._context);break;case 22:case 23:Mh()}d=d.return}if(Yt=s,Zt=s=ur(s.current,null),fn=On=o,Kt=0,na=null,ph=Rl=Fs=0,Ln=ia=null,bi!==null){for(o=0;o<bi.length;o++)if(d=bi[o],v=d.interleaved,v!==null){d.interleaved=null;var S=v.next,T=d.pending;if(T!==null){var z=T.next;T.next=S,v.next=z}d.pending=v}bi=null}return s}h(Vr,"Ih");function Am(s,o){do{var d=Zt;try{if(Ru(),ul.current=gl,hl){for(var v=kt.memoizedState;v!==null;){var S=v.queue;S!==null&&(S.pending=null),v=v.next}hl=!1}if(Ns=0,an=dn=kt=null,Yo=!1,Zo=0,dh.current=null,d===null||d.return===null){Kt=1,na=o,Zt=null;break}e:{var T=s,z=d.return,B=d,ne=o;if(o=fn,B.flags|=32768,ne!==null&&typeof ne=="object"&&typeof ne.then=="function"){var ve=ne,Re=B,$e=Re.tag;if((Re.mode&1)===0&&($e===0||$e===11||$e===15)){var We=Re.alternate;We?(Re.updateQueue=We.updateQueue,Re.memoizedState=We.memoizedState,Re.lanes=We.lanes):(Re.updateQueue=null,Re.memoizedState=null)}var Ct=Zp(z);if(Ct!==null){Ct.flags&=-257,Jp(Ct,z,B,T,o),Ct.mode&1&&Yp(T,ve,o),o=Ct,ne=ve;var ke=o.updateQueue;if(ke===null){var gn=new Set;gn.add(ne),o.updateQueue=gn}else ke.add(ne);break e}else{if((o&1)===0){Yp(T,ve,o),Sh();break e}ne=Error(a(426))}}else if(It&&B.mode&1){var ni=Zp(z);if(ni!==null){(ni.flags&65536)===0&&(ni.flags|=256),Jp(ni,z,B,T,o),Vu(ne);break e}}T=ne,Kt!==4&&(Kt=2),ia===null?ia=[T]:ia.push(T),ne=Ku(ne,B),B=z;do{switch(B.tag){case 3:B.flags|=65536,o&=-o,B.lanes|=o;var J=Xp(B,ne,o);dp(B,J);break e;case 1:T=ne;var H=B.type,K=B.stateNode;if((B.flags&128)===0&&(typeof H.getDerivedStateFromError=="function"||K!==null&&typeof K.componentDidCatch=="function"&&(or===null||!or.has(K)))){B.flags|=65536,o&=-o,B.lanes|=o;var Ae=qp(B,T,o);dp(B,Ae);break e}}B=B.return}while(B!==null)}Lm(d)}catch(Fe){o=Fe,Zt===d&&d!==null&&(Zt=d=d.return);continue}break}while(1)}h(Am,"Kh");function Cm(){var s=Ll.current;return Ll.current=gl,s===null?gl:s}h(Cm,"Hh");function Sh(){(Kt===0||Kt===3||Kt===2)&&(Kt=4),Yt===null||(Fs&268435455)===0&&(Rl&268435455)===0||cr(Yt,fn)}h(Sh,"Tf");function kl(s,o){var d=ct;ct|=2;var v=Cm();Yt===s&&fn===o||Vr(s,o);do try{q_();break}catch(S){Am(s,S)}while(1);if(Ru(),ct=d,Ll.current=v,Zt!==null)throw Error(a(261));return Yt=null,fn=0,Kt}h(kl,"Gh");function q_(){for(;Zt!==null;)Pm(Zt)}h(q_,"Qh");function Y_(){for(;Zt!==null&&!__();)Pm(Zt)}h(Y_,"Jh");function Pm(s){var o=Dm(s.alternate,s,On);s.memoizedProps=s.pendingProps,o===null?Lm(s):Zt=o,dh.current=null}h(Pm,"Rh");function Lm(s){var o=s;do{var d=o.alternate;if(s=o.return,(o.flags&32768)===0){if(d=F_(d,o,On),d!==null){Zt=d;return}}else{if(d=U_(d,o),d!==null){d.flags&=32767,Zt=d;return}if(s!==null)s.flags|=32768,s.subtreeFlags=0,s.deletions=null;else{Kt=6,Zt=null;return}}if(o=o.sibling,o!==null){Zt=o;return}Zt=o=s}while(o!==null);Kt===0&&(Kt=5)}h(Lm,"Ph");function Hr(s,o){var d=xt,v=Vt.transition;try{Vt.transition=null,xt=1,Z_(s,o,d)}finally{Vt.transition=v,xt=d}return null}h(Hr,"Nh");function Z_(s,o,d){do Wr();while(ar!==null);if((ct&6)!==0)throw Error(a(327));var v=s.finishedWork,S=s.finishedLanes;if(v===null)return null;if(s.finishedWork=null,s.finishedLanes=0,v===s.current)throw Error(a(177));s.callbackNode=null,s.callbackPriority=0;var T=v.lanes|v.childLanes;if(x_(s,T),s===Yt&&(Zt=Yt=null,fn=0),(v.subtreeFlags&2064)===0&&(v.flags&2064)===0||Dl||(Dl=!0,Nm(Cu,function(){return Wr(),null})),T=(v.flags&15990)!==0,(v.subtreeFlags&15990)!==0||T){T=Vt.transition,Vt.transition=null;var z=xt;xt=1;var B=ct;ct|=4,dh.current=null,V_(s,v),H_(s,v),q(s.containerInfo),s.current=v,W_(v),y_(),ct=B,xt=z,Vt.transition=T}else s.current=v;if(Dl&&(Dl=!1,ar=s,Nl=S),T=s.pendingLanes,T===0&&(or=null),w_(v.stateNode),Rn(s,on()),o!==null)for(d=s.onRecoverableError,v=0;v<o.length;v++)d(o[v]);if(Il)throw Il=!1,s=vh,vh=null,s;return(Nl&1)!==0&&s.tag!==0&&Wr(),T=s.pendingLanes,(T&1)!==0?s===xh?ra++:(ra=0,xh=s):ra=0,wi(),null}h(Z_,"Th");function Wr(){if(ar!==null){var s=lp(Nl),o=Vt.transition,d=xt;try{if(Vt.transition=null,xt=16>s?16:s,ar===null)var v=!1;else{if(s=ar,ar=null,Nl=0,(ct&6)!==0)throw Error(a(331));var S=ct;for(ct|=4,Te=s.current;Te!==null;){var T=Te,z=T.child;if((Te.flags&16)!==0){var B=T.deletions;if(B!==null){for(var ne=0;ne<B.length;ne++){var ve=B[ne];for(Te=ve;Te!==null;){var Re=Te;switch(Re.tag){case 0:case 11:case 15:Br(8,Re,T)}var $e=Re.child;if($e!==null)$e.return=Re,Te=$e;else for(;Te!==null;){Re=Te;var We=Re.sibling,Ct=Re.return;if(pm(Re),Re===ve){Te=null;break}if(We!==null){We.return=Ct,Te=We;break}Te=Ct}}}var ke=T.alternate;if(ke!==null){var gn=ke.child;if(gn!==null){ke.child=null;do{var ni=gn.sibling;gn.sibling=null,gn=ni}while(gn!==null)}}Te=T}}if((T.subtreeFlags&2064)!==0&&z!==null)z.return=T,Te=z;else e:for(;Te!==null;){if(T=Te,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:Br(9,T,T.return)}var J=T.sibling;if(J!==null){J.return=T.return,Te=J;break e}Te=T.return}}var H=s.current;for(Te=H;Te!==null;){z=Te;var K=z.child;if((z.subtreeFlags&2064)!==0&&K!==null)K.return=z,Te=K;else e:for(z=H;Te!==null;){if(B=Te,(B.flags&2048)!==0)try{switch(B.tag){case 0:case 11:case 15:ea(9,B)}}catch(Fe){In(B,B.return,Fe)}if(B===z){Te=null;break e}var Ae=B.sibling;if(Ae!==null){Ae.return=B.return,Te=Ae;break e}Te=B.return}}if(ct=S,wi(),Mi&&typeof Mi.onPostCommitFiberRoot=="function")try{Mi.onPostCommitFiberRoot(Ka,s)}catch{}v=!0}return v}finally{xt=d,Vt.transition=o}}return!1}h(Wr,"Fh");function Rm(s,o,d){o=Ku(d,o),o=Xp(s,o,1),sr(s,o),o=bn(),s=Ol(s,1),s!==null&&(Vo(s,1,o),Rn(s,o))}h(Rm,"Uh");function In(s,o,d){if(s.tag===3)Rm(s,s,d);else for(;o!==null;){if(o.tag===3){Rm(o,s,d);break}else if(o.tag===1){var v=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(or===null||!or.has(v))){s=Ku(d,s),s=qp(o,s,1),sr(o,s),s=bn(),o=Ol(o,1),o!==null&&(Vo(o,1,s),Rn(o,s));break}}o=o.return}}h(In,"T");function J_(s,o,d){var v=s.pingCache;v!==null&&v.delete(o),o=bn(),s.pingedLanes|=s.suspendedLanes&d,Yt===s&&(fn&d)===d&&(Kt===4||Kt===3&&(fn&130023424)===fn&&500>on()-mh?Vr(s,0):ph|=d),Rn(s,o)}h(J_,"Gf");function Im(s,o){o===0&&((s.mode&1)===0?o=1:(o=ja,ja<<=1,(ja&130023424)===0&&(ja=4194304)));var d=bn();s=Ol(s,o),s!==null&&(Vo(s,o,d),Rn(s,d))}h(Im,"Vh");function j_(s){var o=s.memoizedState,d=0;o!==null&&(d=o.retryLane),Im(s,d)}h(j_,"qg");function Q_(s,o){var d=0;switch(s.tag){case 13:var v=s.stateNode,S=s.memoizedState;S!==null&&(d=S.retryLane);break;case 19:v=s.stateNode;break;default:throw Error(a(314))}v!==null&&v.delete(o),Im(s,d)}h(Q_,"Tg");var Dm;Dm=h(function(s,o,d){if(s!==null)if(s.memoizedProps!==o.pendingProps||sn.current)Fn=!0;else{if((s.lanes&d)===0&&(o.flags&128)===0)return Fn=!1,k_(s,o,d);Fn=(s.flags&131072)!==0}else Fn=!1,It&&(o.flags&1048576)!==0&&_p(o,al,o.index);switch(o.lanes=0,o.tag){case 2:var v=o.type;s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps;var S=Ni(o,wt.current);As(o,d),S=Yu(null,o,v,s,S,d);var T=Zu();return o.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,Pn(v)?(T=!0,Za(o)):T=!1,o.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Nu(o),S.updater=sl,o.stateNode=S,S._reactInternals=o,Fu(o,v,s,d),o=th(null,o,v,!0,T,d)):(o.tag=0,It&&T&&Ou(o),wn(null,o,S,d),o=o.child),o;case 16:v=o.elementType;e:{switch(s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps,S=v._init,v=S(v._payload),o.type=v,S=o.tag=$_(v),s=ci(v,s),S){case 0:o=eh(null,o,v,s,d);break e;case 1:o=im(null,o,v,s,d);break e;case 11:o=Kp(null,o,v,s,d);break e;case 14:o=$p(null,o,v,ci(v.type,s),d);break e}throw Error(a(306,v,""))}return o;case 0:return v=o.type,S=o.pendingProps,S=o.elementType===v?S:ci(v,S),eh(s,o,v,S,d);case 1:return v=o.type,S=o.pendingProps,S=o.elementType===v?S:ci(v,S),im(s,o,v,S,d);case 3:e:{if(rm(o),s===null)throw Error(a(387));v=o.pendingProps,T=o.memoizedState,S=T.element,fp(s,o),rl(o,v,null,d);var z=o.memoizedState;if(v=z.element,re&&T.isDehydrated)if(T={element:v,isDehydrated:!1,cache:z.cache,transitions:z.transitions},o.updateQueue.baseState=T,o.memoizedState=T,o.flags&256){S=Error(a(423)),o=sm(s,o,v,d,S);break e}else if(v!==S){S=Error(a(424)),o=sm(s,o,v,d,S);break e}else for(re&&(zn=X(o.stateNode.containerInfo),Nn=o,It=!0,ui=null,Ho=!1),d=Tp(o,null,v,d),o.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Ls(),v===S){o=Bi(s,o,d);break e}wn(s,o,v,d)}o=o.child}return o;case 5:return Ep(o),s===null&&Bu(o),v=o.type,S=o.pendingProps,T=s!==null?s.memoizedProps:null,z=S.children,Me(v,S)?z=null:T!==null&&Me(v,T)&&(o.flags|=32),nm(s,o),wn(s,o,z,d),o.child;case 6:return s===null&&Bu(o),null;case 13:return om(s,o,d);case 4:return Hu(o,o.stateNode.containerInfo),v=o.pendingProps,s===null?o.child=Rs(o,null,v,d):wn(s,o,v,d),o.child;case 11:return v=o.type,S=o.pendingProps,S=o.elementType===v?S:ci(v,S),Kp(s,o,v,S,d);case 7:return wn(s,o,o.pendingProps,d),o.child;case 8:return wn(s,o,o.pendingProps.children,d),o.child;case 12:return wn(s,o,o.pendingProps.children,d),o.child;case 10:e:{if(v=o.type._context,S=o.pendingProps,T=o.memoizedProps,z=S.value,hp(o,v,z),T!==null)if(Si(T.value,z)){if(T.children===S.children&&!sn.current){o=Bi(s,o,d);break e}}else for(T=o.child,T!==null&&(T.return=o);T!==null;){var B=T.dependencies;if(B!==null){z=T.child;for(var ne=B.firstContext;ne!==null;){if(ne.context===v){if(T.tag===1){ne=Fi(-1,d&-d),ne.tag=2;var ve=T.updateQueue;if(ve!==null){ve=ve.shared;var Re=ve.pending;Re===null?ne.next=ne:(ne.next=Re.next,Re.next=ne),ve.pending=ne}}T.lanes|=d,ne=T.alternate,ne!==null&&(ne.lanes|=d),Du(T.return,d,o),B.lanes|=d;break}ne=ne.next}}else if(T.tag===10)z=T.type===o.type?null:T.child;else if(T.tag===18){if(z=T.return,z===null)throw Error(a(341));z.lanes|=d,B=z.alternate,B!==null&&(B.lanes|=d),Du(z,d,o),z=T.sibling}else z=T.child;if(z!==null)z.return=T;else for(z=T;z!==null;){if(z===o){z=null;break}if(T=z.sibling,T!==null){T.return=z.return,z=T;break}z=z.return}T=z}wn(s,o,S.children,d),o=o.child}return o;case 9:return S=o.type,v=o.pendingProps.children,As(o,d),S=Jn(S),v=v(S),o.flags|=1,wn(s,o,v,d),o.child;case 14:return v=o.type,S=ci(v,o.pendingProps),S=ci(v.type,S),$p(s,o,v,S,d);case 15:return em(s,o,o.type,o.pendingProps,d);case 17:return v=o.type,S=o.pendingProps,S=o.elementType===v?S:ci(v,S),s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),o.tag=1,Pn(v)?(s=!0,Za(o)):s=!1,As(o,d),vp(o,v,S),Fu(o,v,S,d),th(null,o,v,!0,s,d);case 19:return um(s,o,d);case 22:return tm(s,o,d)}throw Error(a(156,o.tag))},"Sh");function Nm(s,o){return Eu(s,o)}h(Nm,"Dh");function K_(s,o,d,v){this.tag=s,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}h(K_,"Xh");function ti(s,o,d,v){return new K_(s,o,d,v)}h(ti,"Yd");function wh(s){return s=s.prototype,!(!s||!s.isReactComponent)}h(wh,"ag");function $_(s){if(typeof s=="function")return wh(s)?1:0;if(s!=null){if(s=s.$$typeof,s===y)return 11;if(s===E)return 14}return 2}h($_,"Wh");function ur(s,o){var d=s.alternate;return d===null?(d=ti(s.tag,o,s.key,s.mode),d.elementType=s.elementType,d.type=s.type,d.stateNode=s.stateNode,d.alternate=s,s.alternate=d):(d.pendingProps=o,d.type=s.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=s.flags&14680064,d.childLanes=s.childLanes,d.lanes=s.lanes,d.child=s.child,d.memoizedProps=s.memoizedProps,d.memoizedState=s.memoizedState,d.updateQueue=s.updateQueue,o=s.dependencies,d.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},d.sibling=s.sibling,d.index=s.index,d.ref=s.ref,d}h(ur,"je");function Ul(s,o,d,v,S,T){var z=2;if(v=s,typeof s=="function")wh(s)&&(z=1);else if(typeof s=="string")z=5;else e:switch(s){case p:return Gr(d.children,S,T,o);case m:z=8,S|=8;break;case g:return s=ti(12,d,o,S|2),s.elementType=g,s.lanes=T,s;case _:return s=ti(13,d,o,S),s.elementType=_,s.lanes=T,s;case w:return s=ti(19,d,o,S),s.elementType=w,s.lanes=T,s;case A:return Bl(d,S,T,o);default:if(typeof s=="object"&&s!==null)switch(s.$$typeof){case x:z=10;break e;case M:z=9;break e;case y:z=11;break e;case E:z=14;break e;case b:z=16,v=null;break e}throw Error(a(130,s==null?s:typeof s,""))}return o=ti(z,d,o,S),o.elementType=s,o.type=v,o.lanes=T,o}h(Ul,"le");function Gr(s,o,d,v){return s=ti(7,s,v,o),s.lanes=d,s}h(Gr,"ne");function Bl(s,o,d,v){return s=ti(22,s,v,o),s.elementType=A,s.lanes=d,s.stateNode={},s}h(Bl,"ng");function bh(s,o,d){return s=ti(6,s,null,o),s.lanes=d,s}h(bh,"ke");function Th(s,o,d){return o=ti(4,s.children!==null?s.children:[],s.key,o),o.lanes=d,o.stateNode={containerInfo:s.containerInfo,pendingChildren:null,implementation:s.implementation},o}h(Th,"me");function ey(s,o,d,v,S){this.tag=o,this.containerInfo=s,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ye,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=bu(0),this.expirationTimes=bu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=bu(0),this.identifierPrefix=v,this.onRecoverableError=S,re&&(this.mutableSourceEagerHydrationData=null)}h(ey,"Yh");function zm(s,o,d,v,S,T,z,B,ne){return s=new ey(s,o,d,B,ne),o===1?(o=1,T===!0&&(o|=8)):o=0,T=ti(3,null,null,o),s.current=T,T.stateNode=s,T.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null},Nu(T),s}h(zm,"Zh");function Fm(s){if(!s)return Zn;s=s._reactInternals;e:{if(I(s)!==s||s.tag!==1)throw Error(a(170));var o=s;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(Pn(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(a(171))}if(s.tag===1){var d=s.type;if(Pn(d))return op(s,d,o)}return o}h(Fm,"$h");function Om(s){var o=s._reactInternals;if(o===void 0)throw typeof s.render=="function"?Error(a(188)):(s=Object.keys(s).join(","),Error(a(268,s)));return s=ce(o),s===null?null:s.stateNode}h(Om,"ai");function km(s,o){if(s=s.memoizedState,s!==null&&s.dehydrated!==null){var d=s.retryLane;s.retryLane=d!==0&&d<o?d:o}}h(km,"bi");function Eh(s,o){km(s,o),(s=s.alternate)&&km(s,o)}h(Eh,"ci");function ty(s){return s=ce(s),s===null?null:s.stateNode}h(ty,"di");function ny(){return null}return h(ny,"ei"),t.attemptContinuousHydration=function(s){if(s.tag===13){var o=bn();ei(s,134217728,o),Eh(s,134217728)}},t.attemptHydrationAtCurrentPriority=function(s){if(s.tag===13){var o=bn(),d=lr(s);ei(s,d,o),Eh(s,d)}},t.attemptSynchronousHydration=function(s){switch(s.tag){case 3:var o=s.stateNode;if(o.current.memoizedState.isDehydrated){var d=Bo(o.pendingLanes);d!==0&&(Tu(o,d|1),Rn(o,on()),(ct&6)===0&&(Os(),wi()))}break;case 13:var v=bn();Em(function(){return ei(s,1,v)}),Eh(s,1)}},t.batchedUpdates=function(s,o){var d=ct;ct|=1;try{return s(o)}finally{ct=d,ct===0&&(Os(),$a&&wi())}},t.createComponentSelector=function(s){return{$$typeof:Tl,value:s}},t.createContainer=function(s,o,d,v,S,T,z){return zm(s,o,!1,null,d,v,S,T,z)},t.createHasPseudoClassSelector=function(s){return{$$typeof:El,value:s}},t.createHydrationContainer=function(s,o,d,v,S,T,z,B,ne){return s=zm(d,v,!0,s,S,T,z,B,ne),s.context=Fm(null),d=s.current,v=bn(),S=lr(d),T=Fi(v,S),T.callback=o!=null?o:null,sr(d,T),s.current.lanes=S,Vo(s,S,v),Rn(s,v),s},t.createPortal=function(s,o,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:f,key:v==null?null:""+v,children:s,containerInfo:o,implementation:d}},t.createRoleSelector=function(s){return{$$typeof:Al,value:s}},t.createTestNameSelector=function(s){return{$$typeof:Cl,value:s}},t.createTextSelector=function(s){return{$$typeof:Pl,value:s}},t.deferredUpdates=function(s){var o=xt,d=Vt.transition;try{return Vt.transition=null,xt=16,s()}finally{xt=o,Vt.transition=d}},t.discreteUpdates=function(s,o,d,v,S){var T=xt,z=Vt.transition;try{return Vt.transition=null,xt=1,s(o,d,v,S)}finally{xt=T,Vt.transition=z,ct===0&&Os()}},t.findAllNodes=fh,t.findBoundingRects=function(s,o){if(!Mt)throw Error(a(363));o=fh(s,o),s=[];for(var d=0;d<o.length;d++)s.push(F(o[d]));for(o=s.length-1;0<o;o--){d=s[o];for(var v=d.x,S=v+d.width,T=d.y,z=T+d.height,B=o-1;0<=B;B--)if(o!==B){var ne=s[B],ve=ne.x,Re=ve+ne.width,$e=ne.y,We=$e+ne.height;if(v>=ve&&T>=$e&&S<=Re&&z<=We){s.splice(o,1);break}else if(v!==ve||d.width!==ne.width||We<T||$e>z){if(!(T!==$e||d.height!==ne.height||Re<v||ve>S)){ve>v&&(ne.width+=ve-v,ne.x=v),Re<S&&(ne.width=S-ve),s.splice(o,1);break}}else{$e>T&&(ne.height+=$e-T,ne.y=T),We<z&&(ne.height=z-$e),s.splice(o,1);break}}}return s},t.findHostInstance=Om,t.findHostInstanceWithNoPortals=function(s){return s=G(s),s=s!==null?W(s):null,s===null?null:s.stateNode},t.findHostInstanceWithWarning=function(s){return Om(s)},t.flushControlled=function(s){var o=ct;ct|=1;var d=Vt.transition,v=xt;try{Vt.transition=null,xt=1,s()}finally{xt=v,Vt.transition=d,ct=o,ct===0&&(Os(),wi())}},t.flushPassiveEffects=Wr,t.flushSync=Em,t.focusWithin=function(s,o){if(!Mt)throw Error(a(363));for(s=ch(s),o=wm(s,o),o=Array.from(o),s=0;s<o.length;){var d=o[s++];if(!$(d)){if(d.tag===5&&_e(d.stateNode))return!0;for(d=d.child;d!==null;)o.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(s,o){if(!Mt)throw Error(a(363));var d=0,v=[];s=[ch(s),0];for(var S=0;S<s.length;){var T=s[S++],z=s[S++],B=o[z];if((T.tag!==5||!$(T))&&(uh(T,B)&&(v.push(hh(B)),z++,z>d&&(d=z)),z<o.length))for(T=T.child;T!==null;)s.push(T,z),T=T.sibling}if(d<o.length){for(s=[];d<o.length;d++)s.push(hh(o[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+s.join(" > ")}return null},t.getPublicRootInstance=function(s){if(s=s.current,!s.child)return null;switch(s.child.tag){case 5:return ae(s.child.stateNode);default:return s.child.stateNode}},t.injectIntoDevTools=function(s){if(s={bundleType:s.bundleType,version:s.version,rendererPackageName:s.rendererPackageName,rendererConfig:s.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:ty,findFiberByHostInstance:s.findFiberByHostInstance||ny,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")s=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)s=!0;else{try{Ka=o.inject(s),Mi=o}catch{}s=!!o.checkDCE}}return s},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(s,o,d,v){if(!Mt)throw Error(a(363));s=fh(s,o);var S=Ee(s,d,v).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(s,o){var d=o._getVersion;d=d(o._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[o,d]:s.mutableSourceEagerHydrationData.push(o,d)},t.runWithPriority=function(s,o){var d=xt;try{return xt=s,o()}finally{xt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(s,o,d,v){var S=o.current,T=bn(),z=lr(S);return d=Fm(d),o.context===null?o.context=d:o.pendingContext=d,o=Fi(T,z),o.payload={element:s},v=v===void 0?null:v,v!==null&&(o.callback=v),sr(S,o),s=ei(S,z,T),s!==null&&il(s,S,z),z},t},"$$$reconciler");(function(l){l.exports=W3})(n_);const G3=sy(n_.exports);var o0,a0;const r_=h(l=>l&&l.isOrthographicCamera,"isOrthographicCamera"),dT=h(l=>l&&l.hasOwnProperty("current"),"isRef"),Mu=typeof window<"u"&&((o0=window.document)!=null&&o0.createElement||((a0=window.navigator)==null?void 0:a0.product)==="ReactNative")?jt.exports.useLayoutEffect:jt.exports.useEffect;function X3(l){const e=jt.exports.useRef(l);return Mu(()=>void(e.current=l),[l]),e}h(X3,"useMutableCallback");function pT({set:l}){return Mu(()=>(l(new Promise(()=>null)),()=>l(!1)),[l]),null}h(pT,"Block");class s_ extends jt.exports.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}h(s_,"ErrorBoundary");s_.getDerivedStateFromError=()=>({error:!0});const o_="__default",q3=h(l=>l&&!!l.memoized&&!!l.changes,"isDiffSet");function a_(l){const e=typeof window<"u"?window.devicePixelRatio:1;return Array.isArray(l)?Math.min(Math.max(l[0],e),l[1]):l}h(a_,"calculateDpr");const pa=h(l=>{var e;return(e=l.__r3f)==null?void 0:e.root.getState()},"getRootState"),Wt={obj:l=>l===Object(l)&&!Wt.arr(l)&&typeof l!="function",fun:l=>typeof l=="function",str:l=>typeof l=="string",num:l=>typeof l=="number",boo:l=>typeof l=="boolean",und:l=>l===void 0,arr:l=>Array.isArray(l),equ(l,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof l!=typeof e||!!l!=!!e)return!1;if(Wt.str(l)||Wt.num(l))return l===e;const r=Wt.obj(l);if(r&&n==="reference")return l===e;const a=Wt.arr(l);if(a&&t==="reference")return l===e;if((a||r)&&l===e)return!0;let c;for(c in l)if(!(c in e))return!1;for(c in i?e:l)if(l[c]!==e[c])return!1;if(Wt.und(c)){if(a&&l.length===0&&e.length===0||r&&Object.keys(l).length===0&&Object.keys(e).length===0)return!0;if(l!==e)return!1}return!0}};function Y3(l){l.dispose&&l.type!=="Scene"&&l.dispose();for(const e in l)e.dispose==null||e.dispose(),delete l[e]}h(Y3,"dispose");function io(l,e){const t=l;return(e!=null&&e.primitive||!t.__r3f)&&(t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e}),l}h(io,"prepare");function Qf(l,e){let t=l;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((r,a)=>r[a],l),{target:t,key:i}}else return{target:t,key:e}}h(Qf,"resolve");const l0=/-\d+$/;function cf(l,e,t){if(Wt.str(t)){if(l0.test(t)){const r=t.replace(l0,""),{target:a,key:c}=Qf(l,r);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=Qf(l,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(l,e)}h(cf,"attach");function c0(l,e,t){var n,i;if(Wt.str(t)){const{target:r,key:a}=Qf(l,t),c=e.__r3f.previousAttach;c===void 0?delete r[a]:r[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(l,e);(i=e.__r3f)==null||delete i.previousAttach}h(c0,"detach");function l_(l,{children:e,key:t,ref:n,...i},{children:r,key:a,ref:c,...u}={},f=!1){var p;const m=(p=l==null?void 0:l.__r3f)!=null?p:{},g=Object.entries(i),x=[];if(f){const y=Object.keys(u);for(let _=0;_<y.length;_++)i.hasOwnProperty(y[_])||g.unshift([y[_],o_+"remove"])}g.forEach(([y,_])=>{var w;if((w=l.__r3f)!=null&&w.primitive&&y==="object"||Wt.equ(_,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return x.push([y,_,!0,[]]);let E=[];y.includes("-")&&(E=y.split("-")),x.push([y,_,!1,E]);for(const b in i){const A=i[b];b.startsWith(`${y}-`)&&x.push([b,A,!1,b.split("-")])}});const M={...i};return m.memoizedProps&&m.memoizedProps.args&&(M.args=m.memoizedProps.args),m.memoizedProps&&m.memoizedProps.attach&&(M.attach=m.memoizedProps.attach),{memoized:M,changes:x}}h(l_,"diffProps");function uf(l,e){var t,n,i;const r=(t=l.__r3f)!=null?t:{},a=r.root,c=(n=a==null||a.getState==null?void 0:a.getState())!=null?n:{},{memoized:u,changes:f}=q3(e)?e:l_(l,e),p=r.eventCount;l.__r3f&&(l.__r3f.memoizedProps=u);for(let x=0;x<f.length;x++){let[M,y,_,w]=f[x],E=l,b=E[M];if(w.length&&(b=w.reduce((A,P)=>A[P],l),!(b&&b.set))){const[A,...P]=w.reverse();E=P.reverse().reduce((L,O)=>L[O],l),M=A}if(y===o_+"remove")if(b&&b.constructor){var m;y=new b.constructor(...(m=u.args)!=null?m:[])}else if(E.constructor){var g;const A=new E.constructor(...(g=E.__r3f.memoizedProps.args)!=null?g:[]);y=A[b],A.dispose&&A.dispose()}else y=0;if(_)y?r.handlers[M]=y:delete r.handlers[M],r.eventCount=Object.keys(r.handlers).length;else if(b&&b.set&&(b.copy||b instanceof wr)){if(Array.isArray(y))b.fromArray?b.fromArray(y):b.set(...y);else if(b.copy&&y&&y.constructor&&b.constructor.name===y.constructor.name)b.copy(y);else if(y!==void 0){const A=b instanceof Le;!A&&b.setScalar?b.setScalar(y):b instanceof wr&&y instanceof wr?b.mask=y.mask:b.set(y),!("ColorManagement"in jf)&&!c.linear&&A&&b.convertSRGBToLinear()}}else E[M]=y,!c.linear&&E[M]instanceof zt&&(E[M].encoding=Lt);ro(l)}if(r.parent&&c.internal&&l.raycast&&p!==r.eventCount){const x=c.internal.interaction.indexOf(l);x>-1&&c.internal.interaction.splice(x,1),r.eventCount&&c.internal.interaction.push(l)}return f.length&&(i=l.__r3f)!=null&&i.parent&&Kf(l),l}h(uf,"applyProps$1");function ro(l){var e,t;const n=(e=l.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}h(ro,"invalidateInstance");function Kf(l){l.onUpdate==null||l.onUpdate(l)}h(Kf,"updateInstance");function Z3(l,e){l.manual||(r_(l)?(l.left=e.width/-2,l.right=e.width/2,l.top=e.height/2,l.bottom=e.height/-2):l.aspect=e.width/e.height,l.updateProjectionMatrix(),l.updateMatrixWorld())}h(Z3,"updateCamera");function J3(l,e,t){const n=t.pop(),i=t.reduce((r,a)=>r[a],l);return i[n]=e}h(J3,"setDeep");function Cc(l){return(l.eventObject||l.object).uuid+"/"+l.index+l.instanceId}h(Cc,"makeId");function j3(){var l;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return os.exports.DefaultEventPriority;switch((l=e.event)==null?void 0:l.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return os.exports.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return os.exports.ContinuousEventPriority;default:return os.exports.DefaultEventPriority}}h(j3,"getEventPriority");function c_(l,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(l.delete(n),i.target.releasePointerCapture(n)))}h(c_,"releaseInternalPointerCapture");function Q3(l,e){const{internal:t}=l.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{c_(t.capturedMap,e,n,i)})}h(Q3,"removeInteractivity");function mT(l){function e(u){const{internal:f}=l.getState(),p=u.offsetX-f.initialClick[0],m=u.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}h(e,"calculateDistance");function t(u){return u.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}h(t,"filterPointerEvents");function n(u,f){const p=l.getState(),m=new Set,g=[],x=f?f(p.internal.interaction):p.internal.interaction;for(let w=0;w<x.length;w++){const E=pa(x[w]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(u,p);function M(w){const E=pa(w);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var b;E.events.compute==null||E.events.compute(u,E,(b=E.previousRoot)==null?void 0:b.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(w,!0):[]}h(M,"handleRaycast");let y=x.flatMap(M).sort((w,E)=>{const b=pa(w.object),A=pa(E.object);return!b||!A?w.distance-E.distance:A.events.priority-b.events.priority||w.distance-E.distance}).filter(w=>{const E=Cc(w);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(y=p.events.filter(y,p));for(const w of y){let E=w.object;for(;E;){var _;(_=E.__r3f)!=null&&_.eventCount&&g.push({...w,eventObject:E}),E=E.parent}}if("pointerId"in u&&p.internal.capturedMap.has(u.pointerId))for(let w of p.internal.capturedMap.get(u.pointerId).values())m.has(Cc(w.intersection))||g.push(w.intersection);return g}h(n,"intersect");function i(u,f,p,m){const g=l.getState();if(u.length){const x={stopped:!1};for(const M of u){const y=pa(M.object)||g,{raycaster:_,pointer:w,camera:E,internal:b}=y,A=new N(w.x,w.y,0).unproject(E),P=h(k=>{var G,ce;return(G=(ce=b.capturedMap.get(k))==null?void 0:ce.has(M.eventObject))!=null?G:!1},"hasPointerCapture"),L=h(k=>{const G={intersection:M,target:f.target};b.capturedMap.has(k)?b.capturedMap.get(k).set(M.eventObject,G):b.capturedMap.set(k,new Map([[M.eventObject,G]])),f.target.setPointerCapture(k)},"setPointerCapture"),O=h(k=>{const G=b.capturedMap.get(k);G&&c_(b.capturedMap,M.eventObject,G,k)},"releasePointerCapture");let C={};for(let k in f){let G=f[k];typeof G!="function"&&(C[k]=G)}let I={...M,...C,pointer:w,intersections:u,stopped:x.stopped,delta:p,unprojectedPoint:A,ray:_.ray,camera:E,stopPropagation(){const k="pointerId"in f&&b.capturedMap.get(f.pointerId);if((!k||k.has(M.eventObject))&&(I.stopped=x.stopped=!0,b.hovered.size&&Array.from(b.hovered.values()).find(G=>G.eventObject===M.eventObject))){const G=u.slice(0,u.indexOf(M));r([...G,M])}},target:{hasPointerCapture:P,setPointerCapture:L,releasePointerCapture:O},currentTarget:{hasPointerCapture:P,setPointerCapture:L,releasePointerCapture:O},nativeEvent:f};if(m(I),x.stopped===!0)break}}return u}h(i,"handleIntersects");function r(u){const{internal:f}=l.getState();for(const p of f.hovered.values())if(!u.length||!u.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f,x=g==null?void 0:g.handlers;if(f.hovered.delete(Cc(p)),g!=null&&g.eventCount){const M={...p,intersections:u};x.onPointerOut==null||x.onPointerOut(M),x.onPointerLeave==null||x.onPointerLeave(M)}}}h(r,"cancelPointer");function a(u,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(u)}}h(a,"pointerMissed");function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return f=>{const{internal:p}=l.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),r([]))}}return h(function(p){const{onPointerMissed:m,internal:g}=l.getState();g.lastEvent.current=p;const x=u==="onPointerMove",M=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",_=n(p,x?t:void 0),w=M?e(p):0;u==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=_.map(b=>b.eventObject)),M&&!_.length&&w<=2&&(a(p,g.interaction),m&&m(p)),x&&r(_);function E(b){const A=b.eventObject,P=A.__r3f,L=P==null?void 0:P.handlers;if(!!(P!=null&&P.eventCount))if(x){if(L.onPointerOver||L.onPointerEnter||L.onPointerOut||L.onPointerLeave){const O=Cc(b),C=g.hovered.get(O);C?C.stopped&&b.stopPropagation():(g.hovered.set(O,b),L.onPointerOver==null||L.onPointerOver(b),L.onPointerEnter==null||L.onPointerEnter(b))}L.onPointerMove==null||L.onPointerMove(b)}else{const O=L[u];O?(!M||g.initialHits.includes(A))&&(a(p,g.interaction.filter(C=>!g.initialHits.includes(C))),O(b)):M&&g.initialHits.includes(A)&&a(p,g.interaction.filter(C=>!g.initialHits.includes(C)))}}h(E,"onIntersect"),i(_,p,w,E)},"handleEvent")}return h(c,"handlePointer"),{handlePointer:c}}h(mT,"createEvents");let $f={},gT=h(l=>void($f={...$f,...l}),"extend");function K3(l,e){function t(p,{args:m=[],attach:g,...x},M){let y=`${p[0].toUpperCase()}${p.slice(1)}`,_;if(p==="primitive"){if(x.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const w=x.object;_=io(w,{type:p,root:M,attach:g,primitive:!0})}else{const w=$f[y];if(!w)throw new Error(`R3F: ${y} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(m))throw new Error("R3F: The args prop must be an array!");_=io(new w(...m),{type:p,root:M,attach:g,memoizedProps:{args:m}})}return _.__r3f.attach===void 0&&(_ instanceof it?_.__r3f.attach="geometry":_ instanceof hn&&(_.__r3f.attach="material")),y!=="inject"&&uf(_,x),_}h(t,"createInstance");function n(p,m){let g=!1;if(m){var x,M;(x=m.__r3f)!=null&&x.attach?cf(p,m,m.__r3f.attach):m.isObject3D&&p.isObject3D&&(p.add(m),g=!0),g||(M=p.__r3f)==null||M.objects.push(m),m.__r3f||io(m,{}),m.__r3f.parent=p,Kf(m),ro(m)}}h(n,"appendChild");function i(p,m,g){let x=!1;if(m){var M,y;if((M=m.__r3f)!=null&&M.attach)cf(p,m,m.__r3f.attach);else if(m.isObject3D&&p.isObject3D){m.parent=p,m.dispatchEvent({type:"added"});const _=p.children.filter(E=>E!==m),w=_.indexOf(g);p.children=[..._.slice(0,w),m,..._.slice(w)],x=!0}x||(y=p.__r3f)==null||y.objects.push(m),m.__r3f||io(m,{}),m.__r3f.parent=p,Kf(m),ro(m)}}h(i,"insertBefore");function r(p,m,g=!1){p&&[...p].forEach(x=>a(m,x,g))}h(r,"removeRecursive");function a(p,m,g){if(m){var x,M,y;if(m.__r3f&&(m.__r3f.parent=null),(x=p.__r3f)!=null&&x.objects&&(p.__r3f.objects=p.__r3f.objects.filter(A=>A!==m)),(M=m.__r3f)!=null&&M.attach)c0(p,m,m.__r3f.attach);else if(m.isObject3D&&p.isObject3D){var _;p.remove(m),(_=m.__r3f)!=null&&_.root&&Q3(m.__r3f.root,m)}const E=(y=m.__r3f)==null?void 0:y.primitive,b=g===void 0?m.dispose!==null&&!E:g;if(!E){var w;r((w=m.__r3f)==null?void 0:w.objects,m,b),r(m.children,m,b)}m.__r3f&&(delete m.__r3f.root,delete m.__r3f.objects,delete m.__r3f.handlers,delete m.__r3f.memoizedProps,E||delete m.__r3f),b&&m.dispose&&m.type!=="Scene"&&qc.exports.unstable_scheduleCallback(qc.exports.unstable_IdlePriority,()=>{try{m.dispose()}catch{}}),ro(p)}}h(a,"removeChild");function c(p,m,g,x){var M;const y=(M=p.__r3f)==null?void 0:M.parent;if(!y)return;const _=t(m,g,p.__r3f.root);if(p.children){for(const w of p.children)w.__r3f&&n(_,w);p.children=p.children.filter(w=>!w.__r3f)}p.__r3f.objects.forEach(w=>n(_,w)),p.__r3f.objects=[],a(y,p),n(y,_),_.raycast&&_.__r3f.eventCount&&_.__r3f.root.getState().internal.interaction.push(_),[x,x.alternate].forEach(w=>{w!==null&&(w.stateNode=_,w.ref&&(typeof w.ref=="function"?w.ref(_):w.ref.current=_))})}h(c,"switchInstance");const u=h(()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters."),"handleTextInstance");return{reconciler:G3({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(p,m)=>{if(!m)return;const g=p.getState().scene;!g.__r3f||(g.__r3f.root=p,n(g,m))},removeChildFromContainer:(p,m)=>{!m||a(p.getState().scene,m)},insertInContainerBefore:(p,m,g)=>{if(!m||!g)return;const x=p.getState().scene;!x.__r3f||i(x,m,g)},getRootHostContext:()=>null,getChildHostContext:p=>p,finalizeInitialChildren(p){var m;const g=(m=p==null?void 0:p.__r3f)!=null?m:{};return Boolean(g.handlers)},prepareUpdate(p,m,g,x){if(p.__r3f.primitive&&x.object&&x.object!==p)return[!0];{const{args:M=[],children:y,..._}=x,{args:w=[],children:E,...b}=g;if(!Array.isArray(M))throw new Error("R3F: the args prop must be an array!");if(M.some((P,L)=>P!==w[L]))return[!0];const A=l_(p,_,b,!0);return A.changes.length?[!1,A]:null}},commitUpdate(p,[m,g],x,M,y,_){m?c(p,x,y,_):uf(p,g)},commitMount(p,m,g,x){var M;const y=(M=p.__r3f)!=null?M:{};p.raycast&&y.handlers&&y.eventCount&&p.__r3f.root.getState().internal.interaction.push(p)},getPublicInstance:p=>p,prepareForCommit:()=>null,preparePortalMount:p=>io(p.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(p){var m;const{attach:g,parent:x}=(m=p.__r3f)!=null?m:{};g&&x&&c0(x,p,g),p.isObject3D&&(p.visible=!1),ro(p)},unhideInstance(p,m){var g;const{attach:x,parent:M}=(g=p.__r3f)!=null?g:{};x&&M&&cf(M,p,x),(p.isObject3D&&m.visible==null||m.visible)&&(p.visible=!0),ro(p)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():os.exports.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Wt.fun(performance.now)?performance.now:Wt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Wt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Wt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:uf}}h(K3,"createRenderer");const u_=h(l=>!!(l!=null&&l.render),"isRenderer"),h_=jt.exports.createContext(null),$3=h((l,e)=>{const t=H3((c,u)=>{const f=new N,p=new N,m=new N;function g(w=u().camera,E=p,b=u().size){const{width:A,height:P,top:L,left:O}=b,C=A/P;E instanceof N?m.copy(E):m.set(...E);const I=w.getWorldPosition(f).distanceTo(m);if(r_(w))return{width:A/w.zoom,height:P/w.zoom,top:L,left:O,factor:1,distance:I,aspect:C};{const k=w.fov*Math.PI/180,G=2*Math.tan(k/2)*I,ce=G*(A/P);return{width:ce,height:G,top:L,left:O,factor:A/ce,distance:I,aspect:C}}}h(g,"getCurrentViewport");let x;const M=h(w=>c(E=>({performance:{...E.performance,current:w}})),"setPerformanceCurrent"),y=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,invalidate:(w=1)=>l(u(),w),advance:(w,E)=>e(w,E,u()),legacy:!1,linear:!1,flat:!1,scene:io(new iu),controls:null,clock:new _u,pointer:y,mouse:y,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const w=u();x&&clearTimeout(x),w.performance.current!==w.performance.min&&M(w.performance.min),x=setTimeout(()=>M(u().performance.max),w.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:w=>c(E=>({...E,events:{...E.events,...w}})),setSize:(w,E,b,A,P)=>{const L=u().camera,O={width:w,height:E,top:A||0,left:P||0,updateStyle:b};c(C=>({size:O,viewport:{...C.viewport,...g(L,p,O)}}))},setDpr:w=>c(E=>{const b=a_(w);return{viewport:{...E.viewport,dpr:b,initialDpr:E.viewport.initialDpr||b}}}),setFrameloop:(w="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,w!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:w}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:jt.exports.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(w,E,b)=>{const A=u().internal;return A.priority=A.priority+(E>0?1:0),A.subscribers.push({ref:w,priority:E,store:b}),A.subscribers=A.subscribers.sort((P,L)=>P.priority-L.priority),()=>{const P=u().internal;P!=null&&P.subscribers&&(P.priority=P.priority-(E>0?1:0),P.subscribers=P.subscribers.filter(L=>L.ref!==w))}}}}}),n=t.getState();let i=n.size,r=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:f,gl:p,set:m}=t.getState();(u!==i||f.dpr!==r)&&(i=u,r=f.dpr,Z3(c,u),p.setPixelRatio(f.dpr),p.setSize(u.width,u.height,u.updateStyle)),c!==a&&(a=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>l(c)),t},"createStore");let Pc,eT=new Set,tT=new Set,nT=new Set;function hf(l,e){if(!!l.size)for(const{callback:t}of l.values())t(e)}h(hf,"run");function ma(l,e){switch(l){case"before":return hf(eT,e);case"after":return hf(tT,e);case"tail":return hf(nT,e)}}h(ma,"flushGlobalEffects");let ff,df;function pf(l,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof l=="number"&&(n=l-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=l),ff=e.internal.subscribers,Pc=0;Pc<ff.length;Pc++)df=ff[Pc],df.ref.current(df.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}h(pf,"render$1");function iT(l){let e=!1,t,n,i;function r(u){n=requestAnimationFrame(r),e=!0,t=0,ma("before",u);for(const p of l.values()){var f;i=p.store.getState(),i.internal.active&&(i.frameloop==="always"||i.internal.frames>0)&&!((f=i.gl.xr)!=null&&f.isPresenting)&&(t+=pf(u,i))}if(ma("after",u),t===0)return ma("tail",u),e=!1,cancelAnimationFrame(n)}h(r,"loop");function a(u,f=1){var p;if(!u)return l.forEach(m=>a(m.store.getState()),f);(p=u.gl.xr)!=null&&p.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+f),e||(e=!0,requestAnimationFrame(r)))}h(a,"invalidate");function c(u,f=!0,p,m){if(f&&ma("before",u),p)pf(u,p,m);else for(const g of l.values())pf(u,g.store.getState());f&&ma("after",u)}return h(c,"advance"),{loop:r,invalidate:a,advance:c}}h(iT,"createLoop");function f_(){const l=jt.exports.useContext(h_);if(!l)throw new Error("R3F: Hooks can only be used within the Canvas component!");return l}h(f_,"useStore");function vT(l=t=>t,e){return f_()(l,e)}h(vT,"useThree");function xT(l,e=0){const t=f_(),n=t.getState().internal.subscribe,i=X3(l);return Mu(()=>n(i,e,t),[e,n,t]),null}h(xT,"useFrame");const xo=new Map,{invalidate:u0,advance:h0}=iT(xo),{reconciler:Yc,applyProps:Lc}=K3(xo,j3),no={objects:"shallow",strict:!1},rT=h((l,e)=>{const t=typeof l=="function"?l(e):l;return u_(t)?t:new pd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...l})},"createRendererInstance");function sT(l){return l instanceof HTMLCanvasElement}h(sT,"isCanvas");function oT(l,e){if(e)return e;if(sT(l)&&l.parentElement){const{width:t,height:n,top:i,left:r}=l.parentElement.getBoundingClientRect();return{width:t,height:n,top:i,left:r}}return{width:0,height:0,top:0,left:0}}h(oT,"computeInitialSize");function _T(l){const e=xo.get(l),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||$3(u0,h0),a=t||Yc.createContainer(r,os.exports.ConcurrentRoot,null,!1,null,"",i,null);e||xo.set(l,{fiber:a,store:r});let c,u=!1;return{configure(f={}){let{gl:p,size:m,events:g,onCreated:x,shadows:M=!1,linear:y=!1,flat:_=!1,legacy:w=!1,orthographic:E=!1,frameloop:b="always",dpr:A=[1,2],performance:P,raycaster:L,camera:O,onPointerMissed:C}=f,I=r.getState(),k=I.gl;I.gl||I.set({gl:k=rT(p,l)});let G=I.raycaster;G||I.set({raycaster:G=new rp});const{params:ce,...Q}=L||{};if(Wt.equ(Q,G,no)||Lc(G,{...Q}),Wt.equ(ce,G.params,no)||Lc(G,{params:{...G.params,...ce}}),!I.camera){const de=O instanceof So,U=de?O:E?new bo(0,0,0,0,.1,1e3):new en(75,0,.1,1e3);de||(U.position.z=5,O&&Lc(U,O),O!=null&&O.rotation||U.lookAt(0,0,0)),I.set({camera:U})}if(!I.xr){const de=h((q,j)=>{const Z=r.getState();Z.frameloop!=="never"&&h0(q,!0,Z,j)},"handleXRFrame"),U=h(()=>{const q=r.getState();q.gl.xr.enabled=q.gl.xr.isPresenting,q.gl.xr.setAnimationLoop(q.gl.xr.isPresenting?de:null),q.gl.xr.isPresenting||u0(q)},"handleSessionChange"),ee={connect(){const q=r.getState().gl;q.xr.addEventListener("sessionstart",U),q.xr.addEventListener("sessionend",U)},disconnect(){const q=r.getState().gl;q.xr.removeEventListener("sessionstart",U),q.xr.removeEventListener("sessionend",U)}};k.xr&&ee.connect(),I.set({xr:ee})}if(k.shadowMap){const de=Wt.boo(M);if(de&&k.shadowMap.enabled!==M||!Wt.equ(M,k.shadowMap,no)){const U=k.shadowMap.enabled;k.shadowMap.enabled=!!M,de?k.shadowMap.type=td:Object.assign(k.shadowMap,M),U!==k.shadowMap.enabled&&(k.shadowMap.needsUpdate=!0)}}"ColorManagement"in jf&&J3(jf,w,["ColorManagement","legacyMode"]);const W=y?$i:Lt,te=_?gi:rd;k.outputEncoding!==W&&(k.outputEncoding=W),k.toneMapping!==te&&(k.toneMapping=te),I.legacy!==w&&I.set(()=>({legacy:w})),I.linear!==y&&I.set(()=>({linear:y})),I.flat!==_&&I.set(()=>({flat:_})),p&&!Wt.fun(p)&&!u_(p)&&!Wt.equ(p,k,no)&&Lc(k,p),g&&!I.events.handlers&&I.set({events:g(r)}),A&&I.viewport.dpr!==a_(A)&&I.setDpr(A);const ae=oT(l,m);return Wt.equ(ae,I.size,no)||I.setSize(ae.width,ae.height,ae.updateStyle,ae.top,ae.left),I.frameloop!==b&&I.setFrameloop(b),I.onPointerMissed||I.set({onPointerMissed:C}),P&&!Wt.equ(P,I.performance,no)&&I.set(de=>({performance:{...de.performance,...P}})),c=x,u=!0,this},render(f){return u||this.configure(),Yc.updateContainer(oy(aT,{store:r,children:f,onCreated:c,rootElement:l}),a,null,()=>{}),r},unmount(){lT(l)}}}h(_T,"createRoot");function aT({store:l,children:e,onCreated:t,rootElement:n}){return Mu(()=>{const i=l.getState();i.set(r=>({internal:{...r.internal,active:!0}})),t&&t(i),l.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),jt.exports.createElement(h_.Provider,{value:l},e)}h(aT,"Provider");function lT(l,e){const t=xo.get(l),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Yc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,a,c,u;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(a=r.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Y3(i),xo.delete(l),e&&e(l)}catch{}},500)})}}h(lT,"unmountComponentAtNode");Yc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:jt.exports.version});export{Tt as A,pT as B,Le as C,Ji as D,s_ as E,fs as F,t1 as G,hn as H,Kd as I,ou as J,gf as K,Gt as L,tu as M,Yx as P,rv as R,at as S,jf as T,Mv as U,N as V,Gn as W,Mu as a,lT as b,_T as c,mT as d,gT as e,nu as f,tr as g,tt as h,dT as i,un as j,fe as k,zt as l,bt as m,yn as n,Rr as o,Lr as p,Hn as q,ps as r,it as s,Ne as t,X3 as u,vT as v,H3 as w,en as x,iu as y,xT as z};
//# sourceMappingURL=index-6f0019d1.esm.c54a3958.js.map
