{
  "version": 3,
  "file": "Scroller.stories-cfe11296.js",
  "sources": [
    "../../node_modules/framer-motion/dist/es/value/use-spring.mjs",
    "../../src/components/Scroller/Scroller.jsx",
    "../../src/components/Scroller/Scroller.stories.jsx"
  ],
  "sourcesContent": [
    "import { useContext, useRef, useMemo } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { animate } from '../animation/legacy-popmotion/index.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate({\n                from: value.get(),\n                to: v,\n                velocity: value.getVelocity(),\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\nexport { useSpring };\n",
    "/**\n * @file Scroller.js\n */\nimport { createRef, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport ResizeObserver from 'resize-observer-polyfill'\nimport { useTransform, useSpring, motion, useScroll } from 'framer-motion'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport s from './Scroller.module.css'\n\nconst Scroller = ({\n  tagName: Tag = motion.div,\n  className = '',\n  variant = 'default',\n  children = '',\n  damping = 15,\n  mass = 0.15,\n  stiffness = 25,\n  disable = false,\n  debug = true,\n  scrollRef = createRef(),\n  ...rest\n}) => {\n  // page scrollable height based on content length\n  const [pageHeight, setPageHeight] = useState(0)\n\n  // update scrollable height when browser is resizing\n  const resizePageHeight = useCallback((entries) => {\n    for (let entry of entries) {\n      setPageHeight(entry.contentRect.height)\n    }\n  }, [])\n\n  // observe when browser is resizing\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver((entries) =>\n      resizePageHeight(entries)\n    )\n    scrollRef && resizeObserver.observe(scrollRef.current)\n    return () => resizeObserver.disconnect()\n  }, [scrollRef, resizePageHeight])\n\n  const { scrollY } = useScroll() // measures how many pixels user has scrolled vertically\n  // as scrollY changes between 0px and the scrollable height, create a negative scroll value...\n  // ... based on current scroll position to translateY the document in a natural way\n  const transform = useTransform(scrollY, [0, pageHeight], [0, -pageHeight])\n  const physics = { damping, mass, stiffness } // easing of smooth scroll\n  const spring = useSpring(transform, physics) // apply easing to the negative scroll value\n\n  return (\n    <>\n      <Tag\n        ref={scrollRef}\n        id=\"scroll-container\"\n        className={`${s.scroller} ${\n          s[`scroller__${variant}`]\n        } ${className} scroll-container pointer-events-auto fixed left-0 right-0 z-0 will-change-transform`}\n        {...rest}\n        style={disable ? null : { y: spring }} // translateY of scroll container using negative scroll value\n      >\n        {children}\n      </Tag>\n      {/* blank div that has a dynamic height based on the content's inherent height */}\n      {/* this is neccessary to allow the scroll container to scroll... */}\n      {/* ... using the browser's native scroll bar */}\n      {scrollRef.current && pageHeight ? (\n        <div\n          className=\"pointer-events-none\"\n          style={\n            disable || !scrollerEnabled\n              ? { height: '0px' }\n              : { height: `${pageHeight}px` }\n          }\n        />\n      ) : null}\n    </>\n  )\n}\n\nScroller.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default Scroller\n",
    "/**\n * Scroller.jsx\n */\nimport React from 'react';\n\n// Component(s)\nimport Scroller from './Scroller';\nexport default {\n  title: 'Scroller',\n  component: Scroller,\n  // Sets the layout parameter component wide.\n  parameters: {\n    layout: 'centered'\n  }\n};\nexport const Default = () => <Scroller />;\nDefault.storyName = 'default';\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"() => <Scroller />\",\n    ...Default.parameters?.storySource\n  }\n};"
  ],
  "names": [
    "useSpring",
    "source",
    "config",
    "isStatic",
    "useContext",
    "MotionConfigContext",
    "activeSpringAnimation",
    "useRef",
    "value",
    "useMotionValue",
    "isMotionValue",
    "useMemo",
    "v",
    "set",
    "animate",
    "useOnChange",
    "Scroller",
    "Tag",
    "motion",
    "className",
    "variant",
    "children",
    "damping",
    "mass",
    "stiffness",
    "disable",
    "debug",
    "scrollRef",
    "createRef",
    "rest",
    "pageHeight",
    "setPageHeight",
    "useState",
    "resizePageHeight",
    "useCallback",
    "entries",
    "entry",
    "useLayoutEffect",
    "resizeObserver",
    "ResizeObserver",
    "scrollY",
    "useScroll",
    "transform",
    "useTransform",
    "spring",
    "jsxs",
    "Fragment",
    "jsx",
    "s",
    "PropTypes",
    "Scroller$1",
    "Scroller_stories",
    "Default",
    "_a"
  ],
  "mappings": "qhBA0BA,SAASA,EAAUC,EAAQC,EAAS,GAAI,CACpC,KAAM,CAAE,SAAAC,CAAQ,EAAKC,EAAU,QAAA,WAACC,CAAmB,EAC7CC,EAAwBC,iBAAO,IAAI,EACnCC,EAAQC,EAAeC,EAAcT,CAAM,EAAIA,EAAO,MAAQA,CAAM,EAC1EU,OAAAA,EAAAA,QAAAA,QAAQ,IACGH,EAAM,OAAO,CAACI,EAAGC,IAKhBV,EACOU,EAAID,CAAC,GACZN,EAAsB,SACtBA,EAAsB,QAAQ,OAElCA,EAAsB,QAAUQ,EAAQ,CACpC,KAAMN,EAAM,IAAK,EACjB,GAAII,EACJ,SAAUJ,EAAM,YAAa,EAC7B,GAAGN,EACH,SAAUW,CAC1B,CAAa,EACML,EAAM,MAChB,EACF,CAAC,KAAK,UAAUN,CAAM,CAAC,CAAC,EAC3Ba,EAAYd,EAASW,GAAMJ,EAAM,IAAI,WAAWI,CAAC,CAAC,CAAC,EAC5CJ,CACX,+FC1CAQ,EAAA,CAAA,CACA,QAAAC,EAAAC,EAAA,IACA,UAAAC,EAAA,GACA,QAAAC,EAAA,UACA,SAAAC,EAAA,GACA,QAAAC,EAAA,GACA,KAAAC,EAAA,IACA,UAAAC,EAAA,GACA,QAAAC,EAAA,GACA,MAAAC,EAAA,GACA,UAAAC,EAAAC,EAAAA,QAAAA,UAAA,KACAC,CACA,IAAA,CAEA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,mBAAA,CAAA,EAGAC,EAAAC,sBAAAC,GAAA,CACA,QAAAC,KAAAD,EACAJ,EAAAK,EAAA,YAAA,MAAA,CAEA,EAAA,CAAA,CAAA,EAGAC,EAAA,IAAA,CACA,MAAAC,EAAA,IAAAC,EAAAJ,GACAF,EAAAE,CAAA,CAAA,EAEA,OAAAR,GAAAW,EAAA,QAAAX,EAAA,OAAA,EACA,IAAAW,EAAA,YAAA,EACA,CAAAX,EAAAM,CAAA,CAAA,EAEA,KAAA,CAAA,QAAAO,GAAAC,IAGAC,EAAAC,EAAAH,EAAA,CAAA,EAAAV,CAAA,EAAA,CAAA,EAAA,CAAAA,CAAA,CAAA,EAEAc,EAAA5C,EAAA0C,EADA,CAAA,QAAApB,EAAA,KAAAC,EAAA,UAAAC,CAAA,CACA,EAEA,OAEAqB,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAAA9B,EAAA,CACA,IAAAU,EACA,GAAA,mBACA,UAAA,GAAAqB,EAAA,YACAA,EAAA,aAAA5B,QACAD,wFACA,GAAAU,EACA,MAAAJ,EAAA,KAAA,CAAA,EAAAmB,CAAA,EAEA,SAAAvB,CAAA,CACA,EAIAM,EAAA,SAAAG,EACAiB,EAAA,MAAA,CACA,UAAA,sBACA,MACAtB,GAAA,CAAA,gBACA,CAAA,OAAA,OACA,CAAA,OAAA,GAAAK,KAAA,CAAA,CAAA,EAGA,IACA,CAAA,CAAA,CAEA,EAEAd,EAAA,UAAA,CACA,QAAAiC,EAAA,QAAA,OACA,UAAAA,EAAA,QAAA,OACA,QAAAA,EAAA,QAAA,MAAA,CAAA,SAAA,CAAA,EACA,SAAAA,EAAA,QAAA,IACA,EAEA,MAAAC,EAAAlC,y3BChFA,MAAAmC,GAAA,CACA,MAAA,WACA,UAAAnC,EAEA,WAAA,CACA,OAAA,UACA,CACA,EACAoC,EAAA,IAAAL,EAAA/B,EAAA,EAAA,EACAoC,EAAA,UAAA,gBACAA,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,YAAA,CACA,OAAA,qBACA,IAAAC,EAAAD,EAAA,aAAA,YAAAC,EAAA,WACA,CACA,EAAAD,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"
}
