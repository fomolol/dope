{
  "version": 3,
  "file": "ShuffleText.stories-dba8b3a4.js",
  "sources": [
    "../../node_modules/classnames/index.js",
    "../../src/components/ShuffleText/ShuffleText.jsx",
    "../../src/components/ShuffleText/ShuffleText.stories.jsx"
  ],
  "sourcesContent": [
    "/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n",
    "/**\n * @file ShuffleText.js\n */\nimport { useState, useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport s from './ShuffleText.module.css'\n\nconst ShuffleText = ({\n  tagName: Tag = 'h2',\n  className = 'text-white transition-all duration-1000 ease-out font-stolzl hover:text-purple-400',\n  variant = 'default',\n  defaultText,\n  hoverText,\n  characters: _characters = '█▅▉▄▋▃▋▓▔▛▟▞▝▜▕▒▐',\n}) => {\n  const [targetText, setTargetText] = useState(defaultText)\n  const [randomString, setRandomString] = useState(defaultText)\n\n  const characters = useRef(_characters)\n  const currentLength = useRef(0)\n  const infoArray = useRef([])\n\n  /**\n   * generateRandomString\n   * Generates an initial random string to be used as the target text.\n   */\n  const generateRandomString = useCallback(() => {\n    let string = ''\n    while (string.length < currentLength.current) {\n      string += characters.current.charAt(\n        Math.floor(Math.random() * characters.current.length)\n      )\n    }\n    setRandomString(string)\n  }, [])\n\n  /**\n   * animateFadeBuffer\n   * Generates a random string of the same length as the target text.\n   */\n  const animateFadeBuffer = useCallback(() => {\n    if (!infoArray.current.length) {\n      infoArray.current = []\n\n      for (let i = 0; i < targetText.length; i++) {\n        infoArray.current.push({\n          countdown: Math.floor(Math.random() * 12) + 1,\n          correctLetter: targetText.charAt(i),\n        })\n      }\n    }\n\n    let useRandomCharacter = false\n    let string = ''\n\n    for (let i = 0; i < infoArray.current.length; i++) {\n      let fader = infoArray.current[i]\n\n      if (fader.countdown > 0) {\n        useRandomCharacter = true\n\n        fader.countdown--\n\n        string += characters.current.charAt(\n          Math.floor(Math.random() * characters.current.length)\n        )\n      } else {\n        string += fader.correctLetter\n      }\n    }\n\n    setRandomString(string)\n\n    if (useRandomCharacter === true) {\n      setTimeout(animateFadeBuffer, 50)\n    } else {\n      currentLength.current = 0\n      infoArray.current = []\n    }\n  }, [targetText])\n\n  /**\n   * animateIn\n   * Sets the target text to the hover text.\n   */\n  const animateIn = useCallback(() => {\n    if (currentLength.current < targetText.length) {\n      currentLength.current += 2\n\n      if (currentLength.current > targetText.length) {\n        currentLength.current = targetText.length\n      }\n\n      generateRandomString()\n\n      setTimeout(animateIn, 20)\n    } else {\n      setTimeout(animateFadeBuffer, 20)\n    }\n  }, [animateFadeBuffer, generateRandomString, targetText])\n\n  useLayoutEffect(() => {\n    animateIn()\n  }, [animateIn])\n\n  return (\n    <Tag\n      className={classNames(className, { hoverFont: targetText === hoverText })}\n      onMouseEnter={() => setTargetText(hoverText)}\n      onMouseLeave={() => setTargetText(defaultText)}\n    >\n      {randomString}\n    </Tag>\n  )\n}\n\nShuffleText.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default ShuffleText\n",
    "/**\n * ShuffleText.jsx\n */\nimport React from 'react';\n\n// Component(s)\nimport ShuffleText from './ShuffleText';\nexport default {\n  title: 'ShuffleText',\n  component: ShuffleText,\n  // Sets the layout parameter component wide.\n  parameters: {\n    layout: 'centered'\n  }\n};\nexport const Default = () => <ShuffleText />;\nDefault.storyName = 'default';\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"() => <ShuffleText />\",\n    ...Default.parameters?.storySource\n  }\n};"
  ],
  "names": [
    "hasOwn",
    "classNames",
    "classes",
    "i",
    "arg",
    "argType",
    "inner",
    "key",
    "module",
    "ShuffleText",
    "Tag",
    "className",
    "variant",
    "defaultText",
    "hoverText",
    "_characters",
    "targetText",
    "setTargetText",
    "useState",
    "randomString",
    "setRandomString",
    "characters",
    "useRef",
    "currentLength",
    "infoArray",
    "generateRandomString",
    "useCallback",
    "string",
    "animateFadeBuffer",
    "useRandomCharacter",
    "fader",
    "animateIn",
    "useLayoutEffect",
    "jsx",
    "PropTypes",
    "ShuffleText$1",
    "ShuffleText_stories",
    "Default",
    "_a"
  ],
  "mappings": "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"
}
