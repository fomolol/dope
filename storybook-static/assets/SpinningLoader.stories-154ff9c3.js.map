{"version":3,"file":"SpinningLoader.stories-154ff9c3.js","sources":["../../src/components/SpinningLoader/SpinningLoader.jsx","../../src/components/SpinningLoader/SpinningLoader.stories.jsx"],"sourcesContent":["/**\n * @file SpinningLoader.js\n * @see https://codepen.io/hakimel/pen/KanIi?editors=0010\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode\n */\nimport { useEffect, useCallback, useRef, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useCanvas, useEventListener, useMouse } from '@fomolol/tacklebox'\n\nimport styles from './SpinningLoader.module.css'\n\nlet SCREEN_WIDTH, SCREEN_HEIGHT\nconst RADIUS = 70\n\nlet RADIUS_SCALE = 1\nconst RADIUS_SCALE_MIN = 1\nconst RADIUS_SCALE_MAX = 1.5\n\nconst QUANTITY = 25\n\n/**\n * createParticles\n * @param {object} mouse\n * @return {array}\n */\nconst createParticles = (mouse) => {\n  const particles = []\n\n  const { x, y } = useMouse()\n\n  for (var i = 0; i < QUANTITY; i++) {\n    var particle = {\n      size: 1,\n      position: { x, y },\n      offset: { x: 0, y: 0 },\n      shift: { x, y },\n      speed: 0.01 + Math.random() * 0.04,\n      targetSize: 1,\n      fillColor: '#' + ((Math.random() * 0x19e68c + 0xf59b23) | 0).toString(16),\n      orbit: RADIUS * 0.5 + RADIUS * 0.5 * Math.random(),\n    }\n\n    particles.push(particle)\n  }\n  return particles\n}\n\n/**\n * loop\n * @param {array} particles\n * @param {object} mouse\n * @param {bool} transparent is whether the background is transparent\n * @param {object} ctx\n * @return void\n */\nconst loop =\n  (particles, mouse, transparent = false) =>\n  (ctx) => {\n    let { x, y, clientX, clientY, screenX, screenY, isDown } = mouse\n    if (!clientX || !clientY) {\n      x = window.innerWidth - SCREEN_WIDTH * 0.5\n      y = window.innerHeight - SCREEN_HEIGHT * 0.5\n    } else {\n      x = clientX - (window.innerWidth - SCREEN_WIDTH) * 0.5\n      y = clientY - (window.innerHeight - SCREEN_HEIGHT) * 0.5\n    }\n\n    if (isDown) {\n      RADIUS_SCALE += (RADIUS_SCALE_MAX - RADIUS_SCALE) * 0.02\n    } else {\n      RADIUS_SCALE -= (RADIUS_SCALE - RADIUS_SCALE_MIN) * 0.02\n    }\n\n    RADIUS_SCALE = Math.min(RADIUS_SCALE, RADIUS_SCALE_MAX)\n    if (!transparent) {\n      // ctx.globalCompositeOperation = 'exclusion'\n      ctx.fillStyle = 'rgba(0,0,0,0.05)'\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      // ctx.globalCompositeOperation = 'overlay'\n    } else {\n      // ctx.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)\n    }\n\n    for (let i = 0, len = particles.length; i < len; i++) {\n      var particle = particles[i]\n\n      var lp = { x: particle.position.x, y: particle.position.y }\n\n      // Rotation\n      particle.offset.x += particle.speed\n      particle.offset.y += particle.speed\n\n      // Follow mouse with some lag\n      particle.shift.x += (x - particle.shift.x) * particle.speed\n      particle.shift.y += (y - particle.shift.y) * particle.speed\n\n      // Apply position\n      particle.position.x =\n        particle.shift.x +\n        Math.cos(i + particle.offset.x) * (particle.orbit * RADIUS_SCALE)\n      particle.position.y =\n        particle.shift.y +\n        Math.sin(i + particle.offset.y) * (particle.orbit * RADIUS_SCALE)\n\n      // Limit to screen bounds\n      particle.position.x = Math.max(\n        Math.min(particle.position.x, SCREEN_WIDTH),\n        0\n      )\n      particle.position.y = Math.max(\n        Math.min(particle.position.y, SCREEN_HEIGHT),\n        0\n      )\n\n      particle.size += (particle.targetSize - particle.size) * 0.05\n\n      if (Math.round(particle.size) == Math.round(particle.targetSize)) {\n        particle.targetSize = 1 + Math.random() * 7\n      }\n\n      ctx.beginPath()\n      ctx.fillStyle = particle.fillColor\n      ctx.strokeStyle = particle.fillColor\n      ctx.lineWidth = particle.size\n      ctx.moveTo(lp.x, lp.y)\n      ctx.lineTo(particle.position.x, particle.position.y)\n      ctx.stroke()\n      ctx.arc(\n        particle.position.x,\n        particle.position.y,\n        particle.size / 2,\n        0,\n        Math.PI * 2,\n        true\n      )\n      ctx.fill()\n    }\n  }\n\nconst SpinningLoader = ({\n  tagName: Tag,\n  className,\n  variant,\n  enterDelay = 100,\n  leaveDelay = 100,\n}) => {\n  const container = useRef()\n\n  const mouse = useMouse(container, {\n    enterDelay,\n    leaveDelay,\n  })\n\n  // Event handler utilizing useCallback ...\n  // ... so that reference never changes.\n  // const mouseMoveHandler = useCallback(\n  //   ({ clientX, clientY }) => {\n  //     // setMouse({\n  //     //   isDown: mouseDetails.isDown,\n  //     //   x: clientX - (window.innerWidth - SCREEN_WIDTH) * 0.5,\n  //     //   y: clientY - (window.innerHeight - SCREEN_HEIGHT) * 0.5,\n  //     // })\n  //   },\n  //   [mouse]\n  // )\n\n  // TODO: Maybe add these later.\n  const touchStartHandler = useCallback(({ touches, preventDefault }) => {\n    if (touches.length == 1) {\n      preventDefault()\n\n      // setMouse({\n      //   isDown: mouseDetails.isDown,\n      //   x: touches[0].pageX - (window.innerWidth - SCREEN_WIDTH) * 0.5,\n      //   y: touches[0].pageY - (window.innerHeight - SCREEN_HEIGHT) * 0.5,\n      // })\n    }\n  }, [])\n\n  const touchMoveHandler = useCallback(({ touches, preventDefault }) => {\n    if (touches.length == 1) {\n      preventDefault()\n\n      // setMouse({\n      //   isDown: mouseDetails.isDown,\n      //   x: touches[0].pageX - (window.innerWidth - SCREEN_WIDTH) * 0.5,\n      //   y: touches[0].pageY - (window.innerHeight - SCREEN_HEIGHT) * 0.5,\n      // })\n    }\n  }, [])\n\n  const windowResizeHandler = useCallback(() => {\n    SCREEN_WIDTH = window.innerWidth\n    SCREEN_HEIGHT = window.innerHeight\n\n    canvasRef.current.width = SCREEN_WIDTH\n    canvasRef.current.height = SCREEN_HEIGHT\n  }, [canvasRef])\n\n  //   // Add event listener using our hook\n  // useEventListener('mousemove', mouseMoveHandler)\n  // useEventListener('touchstart', touchStartHandler)\n  // useEventListener('touchmove', touchMoveHandler)\n  useEventListener('resize', windowResizeHandler)\n\n  useEffect(() => {\n    // Set the global screen dimensions\n    SCREEN_WIDTH = window.innerWidth\n    SCREEN_HEIGHT = window.innerHeight\n    canvasRef.current.width = SCREEN_WIDTH\n    canvasRef.current.height = SCREEN_HEIGHT\n    // console.log('particles', particles)\n  }, [])\n\n  const particles = useMemo(() => createParticles(mouse), [])\n\n  const canvasRef = useCanvas(loop(particles, mouse))\n\n  // useEffect(() => {\n  //   const ctx = canvasRef.current.getContext('2d')\n  //   const interval = setInterval(() => {\n  //     console.log('Clearing the canvas')\n  //     // Update the blend mode\n  //     // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  //     // ctx.globalCompositeOperation = 'source-over'\n  //     // ctx.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)\n  //     ctx.fillStyle = 'rgba(255,255,255,0.05)'\n  //     ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  //   }, 1000)\n  //   return () => clearInterval(interval)\n  // })\n\n  return (\n    <Tag\n      className={`${styles.spinning_loader} ${\n        styles[`spinning_loader__${variant}`]\n      } ${className}`}\n      ref={container}\n    >\n      <canvas\n        style={{\n          backgroundColor: 'transparent',\n          width: '100vw',\n          height: '100vh',\n        }}\n        ref={canvasRef}\n      />\n    </Tag>\n  )\n}\n\nSpinningLoader.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nSpinningLoader.defaultProps = {\n  tagName: 'div',\n  className: 'absolute z-40 top-0 bg-black w-screen h-screen ', // blend-hard-light\n  variant: 'default',\n  children: '',\n}\n\nexport default SpinningLoader\n","/**\n * SpinningLoader.jsx\n */\nimport React from 'react';\n\n// Component(s)\nimport SpinningLoader from './SpinningLoader';\nexport default {\n  title: 'SpinningLoader',\n  component: SpinningLoader,\n  // Sets the layout parameter component wide.\n  parameters: {\n    layout: 'centered'\n  }\n};\nexport const Default = () => <SpinningLoader />;\nDefault.storyName = 'default';\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"() => <SpinningLoader />\",\n    ...Default.parameters?.storySource\n  }\n};"],"names":["SCREEN_WIDTH","SCREEN_HEIGHT","RADIUS","RADIUS_SCALE","RADIUS_SCALE_MIN","RADIUS_SCALE_MAX","QUANTITY","createParticles","mouse","particles","x","y","useMouse","i","particle","loop","transparent","ctx","clientX","clientY","screenX","screenY","isDown","len","lp","SpinningLoader","Tag","className","variant","enterDelay","leaveDelay","container","useRef","useCallback","touches","preventDefault","windowResizeHandler","canvasRef","useEventListener","useEffect","useMemo","useCanvas","jsx","styles","PropTypes","SpinningLoader$1","SpinningLoader_stories","Default","_a"],"mappings":"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"}