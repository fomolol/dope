{
  "version": 3,
  "file": "Text.stories-e9c13d3a.js",
  "sources": [
    "../../src/components/Text/SplitFade.jsx",
    "../../src/components/Text/SplitOverflow.jsx",
    "../../src/components/Text/Text.jsx",
    "../../src/components/Text/Text.stories.jsx"
  ],
  "sourcesContent": [
    "/**\n * @file SplitFade\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { motion } from 'framer-motion'\n\nconst SplitFade = ({\n  children,\n  letterWrapperClassname = 'cursor-pointer relative white-space-pre',\n  hiddenLetterClassname = 'opacity-0 invisible',\n  roundLetterClassname = 'inline-block h-full left-0 absolute top-0 origin-right w-full',\n  spaceLetterClassname = 'inline-block font-stolzl h-full left-0 absolute top-0 origin-left w-full',\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n\n  const rounded = {\n    initial: {\n      opacity: 0,\n      transform: 'translateY(0%)',\n    },\n    animate: {\n      opacity: isHovered ? 0 : 1,\n      transform: isHovered ? 'translateY(-50%)' : 'translateY(0%)',\n    },\n    exit: {\n      opacity: 0,\n      transform: 'translateY(0%)',\n    },\n    transition: {\n      ease: 'easeOut',\n      duration: 1,\n    },\n  }\n\n  const square = {\n    initial: {\n      opacity: 0,\n      transform: 'translateY(50%)',\n    },\n    animate: {\n      opacity: isHovered ? 1 : 0,\n      transform: isHovered ? 'translateY(0%)' : 'translateY(50%)',\n    },\n    exit: {\n      opacity: 0,\n      transform: 'translateY(50%)',\n    },\n    transition: {\n      ease: 'easeOut',\n      duration: 0.8,\n    },\n  }\n\n  return (\n    <span className={letterWrapperClassname}>\n      <span className={hiddenLetterClassname}>{children}</span>\n\n      <motion.span\n        className={roundLetterClassname}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n        variants={rounded}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {children}\n      </motion.span>\n\n      <motion.span\n        className={spaceLetterClassname}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n        variants={square}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {children}\n      </motion.span>\n    </span>\n  )\n}\n\nexport default SplitFade\n",
    "/**\n * @file SplitOverflow\n */\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { motion } from 'framer-motion'\n\nconst SplitOverflow = ({\n  children,\n  roundLetterClassname = 'inline-block h-full left-0 absolute top-0 origin-right w-full',\n  spaceLetterClassname = 'inline-block font-stolzl h-full left-0 absolute top-0 origin-left w-full',\n  letterWrapperClassname = 'cursor-pointer relative white-space-pre',\n  hiddenLetterClassname = 'opacity-0 invisible',\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n\n  const rounded = {\n    initial: {\n      transform: 'translateY(0%) rotate(0deg)',\n    },\n    animate: {\n      transform: isHovered\n        ? 'translateY(-180%) rotate(-8deg)'\n        : 'translateY(0%) rotate(0deg)',\n    },\n    exit: {\n      transform: 'translateY(0%) rotate(0deg)',\n    },\n    transition: {\n      ease: 'easeOut',\n      duration: 1,\n    },\n  }\n\n  const square = {\n    initial: {\n      transform: 'translateY(100%) rotate(15deg)',\n    },\n    animate: {\n      transform: isHovered\n        ? 'translateY(0%) rotate(0deg)'\n        : 'translateY(100%) rotate(15deg)',\n    },\n    exit: {\n      transform: 'translateY(100%) rotate(15deg)',\n    },\n    transition: {\n      ease: 'easeOut',\n      duration: 0.8,\n    },\n  }\n\n  return (\n    <span className={letterWrapperClassname}>\n      <span className={hiddenLetterClassname}>{children}</span>\n      <span\n        className={`${roundLetterClassname} overflow-hidden w-full h-full`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <motion.span\n          className={roundLetterClassname}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n          variants={rounded}\n          transition={{\n            ease: 'easeOut',\n            duration: 1,\n          }}\n        >\n          {children}\n        </motion.span>\n        <motion.span\n          className={spaceLetterClassname}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n          variants={square}\n          transition={{\n            ease: 'easeOut',\n            duration: 0.8,\n          }}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          {children}\n        </motion.span>\n      </span>\n    </span>\n  )\n}\n\nexport default SplitOverflow\n",
    "/**\n * @file Text.js\n */\nimport React, { useState, useRef} from 'react'\nimport PropTypes from 'prop-types'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport styles from './Text.module.css'\n\nimport SplitFade from './SplitFade'\nimport SplitOverflow from './SplitOverflow'\n\nconst Text = ({\n  tagName: Tag = 'h2',\n  className = '',\n  variant = 'default',\n  children = '',\n  type,\n}) => {\n  const text = useRef()\n  const [newText, setNewText] = useState(null)\n  const hasTextSpans = useRef(false)\n\n  const innerHtml = useRef()\n\n  useLayoutEffect(() => {\n    if (text.current) {\n      innerHtml.current = text.current?.innerHTML.replaceAll('<br>', ' _ ')\n    }\n  }, [text])\n\n  useLayoutEffect(() => {\n    if (\n      innerHtml.current &&\n      !newText &&\n      text.current &&\n      !hasTextSpans.current\n    ) {\n      if (type === 'fade-letter') {\n        const letters = innerHtml.current.split('')\n        setNewText(letters)\n      } else if (type === 'fade-word') {\n        const words = innerHtml.current.split(' ')\n        setNewText(words)\n      } else if (type === 'fade-block') {\n        setNewText('hide children')\n      } else if (type === 'overflow-word') {\n        const words = innerHtml.current.split(' ')\n        setNewText(words)\n      }\n    }\n  }, [text, innerHtml, type])\n\n  const renderText = useMemo(\n    () =>\n      newText && type === 'fade-letter' ? (\n        newText?.map((letter, index) => (\n          letter === '_' ? <br /> : <SplitFade key={`fade-letter-${index}`}>{letter || ' '}</SplitFade>\n        ))\n      ) : type === 'fade-word' ? (\n        newText?.map((word, index) => (\n          <>\n            {word === '_' ? (\n              <br />\n            ) : (\n              <>\n                <SplitFade>{word}</SplitFade>\n                <SplitFade> </SplitFade>\n              </>\n            )}\n          </>\n        ))\n      ) : type === 'fade-block' ? (\n        <SplitFade>{children}</SplitFade>\n      ) : type === 'overflow-word' ? (\n        newText?.map((word, index) => (\n         word === '_' ? (\n              <br />\n            ) : (\n              <span key={`overflow-word-${index}`}>\n                <SplitOverflow>{word}</SplitOverflow>\n                <SplitOverflow> </SplitOverflow>\n              </span>\n            )\n        ))\n      ) : null,\n    [newText, type, children]\n  )\n\n  return (\n    <Tag\n      ref={text}\n      className={`${styles.text} ${styles[`text__${variant}`]} ${className}`}\n    >\n      {!renderText ? children : renderText}\n    </Tag>\n  )\n}\n\nText.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default Text\n",
    "/**\n * Text.jsx\n */\nimport React from 'react';\n\n// Component(s)\nimport Text from './Text';\nexport default {\n  title: 'Text',\n  component: Text,\n  // Sets the layout parameter component wide.\n  parameters: {\n    layout: 'centered'\n  }\n};\nexport const Default = () => <Text />;\nDefault.storyName = 'default';\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"() => <Text />\",\n    ...Default.parameters?.storySource\n  }\n};"
  ],
  "names": [
    "SplitFade",
    "children",
    "letterWrapperClassname",
    "hiddenLetterClassname",
    "roundLetterClassname",
    "spaceLetterClassname",
    "isHovered",
    "setIsHovered",
    "useState",
    "rounded",
    "square",
    "jsxs",
    "jsx",
    "motion",
    "SplitOverflow",
    "Text",
    "Tag",
    "className",
    "variant",
    "type",
    "text",
    "useRef",
    "newText",
    "setNewText",
    "hasTextSpans",
    "innerHtml",
    "useLayoutEffect",
    "_a",
    "letters",
    "words",
    "renderText",
    "letter",
    "index",
    "word",
    "Fragment",
    "styles",
    "PropTypes",
    "Text$1",
    "Text_stories",
    "Default"
  ],
  "mappings": "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"
}
