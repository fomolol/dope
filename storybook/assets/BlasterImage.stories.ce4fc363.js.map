{"version":3,"file":"BlasterImage.stories.ce4fc363.js","sources":["../../src/components/BlasterImage/BlasterImage.jsx"],"sourcesContent":["/**\n * @file BlasterImage.js\n * Handles flashing multiple images based on a time interval\n */\nimport * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport s from './BlasterImage.module.css'\n\n/**\n * sleep\n * @param {*} milliseconds\n * @returns\n */\nconst sleep = (milliseconds) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nconst BlasterImage = ({\n  tagName: Tag = 'div',\n  className = 'absolute inset-0 object-cover w-full h-screen',\n  variant = 'default',\n  children = '',\n  items = [\n    '/img/blaster/0.jpeg',\n    '/img/blaster/1.jpeg',\n    '/img/blaster/0.jpeg',\n    '/img/blaster/1.jpeg',\n    '/img/blaster/2.jpeg',\n    '/img/blaster/0.jpeg',\n    '/img/blaster/1.jpeg',\n    '/img/blaster/2.jpeg',\n  ],\n  seconds = 0.44,\n}) => {\n  const millis = seconds * 1000\n  const [counter, setCounter] = React.useState(0)\n\n  React.useEffect(() => {\n    const update = async () => {\n      await sleep(millis)\n      let tCounter = counter + 1\n      if (tCounter >= items.length - 1) {\n        tCounter = 0\n      }\n      setCounter(tCounter)\n    }\n    update()\n  }, [counter])\n\n  return (\n    <Tag\n      className={`${s.blaster_image} ${\n        s[`blaster_image__${variant}`]\n      } ${className}`}\n    >\n      <img\n        src={items[counter]}\n        key={`blast-img-${counter}`}\n        alt=\"\"\n        className=\"object-cover w-full min-h-screen min-\"\n      />\n    </Tag>\n  )\n}\n\nBlasterImage.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default BlasterImage\n"],"names":["sleep","milliseconds","Promise","resolve","setTimeout","BlasterImage","__name","tagName","Tag","className","variant","children","items","seconds","millis","counter","setCounter","React","tCounter","length","s","blaster_image","propTypes","PropTypes","string","oneOf","node","BlasterImage$1"],"mappings":"4VAcAA,EAAAC,EAAAA,GACA,IAAAC,QAAAC,GAAAC,WAAAD,EAAAF,CAAA,CAAA,EADAA,SAIAI,EAAAC,EAAA,CAAA,CACAC,QAAAC,EAAA,MACAC,UAAAA,EAAA,gDACAC,QAAAA,EAAA,UACAC,SAAAA,EAAA,GACAC,MAAAA,EAAA,CACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBAAA,EAEAC,QAAAA,EAAA,GACA,IAAA,CACA,MAAAC,EAAAD,EAAA,IACA,CAAAE,EAAAC,CAAA,EAAAC,mBAAA,CAAA,EAEAA,OAAAA,EAAAA,QAAAA,UAAA,IAAA,CACAX,EAAA,SAAA,CACA,MAAAN,EAAAc,CAAA,EACA,IAAAI,EAAAH,EAAA,EACAG,GAAAN,EAAAO,OAAA,IACAD,EAAA,GAEAF,EAAAE,CAAA,CAAA,EANA,WAQA,EACA,CAAAH,CAAA,CAAA,IAGAP,EAAA,CACA,UAAA,GAAAY,EAAAC,iBACAD,EAAA,kBAAAV,QACAD,IAAA,WAEA,MAAA,CACA,IAAAG,EAAAG,GAEA,IAAA,GACA,UAAA,uCAAA,EAFA,aAAAA,GAAA,CAAA,CAIA,CAEA,EA9CA,gBAgDAV,EAAAiB,UAAA,CACAf,QAAAgB,EAAAC,QAAAA,OACAf,UAAAc,EAAAC,QAAAA,OACAd,QAAAa,EAAAA,QAAAE,MAAA,CAAA,SAAA,CAAA,EACAd,SAAAY,EAAAG,QAAAA,IACA,EAEA,MAAAC,EAAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}