{"version":3,"file":"Scroller.stories.9bff8b1e.js","sources":["../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-spring.mjs","../../src/components/Scroller/Scroller.jsx"],"sourcesContent":["import { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate({\n                from: value.get(),\n                to: v,\n                velocity: value.getVelocity(),\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\nexport { useSpring };\n","/**\n * @file Scroller.js\n */\nimport { useState, createRef, useCallback, useRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useMotionValue, useSpring, motion } from 'framer-motion'\nimport { useLayoutEffect } from '@fomolol/tacklebox'\n\nimport s from './Scroller.module.css'\n\nconst Scroller = ({\n  tagName: Tag = motion.div,\n  className = '',\n  variant = 'default',\n  children = '',\n  damping = 15,\n  mass = 0.15,\n  stiffness = 25,\n  disable = false,\n  debug = true,\n  scrollRef = createRef(),\n  ...rest\n}) => {\n  const [contentHeight, setContentHeight] = useState()\n  const scrollY = useMotionValue(-window.pageYOffset || -window.scrollY)\n\n  const physics = {\n    damping,\n    mass,\n    stiffness,\n  } // easing of smooth scroll\n  const y = useSpring(scrollY, physics) // apply easing to the negative scroll value\n\n  const getContentHeight = useCallback((entries) => {\n    for (let entry of entries) {\n      const entryHeight = entry.contentRect.height\n      setContentHeight(entryHeight)\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollRef.current\n    let resizeObserver = new ResizeObserver((entries) =>\n      getContentHeight(entries)\n    )\n    resizeObserver.observe(scrollContainer)\n    return () => resizeObserver.disconnect()\n  }, [getContentHeight])\n\n  useEffect(() => {\n    const trackScroll = () => {\n      if (window.scrollY || window.pageYOffset < contentHeight) {\n        scrollY.set(-window.pageYOffset || -window.scrollY)\n      }\n    }\n    window.addEventListener('scroll', trackScroll)\n    return () => window.removeEventListener('scroll', trackScroll)\n  }, [scrollY])\n\n  return (\n    <>\n      <Tag\n        id=\"scroll-container\"\n        className={`${s.scroller} ${\n          s[`scroller__${variant}`]\n        } ${className} pointer-events-auto fixed left-0 right-0 z-0 will-change-transform`}\n        {...rest}\n        style={disable ? null : { y }} // translateY of scroll container using negative scroll value\n        ref={scrollRef}\n      >\n        {children}\n      </Tag>\n      {/* blank div that has a dynamic height based on the content's inherent height */}\n      {/* this is neccessary to allow the scroll container to scroll... */}\n      {/* ... using the browser's native scroll bar */}\n      {scrollRef.current && contentHeight ? (\n        <div\n          className=\"pointer-events-none\"\n          style={disable ? { height: '0px' } : { height: `${contentHeight}px` }}\n        />\n      ) : null}\n    </>\n  )\n}\n\nScroller.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default Scroller\n"],"names":["useSpring","source","config","isStatic","useContext","MotionConfigContext","activeSpringAnimation","useRef","value","useMotionValue","isMotionValue","useMemo","v","set","animate","useOnChange","__name","Scroller","tagName","Tag","motion","div","className","variant","children","damping","mass","stiffness","disable","debug","scrollRef","createRef","rest","contentHeight","setContentHeight","useState","scrollY","window","pageYOffset","y","getContentHeight","useCallback","entries","entry","entryHeight","contentRect","height","useLayoutEffect","scrollContainer","current","resizeObserver","ResizeObserver","observe","disconnect","useEffect","trackScroll","addEventListener","removeEventListener","_Fragment","_jsx","s","scroller","propTypes","PropTypes","string","oneOf","node","Scroller$1"],"mappings":"4kBA0BA,SAASA,EAAUC,EAAQC,EAAS,GAAI,CACpC,KAAM,CAAE,SAAAC,CAAQ,EAAKC,EAAU,QAAA,WAACC,CAAmB,EAC7CC,EAAwBC,iBAAO,IAAI,EACnCC,EAAQC,EAAeC,EAAcT,CAAM,EAAIA,EAAO,MAAQA,CAAM,EAC1EU,OAAAA,EAAAA,QAAAA,QAAQ,IACGH,EAAM,OAAO,CAACI,EAAGC,IAKhBV,EACOU,EAAID,CAAC,GACZN,EAAsB,SACtBA,EAAsB,QAAQ,OAElCA,EAAsB,QAAUQ,EAAQ,CACpC,KAAMN,EAAM,IAAK,EACjB,GAAII,EACJ,SAAUJ,EAAM,YAAa,EAC7B,GAAGN,EACH,SAAUW,CAC1B,CAAa,EACML,EAAM,MAChB,EACF,CAAC,KAAK,UAAUN,CAAM,CAAC,CAAC,EAC3Ba,EAAYd,EAASW,GAAMJ,EAAM,IAAI,WAAWI,CAAC,CAAC,CAAC,EAC5CJ,CACX,CA3BSQ,EAAAhB,EAAA,2GChBTiB,EAAAD,EAAA,CAAA,CACAE,QAAAC,EAAAC,EAAAC,IACAC,UAAAA,EAAA,GACAC,QAAAA,EAAA,UACAC,SAAAA,EAAA,GACAC,QAAAA,EAAA,GACAC,KAAAA,EAAA,IACAC,UAAAA,EAAA,GACAC,QAAAA,EAAA,GACAC,MAAAA,EAAA,GACAC,UAAAA,EAAAC,EAAAA,QAAAA,UAAA,KACAC,CACA,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EACAC,EAAA3B,EAAA,CAAA4B,OAAAC,aAAA,CAAAD,OAAAD,OAAA,EAOAG,EAAAvC,EAAAoC,EALA,CACAX,QAAAA,EACAC,KAAAA,EACAC,UAAAA,CAAAA,CAEA,EAEAa,EAAAC,sBAAAC,GAAA,CACA,QAAAC,KAAAD,EAAA,CACAE,MAAAA,EAAAD,EAAAE,YAAAC,OACAZ,EAAAU,CAAA,CACA,CACA,EAAA,CAAA,CAAA,EAEAG,OAAAA,EAAA,IAAA,CACA,MAAAC,EAAAlB,EAAAmB,QACA,IAAAC,EAAA,IAAAC,eACAX,GAAAA,EAAAE,CAAA,CAAA,EAEAQ,OAAAA,EAAAE,QAAAJ,CAAA,EACA,IAAAE,EAAAG,YAAA,EACA,CAAAb,CAAA,CAAA,EAEAc,EAAAA,QAAAA,UAAA,IAAA,CACA,MAAAC,EAAAvC,EAAA,IAAA,EACAqB,OAAAD,SAAAC,OAAAC,YAAAL,IACAG,EAAAvB,IAAA,CAAAwB,OAAAC,aAAA,CAAAD,OAAAD,OAAA,CACA,EAHA,eAKAoB,cAAAA,iBAAA,SAAAD,CAAA,EACA,IAAAlB,OAAAoB,oBAAA,SAAAF,CAAA,CAAA,EACA,CAAAnB,CAAA,CAAA,IAGAsB,EAAA,CAAA,SAAA,CACAC,EAAAxC,EAAA,CACA,GAAA,mBACA,UAAA,GAAAyC,EAAAC,YACAD,EAAA,aAAArC,QACAD,uEAAA,GACAU,EACA,MAAAJ,EAAA,KAAA,CAAAW,EAAAA,CAAA,EACA,IAAAT,EAAA,SAAAN,CAEA,CAAA,EAKAM,EAAAmB,SAAAhB,IACA,MAAA,CACA,UAAA,sBACA,MAAAL,EAAA,CAAAkB,OAAA,KAAA,EAAA,CAAAA,OAAA,GAAAb,KAAA,CAAA,CAAA,EAEA,IAAA,CAAA,CACA,CAEA,EAzEA,YA2EAhB,EAAA6C,UAAA,CACA5C,QAAA6C,EAAAC,QAAAA,OACA1C,UAAAyC,EAAAC,QAAAA,OACAzC,QAAAwC,EAAAA,QAAAE,MAAA,CAAA,SAAA,CAAA,EACAzC,SAAAuC,EAAAG,QAAAA,IACA,EAEA,MAAAC,EAAAlD;;;;;;;;;;;;;;;;;;;;"}