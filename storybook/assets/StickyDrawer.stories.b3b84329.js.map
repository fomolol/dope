{"version":3,"file":"StickyDrawer.stories.b3b84329.js","sources":["../../src/components/StickyDrawer/StickyDrawer.jsx"],"sourcesContent":["/**\n * @file StickyDrawer.js\n */\nimport PropTypes from 'prop-types'\nimport { useInView } from 'react-intersection-observer'\nimport { motion } from 'framer-motion'\nimport colors from 'nice-color-palettes'\n\nimport s from './StickyDrawer.module.css'\n\nconst Container = ({\n  caption,\n  description,\n  itemHeight = '37.25rem',\n  totalItems = 6,\n  index = 0,\n  backgroundColor = '#54504b',\n  color = '#0a000f',\n}) => {\n  let top = 0\n  let bottom = 0\n  switch (index) {\n    case 0:\n      bottom = `calc((100vh - ${itemHeight}) * 5 / ${totalItems})`\n      break\n    case 1:\n      top = `calc((100vh - ${itemHeight}) / ${totalItems})`\n      bottom = `calc((100vh - ${itemHeight}) * 4 / ${totalItems})`\n      break\n    case 2:\n      top = `calc((100vh - ${itemHeight}) * 2 / ${totalItems})`\n      bottom = `calc((100vh - ${itemHeight}) / 2)`\n      break\n    case 3:\n      top = `calc((100vh - ${itemHeight}) / 2)`\n      bottom = `calc((100vh - ${itemHeight}) * 2 / ${totalItems})`\n      break\n    case 4:\n      top = `calc((100vh - ${itemHeight}) * 4 / ${totalItems})`\n      bottom = `calc((100vh - ${itemHeight}) * 1 / ${totalItems})`\n      break\n    case 5:\n      top = `calc((100vh - ${itemHeight}) * 5 / ${totalItems})`\n      break\n  }\n  return (\n    <div\n      className=\"sticky\"\n      style={{\n        top,\n        bottom,\n        height: `calc((100vh - ${itemHeight}) / ${totalItems})`,\n      }}\n    >\n      <div\n        className=\"absolute top-0 left-0 w-full\"\n        style={{\n          height: itemHeight,\n        }}\n      >\n        <div\n          className=\"item-block absolute flex w-full flex-col items-center justify-between rounded-[24px] text-center font-light leading-[1.43] before:absolute before:left-0 before:top-[0.875rem] before:right-0 before:font-serif before:text-[2vw] before:font-light before:italic before:text-white before:mix-blend-difference\"\n          style={{\n            backgroundColor,\n            color,\n            height: itemHeight,\n          }}\n        >\n          <div className=\"caption mt-[5.875rem] text-center text-[13vw] font-black leading-[1]\">\n            {caption}\n          </div>\n          <div\n            className=\"description mb-12 w-1/2 text-center text-[1.25vw] uppercase leading-[1.14]\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </div>\n      </div>\n      <style jsx>{`\n        .item-block::before {\n          content: '(0' counter(blocks) ')';\n          counter-increment: blocks;\n          /* -webkit-text-stroke: 1px #000; */\n        }\n      `}</style>\n    </div>\n  )\n}\n\nconst Placeholder = ({ totalItems = 6, itemHeight = '37.25rem' }) => {\n  return (\n    <div\n      className=\"placeholder\"\n      style={{\n        height: `calc(${itemHeight} - (100vh - ${itemHeight}) / ${totalItems})`,\n      }}\n    ></div>\n  )\n}\n\nconst Item = ({ items = [], caption, description, index }) => {\n  return (\n    <>\n      <Container\n        caption={caption}\n        description={description}\n        // backgroundColor={backgroundColor}\n        backgroundColor={colors[0][index]}\n        totalItems={items.length}\n        index={index}\n      />\n      <Placeholder totalItems={items.length} />\n    </>\n  )\n}\n\nconst StickyDrawer = ({\n  tagName: Tag = motion.div,\n  className = 'relative flex flex-col items-center justify-between w-full h-auto -mt-5',\n  variant = 'default',\n  items = [\n    {\n      caption: 'Empathize',\n      description:\n        'First, we conduct user research in order to understand your audience',\n      backgroundColor: '#54504b',\n    },\n    {\n      caption: 'Define',\n      description:\n        'Next, we&apos;ll review our research and look for flaws to resolve',\n      backgroundColor: '#e2e3dc',\n    },\n    {\n      caption: 'Brainstorm',\n      description:\n        'Then we&apos;l think of some creative ideas based around our data',\n      backgroundColor: '#a69897',\n    },\n    {\n      caption: 'Prototype',\n      description:\n        'Time to build a tactile representation that we think solves the issues',\n      backgroundColor: '#f46e48',\n    },\n    {\n      caption: 'Testing',\n      description:\n        'We&apos;ll do a test run and then collect additional data from the users',\n      backgroundColor: '#adccbf',\n    },\n    {\n      caption: 'Implement',\n      description:\n        'Finally, we&apos;ll deliver the finished product and put it into action',\n      backgroundColor: '#c3b59f',\n    },\n  ],\n  itemHeight = '37.25rem',\n  triggerOnce = false,\n}) => {\n  const { ref, inView, entry } = useInView({\n    threshold: 0.15,\n    triggerOnce: triggerOnce,\n  })\n\n  return (\n    <Tag\n      ref={ref}\n      className={`${s.sticky_drawer} ${\n        s[`sticky_drawer__${variant}`]\n      } ${className}`}\n      // style={{\n      //   paddingTop: `calc(${itemHeight} - 5.5rem)`,\n      //   paddingBottom: `calc(${itemHeight} + 5.5rem)`,\n      // }}\n    >\n      <div className=\"relative w-full h-screen\">\n        <div className=\"absolute top-0 left-0 w-full h-screen overflow-scroll overflow-touch snap-y snap-proximity\">\n          <div\n            className=\"before:border-t-none item-list block before:relative before:block before:rounded-2xl before:content-[''] after:relative after:block after:w-full after:content-['']\"\n            style={{\n              counterReset: 'blocks',\n              margin: `calc((100vh - ${itemHeight}) * -1) 0`,\n            }}\n          >\n            {items.map(({ caption, description, backgroundColor }, i) => (\n              <Item\n                key={`item-${i}`}\n                items={items}\n                index={i}\n                caption={caption}\n                description={description}\n                backgroundColor={backgroundColor}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .block::before {\n          height: calc(100vh - ${itemHeight});\n          width: calc(100% + 10px);\n          left: -5px;\n        }\n        .block::after {\n          height: calc(100vh - ${itemHeight});\n        }\n        .overflow-touch {\n          -webkit-overflow-scrolling: touch;\n        }\n      `}</style>\n    </Tag>\n  )\n}\n\nStickyDrawer.propTypes = {\n  tagName: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['default']),\n  children: PropTypes.node,\n}\n\nexport default StickyDrawer\n"],"names":["Container","__name","caption","description","itemHeight","totalItems","index","backgroundColor","color","top","bottom","height","_jsx","__html","Placeholder","Item","items","_Fragment","colors","length","StickyDrawer","tagName","Tag","motion","div","className","variant","triggerOnce","ref","inView","entry","useInView","threshold","s","sticky_drawer","counterReset","margin","map","i","propTypes","PropTypes","string","oneOf","children","node","StickyDrawer$1"],"mappings":"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"}