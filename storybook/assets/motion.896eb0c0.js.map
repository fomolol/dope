{"version":3,"file":"motion.896eb0c0.js","sources":["../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/types.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/utils.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/is-point.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/is-point-3d.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/distance.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/process.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/warn-once.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/animation.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/motion.mjs"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n","import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n","import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { mix, progress, clamp } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.15\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.15 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { mix, progress, circOut, linear } from 'popmotion';\nimport { percent, px } from 'style-value-types';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n"],"names":["MotionContext","createContext","useVisualElementContext","useContext","__name","PresenceContext","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","MotionConfigContext","visualElementRef","useRef","visualElement","useIsomorphicLayoutEffect","useEffect","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","createDefinition","propNames","featureDefinitions","loadFeatures","features","key","globalProjectionState","id","useProjectionId","useConstant","LayoutGroupContext","VisualElementHandler","React__default","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","MotionComponent","configAndProps","layoutId","useLayoutId","isStatic","projectionId","undefined","isBrowser","lazyStrictMode","strict","initialLayoutGroupConfig","_jsxs","_jsx","ForwardRefComponent","forwardRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","translateAlias","sortTransformProps","a","b","buildTransform","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","isCSSVariable","getValueAsType","value","type","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","isMotionValue","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","animationProps","tapProps","panProps","inViewProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","px","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","resolveMotionValue","unwrappedValue","isCustomValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","AnimationType","addDomEvent","eventName","handler","useDomEvent","useFocusGesture","whileFocus","animationState","onFocus","onBlur","isMouseEvent","event","isTouchEvent","filterPrimaryPointer","eventHandler","defaultPagePoint","pointFromTouch","e","pointType","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","supportsTouchEvents","supportsMouseEvents","mouseEventNames","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","useHoverGesture","onHoverStart","onHoverEnd","whileHover","isNodeOrChild","child","useUnmountEffect","isPoint","isPoint3D","distance1D","distance","isNum","xDelta","yDelta","zDelta","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","pipe","defaultEnvironment","env","warned","warnOnce","condition","message","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","shouldObserve","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","rootMargin","amount","once","intersectionCallback","isIntersecting","fallback","makeRenderlessComponent","hook","gestureAnimations","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","testValueType","auto","dimensionValueTypes","number","percent","degrees","vw","vh","findDimensionValueType","valueTypes","color","complex","findValueType","getCurrent","current","getVelocity","velocity","resolveVariant","setMotionValue","motionValue","setTarget","resolveFinalValueInKeyframes","checkTargetForNewValues","_a","_b","newValueKeys","numNewValues","i","targetValue","getAnimatableNone","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","animateVisualElement","animation","animations","variant","animateVariant","resolvedDefinition","animateTarget","getAnimation","getChildAnimations","forwardDelay","delayChildren","staggerChildren","staggerDirection","animateChildren","when","first","last","delay","transitionOverride","willChange","animationTypeState","shouldBlockAnimation","valueTransition","startAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","safeToRemove","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","timestamp","getFrameData","onStart","onMove","transformPoint","sync","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","cancelSync","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","secondsToMilliseconds","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","delta","mix","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","min","max","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","progress","clamp","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","x","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","scale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","cssVariableRegex","parseCSSVariable","match","token","getVariableValue","depth","resolveCSSVariables","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","to","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","from","fromType","toType","numKeyframes","fromIndex","invariant","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","featureNames","numFeatures","propEventHandlers","VisualElement","initialMotionValues","_props","_c","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","isStrict","ProjectionNodeConstructor","isEnabled","layoutScroll","canMutate","startAtParent","numVariantProps","closestVariantNode","defaultValue","valueFromInitial","SubscriptionManager","args","DOMVisualElement","transformValues","isMounted","parsed","getComputedStyle","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","SVGVisualElement","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","add","didUpdate","addEventListener","setOptions","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","render","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","_d","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","circOut","linear","easing","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","_e","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","getValueTransition","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","relativeParent","isProjectionDirty","isTransformDirty","isShared","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","stack","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","featureBundle","motion"],"mappings":"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"}