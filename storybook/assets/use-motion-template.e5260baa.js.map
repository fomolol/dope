{"version":3,"file":"use-motion-template.e5260baa.js","sources":["../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-on-change.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../../node_modules/.pnpm/framer-motion@7.6.15_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-motion-template.mjs"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.onChange(setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler, cleanup) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cleanup();\n        };\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync, { cancelSync } from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, () => sync.update(updateValue, false, true), () => cancelSync.update(updateValue));\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { useCombineMotionValues } from './use-combine-values.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\nexport { useMotionTemplate };\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","__name","useOnChange","callback","useIsomorphicLayoutEffect","isMotionValue","useMultiOnChange","values","handler","cleanup","subscriptions","unsubscribe","useCombineMotionValues","combineValues","updateValue","sync","cancelSync","useMotionTemplate","fragments","numFragments","buildValue","output","i"],"mappings":"sMAsBA,SAASA,EAAeC,EAAS,CAC7B,MAAMC,EAAQC,EAAY,IAAMC,EAAYH,CAAO,CAAC,EAM9C,CAAE,SAAAI,CAAQ,EAAKC,EAAU,QAAA,WAACC,CAAmB,EACnD,GAAIF,EAAU,CACV,KAAM,EAAGG,CAAS,EAAIC,EAAQ,QAAA,SAACR,CAAO,EACtCS,EAAS,QAAA,UAAC,IAAMR,EAAM,SAASM,CAAS,EAAG,CAAE,CAAA,CAChD,CACD,OAAON,CACX,CAbSS,EAAAX,EAAA,kBCnBT,SAASY,EAAYV,EAAOW,EAAU,CAClCC,EAA0B,IAAM,CAC5B,GAAIC,EAAcb,CAAK,EACnB,OAAOA,EAAM,SAASW,CAAQ,CAC1C,EAAO,CAACA,CAAQ,CAAC,CACjB,CALSF,EAAAC,EAAA,eAMT,SAASI,EAAiBC,EAAQC,EAASC,EAAS,CAChDL,EAA0B,IAAM,CAC5B,MAAMM,EAAgBH,EAAO,IAAKf,GAAUA,EAAM,SAASgB,CAAO,CAAC,EACnE,MAAO,IAAM,CACTE,EAAc,QAASC,GAAgBA,EAAa,CAAA,EACpDF,GACZ,CACA,CAAK,CACL,CARSR,EAAAK,EAAA,oBCLT,SAASM,EAAuBL,EAAQM,EAAe,CAInD,MAAMrB,EAAQF,EAAeuB,EAAa,CAAE,EAOtCC,EAAcb,EAAA,IAAMT,EAAM,IAAIqB,EAAe,CAAA,EAA/B,eAKpB,OAAAC,IAKAR,EAAiBC,EAAQ,IAAMQ,EAAK,OAAOD,EAAa,GAAO,EAAI,EAAG,IAAME,EAAW,OAAOF,CAAW,CAAC,EACnGtB,CACX,CAvBSS,EAAAW,EAAA,0BCoBT,SAASK,EAAkBC,KAAcX,EAAQ,CAI7C,MAAMY,EAAeD,EAAU,OAC/B,SAASE,GAAa,CAClB,IAAIC,EAAS,GACb,QAASC,EAAI,EAAGA,EAAIH,EAAcG,IAC9BD,GAAUH,EAAUI,GACNf,EAAOe,KAEjBD,GAAUd,EAAOe,GAAG,IAAG,GAE/B,OAAOD,CACV,CATQ,OAAApB,EAAAmB,EAAA,cAUFR,EAAuBL,EAAQa,CAAU,CACpD,CAhBSnB,EAAAgB,EAAA"}